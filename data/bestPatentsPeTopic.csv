code,Unnamed: 0,title,pub_date,citations,abstract,class,year,abstract_processed,topic,class_topic,core,louvain,topiclouvain,GTcore
JP6239807B1,41,Method and system for behavior analysis of mobile device behavior based on user persona information ,2017-11-29,"['KR101720930B1', 'CN106575327B', 'US9747430B2', 'US10089459B2', 'US20190108353A1', 'CN107077551B', 'KR20160138982A', 'US9378390B2', 'US10735432B2', 'JP5976780B2', 'KR101810346B1', 'US10728270B2', 'US20190281076A1', 'US10304114B2', 'US9779236B2', 'KR20170015129A', 'US20180375869A1', 'CN105531712B', 'US9747440B2', 'KR102057565B1', 'CN104272787B', 'US9756066B2', 'US20170353817A1']","

 The computing device processor identifies behavioral techniques and machine learning techniques to identify, prevent, correct, or otherwise respond to malicious or performance degrading behavior of computing devices. It may consist of processor executable instructions for implementing the method used. As part of these actions, the processor generates user persona information that characterizes the user based on the user's activity, preferences, age, occupation, habit, mood, emotional state, personality, device usage pattern, etc. Can do. The processor dynamically determines the number of device features that are monitored or evaluated within the computing device and is most relevant to determining if the device behavior does not match the pattern of normal usage of the computing device by the user The persona information of the user can be used to identify the device behavior to do and to better identify or respond better to the non-benign behavior of the computing device.

",G06,2017,"

 the computing device processor identifies behavioral techniques and machine learning techniques to identify prevent correct or otherwise respond to malicious or performance degrading behavior of computing devices it may consist of processor executable instructions for implementing the method used as part of these actions the processor generates user persona information that characterizes the user based on the user's activity preferences age occupation habit mood emotional state personality device usage pattern etc can do the processor dynamically determines the number of device features that are monitored or evaluated within the computing device and is most relevant to determining if the device behavior does not match the pattern of normal usage of the computing device by the user the persona information of the user can be used to identify the device behavior to do and to better identify or respond better to the non-benign behavior of the computing device

",0,G06_0,2,5.0,5.0,5.0
US10104107B2,162,Methods and systems for behavior-specific actuation for real-time whitelisting ,2018-10-16,"['JP6140808B2', 'JP6188956B2', 'US9596257B2', 'CN105830080B', 'CN106133642B', 'US8584242B2', 'US9779236B2', 'WO2018086544A1', 'US9189624B2', 'CN106716382B', 'US9753796B2', 'CN107580699A', 'KR102057565B1', 'US10762206B2', 'EP3271860B1', 'US10783254B2', 'JP6161807B2', 'US9756066B2', 'US10742676B2']","
Various embodiments include methods of evaluating device behaviors in a computing device and enabling white listing of particular behaviors. Various embodiments may include monitoring activities of a software application operating on the computing device, and generating a behavior vector information structure that characterizes a first monitored activity of the software application. The behavior vector information structure may be applied to a machine learning classifier model to generate analysis results. The analysis results may be used to classify the first monitored activity of the software application as one of benign, suspicious, and non-benign. A prompt may be displayed to the user that requests that the user select whether to whitelist the software application in response to classifying the first monitored activity of the software application as suspicious or non-benign. The first monitored activity may be added to a whitelist of device behaviors in response to receiving a user input.
",G06,2018,"
various embodiments include methods of evaluating device behaviors in a computing device and enabling white listing of particular behaviors various embodiments may include monitoring activities of a software application operating on the computing device and generating a behavior vector information structure that characterizes a first monitored activity of the software application the behavior vector information structure may be applied to a machine learning classifier model to generate analysis results the analysis results may be used to classify the first monitored activity of the software application as one of benign suspicious and non-benign a prompt may be displayed to the user that requests that the user select whether to whitelist the software application in response to classifying the first monitored activity of the software application as suspicious or non-benign the first monitored activity may be added to a whitelist of device behaviors in response to receiving a user input
",0,G06_0,2,5.0,5.0,5.0
US9910984B2,164,Methods and systems for on-device high-granularity classification of device behaviors using multi-label models ,2018-03-06,"['US9779236B2', 'KR102160659B1', 'EP2836955B1', 'US9747440B2', 'KR102057565B1', 'CN105830080B', 'US10762206B2', 'EP3271860B1', 'US9189624B2', 'US20190318089A1', 'JP6161807B2', 'US9756066B2', 'CN106133642B', 'JP6188956B2', 'CN106716382B', 'US9753796B2', 'US10742676B2']","
Various aspects include methods and computing devices implementing the methods for evaluating device behaviors in the computing devices. Aspect methods may include using a behavior-based machine learning technique to classify a device behavior as one of benign, suspicious, and non-benign. Aspect methods may include using one of a multi-label classification and a meta-classification technique to sub-classify the device behavior into one or more sub-categories. Aspect methods may include determining a relative importance of the device behavior based on the sub-classification, and determining whether to perform robust behavior-based operations based on the determined relative importance of the device behavior.
",G06,2018,"
various aspects include methods and computing devices implementing the methods for evaluating device behaviors in the computing devices aspect methods may include using a behavior-based machine learning technique to classify a device behavior as one of benign suspicious and non-benign aspect methods may include using one of a multi-label classification and a meta-classification technique to sub-classify the device behavior into one or more sub-categories aspect methods may include determining a relative importance of the device behavior based on the sub-classification and determining whether to perform robust behavior-based operations based on the determined relative importance of the device behavior
",0,G06_0,2,5.0,5.0,5.0
US9330257B2,183,Adaptive observation of behavioral features on a mobile device ,2016-05-03,"['US10015178B2', 'US10397262B2', 'TWI606360B', 'EP3375159B1', 'CN105830080B', 'US10505991B1', 'JP6709845B2', 'US10419458B2', 'JP6161807B2', 'US10516686B2', 'US10097561B2', 'US10681060B2', 'US10341363B1', 'US20190068627A1', 'US20180041537A1']","
Methods, devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently, dynamically, and/or adaptively determine computing device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the mobile device behaviors are to be observed. The various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing, memory, or energy resources.
",G06,2016,"
methods devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently dynamically and/or adaptively determine computing device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the mobile device behaviors are to be observed the various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing memory or energy resources
",0,G06_0,2,5.0,5.0,5.0
US9158604B1,184,Lightweight data-flow tracker for realtime behavioral analysis using control flow ,2015-10-13,"['JP6235000B2', 'US20180300484A1', 'US20140201807A1', 'KR102057565B1', 'CN105830080B', 'US10762206B2', 'US10122747B2', 'US9813445B2', 'US10063585B2', 'JP6161807B2', 'US9438620B2', 'US9753796B2', 'US8584242B2']","
Methods and devices for detecting performance-degrading behaviors include identifying a data source component that inputs data into an application executing on a mobile device, and identifying a data sink component that consumes data output from the application. Using a measured runtime control-flow parameter, a likelihood that the data source component is a critical data resource may be determined. Using the probability value, a behavior model that identifies a mobile device feature associated with the critical data resource may be updated and used to determine whether the software application is malicious. Measured runtime control-flow parameters may include a program execution distance between data source and sink components based on heuristics. Determining program execution distances between data sources and sinks may include computing call graph distances by comparing a source call stack length and a sink call stack length, or by counting method invocations or functional calls between data sources and sinks.
",G06,2015,"
methods and devices for detecting performance-degrading behaviors include identifying a data source component that inputs data into an application executing on a mobile device and identifying a data sink component that consumes data output from the application using a measured runtime control-flow parameter a likelihood that the data source component is a critical data resource may be determined using the probability value a behavior model that identifies a mobile device feature associated with the critical data resource may be updated and used to determine whether the software application is malicious measured runtime control-flow parameters may include a program execution distance between data source and sink components based on heuristics determining program execution distances between data sources and sinks may include computing call graph distances by comparing a source call stack length and a sink call stack length or by counting method invocations or functional calls between data sources and sinks
",0,G06_0,2,5.0,5.0,5.0
US9774614B2,190,Methods and systems for side channel analysis detection and protection ,2017-09-26,"['US20190245894A1', 'EP2850864B1', 'US9747440B2', 'US10762206B2', 'EP3271860B1', 'CN104541293B', 'US9742559B2', 'US10783254B2', 'JP6161807B2', 'CN106133642B', 'CN106716382B', 'US9753796B2', 'US10742676B2', 'US20180041537A1']","
A computing device may use machine learning techniques to determine whether a side channel attack is underway and perform obfuscation operations (e.g., operations to raise the noise floor) or other similar operations to stop or prevent a detected side channel attack. The computing device may determine that a side channel attack is underway in response to determining that the computing device is in airplane mode, that the battery of the computing device the battery has been replaced with a stable DC power supply, that the touch-screen display of the computing device has been disconnected, that there are continuous calls to a cipher application programming interface (API) using the same cipher key, that there has been tampering with a behavioral analysis engine of the computing device, or any combination thereof.
",H04,2017,"
a computing device may use machine learning techniques to determine whether a side channel attack is underway and perform obfuscation operations (eg operations to raise the noise floor) or other similar operations to stop or prevent a detected side channel attack the computing device may determine that a side channel attack is underway in response to determining that the computing device is in airplane mode that the battery of the computing device the battery has been replaced with a stable dc power supply that the touch-screen display of the computing device has been disconnected that there are continuous calls to a cipher application programming interface (api) using the same cipher key that there has been tampering with a behavioral analysis engine of the computing device or any combination thereof
",0,H04_0,2,5.0,5.0,5.0
US10762206B2,243,Automated behavioral and static analysis using an instrumented sandbox and machine learning classification for mobile security ,2020-09-01,"['US20190245894A1', 'US10482260B1', 'US10104107B2', 'US10509910B2', 'US9940454B2', 'US20190363893A1', 'US10121000B1', 'US10516531B2', 'US10673902B2', 'US10225286B2', 'US10382459B2', 'US10079859B2', 'US10558800B2', 'AU2015380394B2', 'US9563749B2', 'US9582668B2', 'US10609059B2', 'US10817602B2', 'US10162970B2', 'US10102372B2']","
A method comprises, based on receiving a request to analyze at least a first mobile application, scheduling the request for a first sandbox. The first mobile application is analyzed based on the request, wherein the analysis of the first mobile application comprises performing a behavioral analysis of the first mobile application within the first sandbox and performing a static analysis of the first mobile application. A first feature vector is generated based on data resulting from the analysis of the first mobile application. The first mobile application is determined to comprise malware based, at least in part, on comparing the first feature vector with at least a second feature vector, wherein the second feature vector was generated based on at least one of a static analysis and a behavioral analysis of malware.
",G06,2020,"
a method comprises based on receiving a request to analyze at least a first mobile application scheduling the request for a first sandbox the first mobile application is analyzed based on the request wherein the analysis of the first mobile application comprises performing a behavioral analysis of the first mobile application within the first sandbox and performing a static analysis of the first mobile application a first feature vector is generated based on data resulting from the analysis of the first mobile application the first mobile application is determined to comprise malware based at least in part on comparing the first feature vector with at least a second feature vector wherein the second feature vector was generated based on at least one of a static analysis and a behavioral analysis of malware
",0,G06_0,2,9.0,95.0,5.0
US9756066B2,279,Secure behavior analysis over trusted execution environment ,2017-09-05,"['US9852292B2', 'US10333989B2', 'US10834061B2', 'US10089582B2', 'US10516682B2', 'US10516531B2', 'JP6650439B2', 'US9684775B2', 'KR101789962B1', 'EP3375159B1', 'US10038702B2', 'US9324034B2', 'US10681078B2', 'KR101848576B1', 'US10382459B2', 'US10558800B2', 'US9684870B2', 'US9740859B2', 'US8776180B2', 'US10817602B2', 'US20190349377A1', 'US9794270B2']","
Systems and methods for recognizing and reacting to malicious or performance-degrading behaviors in a mobile computing device include observing mobile device behaviors in an observer module within a privileged-normal portion of a secure operating environment to identify a suspicious mobile device behavior. The observer module may generate a behavior vector based on the observations, and provide the vector to an analyzer module in an unprivileged-secure portion of the secure operating environment. The vector may be analyzed in the unprivileged-secure portion to determine whether the mobile device behavior is benign, suspicious, malicious, or performance-degrading. If the behavior is found to be suspicious, operations of the observer module may be adjusted, such as to perform deeper observations. If the behavior is found to be malicious or performance-degrading behavior the user and/or a client module may be alerted in a secure, tamper-proof manner.
",H04,2017,"
systems and methods for recognizing and reacting to malicious or performance-degrading behaviors in a mobile computing device include observing mobile device behaviors in an observer module within a privileged-normal portion of a secure operating environment to identify a suspicious mobile device behavior the observer module may generate a behavior vector based on the observations and provide the vector to an analyzer module in an unprivileged-secure portion of the secure operating environment the vector may be analyzed in the unprivileged-secure portion to determine whether the mobile device behavior is benign suspicious malicious or performance-degrading if the behavior is found to be suspicious operations of the observer module may be adjusted such as to perform deeper observations if the behavior is found to be malicious or performance-degrading behavior the user and/or a client module may be alerted in a secure tamper-proof manner
",0,H04_0,2,9.0,5.0,5.0
US20190068627A1,281,Cloud based security monitoring using unsupervised pattern recognition and deep learning ,2019-02-28,"['US10853161B2', 'JP2019153330A', 'US10484378B2', 'US10447708B2', 'US10735196B2', 'US9923905B2', 'US10541988B2', 'US9785795B2', 'US20190014153A1', 'JP6474890B2', 'EP3198472B1', 'US10348759B2', 'US9740859B2', 'US9571512B2', 'JP6412943B2', 'US9350749B2', 'JP6687799B2', 'US9548994B2', 'US9667661B2', 'US20190007441A1', 'US10375026B2', 'EP3271860B1', 'US10719625B2', 'EP3195560B1', 'EP3183666B1']","
Provided are systems and methods for a cloud security system that learns patterns of user behavior and uses the patterns to detect anomalous behavior in a network. Techniques discussed herein include obtaining activity data from a service provider system. The activity data describes actions performed during use of a cloud service over a period of time. A pattern corresponding to a series of actions performed over a subset of time can be identified. The pattern can be added a model associated with the cloud service. The model represents usage of the cloud service by the one or more users. Additional activity data can be obtained from the service provider system. Using the model, a set of actions can be identified in the additional activity data that do not correspond to the model. The set of actions and an indicator that identifies the set of actions as anomalous can be output.
",H04,2019,"
provided are systems and methods for a cloud security system that learns patterns of user behavior and uses the patterns to detect anomalous behavior in a network techniques discussed herein include obtaining activity data from a service provider system the activity data describes actions performed during use of a cloud service over a period of time a pattern corresponding to a series of actions performed over a subset of time can be identified the pattern can be added a model associated with the cloud service the model represents usage of the cloud service by the one or more users additional activity data can be obtained from the service provider system using the model a set of actions can be identified in the additional activity data that do not correspond to the model the set of actions and an indicator that identifies the set of actions as anomalous can be output
",0,H04_0,2,5.0,5.0,5.0
US9747440B2,282,On-line behavioral analysis engine in mobile device with multiple analyzer model providers ,2017-08-29,"['US20190245894A1', 'US20190268302A1', 'US9940454B2', 'US20190363893A1', 'US9973517B2', 'US9098697B2', 'EP3375159B1', 'US10038702B2', 'US10270786B2', 'US9992228B2', 'US20180041537A1', 'US10701091B1', 'JP2017538186A', 'JP6239807B1', 'US9438613B1', 'US9740859B2', 'US9571512B2', 'US20180167402A1', 'US20160125184A1', 'US9967264B2', 'US10762206B2', 'US10742676B2']","
Methods, systems and devices for generating data models in a client-cloud communication system may include applying machine learning techniques to generate a first family of classifier models that describe a cloud corpus of behavior vectors. Such vectors may be analyzed to identify factors in the first family of classifier models that have the highest probability of enabling a mobile device to better determine whether a mobile device behavior is malicious or benign. Based on this analysis, a second family of classifier models may be generated that identify significantly fewer factors and data points as being relevant for enabling the mobile device to better determine whether the mobile device behavior is malicious or benign based on the determined factors. A mobile device classifier module based on the second family of classifier models may be generated and made available for download by mobile devices, including devices contributing behavior vectors.
",G06,2017,"
methods systems and devices for generating data models in a client-cloud communication system may include applying machine learning techniques to generate a first family of classifier models that describe a cloud corpus of behavior vectors such vectors may be analyzed to identify factors in the first family of classifier models that have the highest probability of enabling a mobile device to better determine whether a mobile device behavior is malicious or benign based on this analysis a second family of classifier models may be generated that identify significantly fewer factors and data points as being relevant for enabling the mobile device to better determine whether the mobile device behavior is malicious or benign based on the determined factors a mobile device classifier module based on the second family of classifier models may be generated and made available for download by mobile devices including devices contributing behavior vectors
",0,G06_0,2,9.0,5.0,5.0
CN104541293B,293,Framework for client cloud behavior analyzer ,2018-02-06,"['US10104107B2', 'JP6630276B2', 'US10740358B2', 'US10140441B2', 'EP2447809B1', 'US20140123289A1', 'US10893055B2', 'CN107077551B', 'CN104348829B', 'US9152787B2', 'US9607146B2', 'JP6227666B2', 'JP6732317B2', 'US10803408B2', 'US20170227995A1', 'US9213831B2', 'EP2801049B1', 'US9613476B2', 'EP3271860B1', 'US9448859B2', 'US9781106B1']","
For generating method, system and the equipment of data model in client cloud communication system, it can be included using machine learning techniques to generate the sorter model of the first family of the cloud corpus of description behavior vector.These vectors can be analyzed, to identify there is highest possibility mobile device is fatefully determined that mobile device behavior is malice or benign factor in the sorter model of the first family.Based on the analysis, based on identified factor, the sorter model of second family can be generated, the factor significantly reduced and data point are identified as with enabling the mobile device fatefully to determine that the mobile device behavior is malice or benign relevant by the sorter model of the second family.Can the sorter model based on the second family generate mobile device classifier modules, and make it can be used for being downloaded by mobile device, including to equipment that behavior vector contributes.
",G06,2018,"
for generating method system and the equipment of data model in client cloud communication system it can be included using machine learning techniques to generate the sorter model of the first family of the cloud corpus of description behavior vectorthese vectors can be analyzed to identify there is highest possibility mobile device is fatefully determined that mobile device behavior is malice or benign factor in the sorter model of the first familybased on the analysis based on identified factor the sorter model of second family can be generated the factor significantly reduced and data point are identified as with enabling the mobile device fatefully to determine that the mobile device behavior is malice or benign relevant by the sorter model of the second familycan the sorter model based on the second family generate mobile device classifier modules and make it can be used for being downloaded by mobile device including to equipment that behavior vector contributes
",0,G06_0,2,5.0,5.0,5.0
US9721212B2,367,Efficient on-device binary analysis for auto-generated behavioral models ,2017-08-01,"['US20170250994A1', 'US9104864B2', 'CN104303538B', 'US20190363893A1', 'US20180027006A1', 'US9998484B1', 'US9213729B2', 'US9781143B1', 'CN105830080B', 'US9330257B2', 'CN106133642B', 'JP2015153428A', 'KR20170015129A', 'CN106716382B', 'US20190068627A1', 'JP2020510926A', 'US8688601B2', 'KR102057565B1', 'US10762206B2', 'US10783254B2', 'US9756066B2', 'US10742676B2']","
Various aspects provide methods implemented by at least one processor executing on a mobile communication device to efficiently identify, classify, model, prevent, and/or correct the non-benign (e.g., performance degrading) conditions and/or behaviors that are related to an application operating on the device. Specifically, in various aspects, the mobile computing device may derive or extract application-specific features by performing a binary analysis of an application and may determine the application's category (e.g., a games, entertainment, or news category) based on the application-specific features. The mobile computing device may also obtain a classifier model associated with the application's category that includes various conditions, features, behaviors and corrective actions that may be used to quickly identify and correct non-benign behaviors (e.g., undesirable, malicious, and/or performance-degrading behaviors) occurring on the mobile computing device that are related to the application.
",G06,2017,"
various aspects provide methods implemented by at least one processor executing on a mobile communication device to efficiently identify classify model prevent and/or correct the non-benign (eg performance degrading) conditions and/or behaviors that are related to an application operating on the device specifically in various aspects the mobile computing device may derive or extract application-specific features by performing a binary analysis of an application and may determine the application's category (eg a games entertainment or news category) based on the application-specific features the mobile computing device may also obtain a classifier model associated with the application's category that includes various conditions features behaviors and corrective actions that may be used to quickly identify and correct non-benign behaviors (eg undesirable malicious and/or performance-degrading behaviors) occurring on the mobile computing device that are related to the application
",0,G06_0,2,5.0,5.0,5.0
CN110119621B,375,"Attack defense method, system and defense device for abnormal system call ",2020-08-21,"['US10356107B1', 'US9563843B2', 'KR101826865B1', 'US10104107B2', 'CN104303538B', 'AU2017254815B2', 'US10248910B2', 'US10089582B2', 'US20160055335A1', 'US9043905B1', 'US20170024660A1', 'US20140279762A1', 'US9324034B2', 'KR101848576B1', 'US20160078362A1', 'US9774614B2', 'US9721212B2', 'US9910984B2', 'US20170046510A1', 'US20160078347A1', 'US20140187177A1']","
The invention relates to an attack defense method, a system and a defense device for abnormal system call, wherein the attack defense method comprises the following steps: when detecting that a program is executed, acquiring a system calling sequence from an operating system, and returning the system calling sequence to a server side; performing feature coding on the system calling sequence through a second encoder to obtain a corresponding second feature vector set, wherein the second encoder is constructed according to coding parameters of a first encoder in a self-coding and decoding module transmitted from a server; and comparing the second feature vectors in the feature space through a regression equation, and determining whether the system call sequence is normal system call according to the comparison result, wherein the regression equation is obtained by the server side performing regression equation operation on the first feature vector set and is transmitted. By implementing the technical scheme of the invention, the detection effectiveness of unseen malicious software can be effectively improved, and the operation resources can be effectively distributed and the hardware overhead cost can be reduced.
",G06,2020,"
the invention relates to an attack defense method a system and a defense device for abnormal system call wherein the attack defense method comprises the following steps: when detecting that a program is executed acquiring a system calling sequence from an operating system and returning the system calling sequence to a server side; performing feature coding on the system calling sequence through a second encoder to obtain a corresponding second feature vector set wherein the second encoder is constructed according to coding parameters of a first encoder in a self-coding and decoding module transmitted from a server; and comparing the second feature vectors in the feature space through a regression equation and determining whether the system call sequence is normal system call according to the comparison result wherein the regression equation is obtained by the server side performing regression equation operation on the first feature vector set and is transmitted by implementing the technical scheme of the invention the detection effectiveness of unseen malicious software can be effectively improved and the operation resources can be effectively distributed and the hardware overhead cost can be reduced
",0,G06_0,2,5.0,5.0,5.0
US9324034B2,380,On-device real-time behavior analyzer ,2016-04-26,"['US20180167402A1', 'CN105830081B', 'US9369476B2', 'US10045218B1', 'KR20140137003A', 'US9672355B2', 'CN104541293B', 'US20190245876A1', 'US10419458B2', 'EP2908495A1', 'KR101837923B1', 'US10728270B2', 'KR101626243B1', 'US9756066B2', 'US10742676B2', 'JP6050560B1']","
Methods, systems and devices for generating data models in a communication system may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors. Such behavior vectors may be used to compute a weight value for one or more nodes of the boosted decision tree. Classifier models factors having a high probably of determining whether a mobile device behavior is benign or not benign based on the computed weight values may be identified. Computing weight values for boosted decision tree nodes may include computing an exclusive answer ratio for generated boosted decision tree nodes. The identified factors may be applied to the corpus of behavior vectors to generate a second family of classifier models identifying fewer factors and data points relevant for enabling the mobile device to determine whether a behavior is benign or not benign.
",G06,2016,"
methods systems and devices for generating data models in a communication system may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors such behavior vectors may be used to compute a weight value for one or more nodes of the boosted decision tree classifier models factors having a high probably of determining whether a mobile device behavior is benign or not benign based on the computed weight values may be identified computing weight values for boosted decision tree nodes may include computing an exclusive answer ratio for generated boosted decision tree nodes the identified factors may be applied to the corpus of behavior vectors to generate a second family of classifier models identifying fewer factors and data points relevant for enabling the mobile device to determine whether a behavior is benign or not benign
",0,G06_0,2,5.0,5.0,5.0
US20170046510A1,382,Methods and Systems of Building Classifier Models in Computing Devices ,2017-02-16,"['EP3080741A2', 'AU2016204068B2', 'US9779236B2', 'CN105590055B', 'KR20170015129A', 'JP2020510926A', 'US9369476B2', 'KR102057565B1', 'CN104541293B', 'US9742559B2', 'US10122747B2', 'US10419458B2', 'KR101626243B1', 'US9756066B2', 'CN106133642B', 'CN106716382B', 'US9753796B2', 'US20190068627A1']","
Methods, and computing devices implementing the methods, use application-based classifier models to improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system predicting whether a software application is causing undesirable or performance depredating behavior. The application-based classifier models may include a reduced and more focused subset of the decision nodes that are included in a full or more complete classifier model that may be received or generated in the computing device. The application groups may be represented by application groups formed of computing device applications sharing related features, and may be generated using one or more clustering algorithms. Lean classifier models may be generated for each of the application group and may incorporate historical user input regarding execution permissions for features of applications within an application group.
",G06,2017,"
methods and computing devices implementing the methods use application-based classifier models to improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system predicting whether a software application is causing undesirable or performance depredating behavior the application-based classifier models may include a reduced and more focused subset of the decision nodes that are included in a full or more complete classifier model that may be received or generated in the computing device the application groups may be represented by application groups formed of computing device applications sharing related features and may be generated using one or more clustering algorithms lean classifier models may be generated for each of the application group and may incorporate historical user input regarding execution permissions for features of applications within an application group
",0,G06_0,2,5.0,5.0,5.0
US9438620B2,406,Control flow graph representation and classification ,2016-09-06,"['US9147072B2', 'US10140451B2', 'EP3404948B1', 'US10176321B2', 'US10104107B2', 'US20200137097A1', 'US9686023B2', 'US10831893B2', 'US10762206B2', 'EP3191960B1', 'US10834124B2', 'US10121000B1', 'US9607146B2', 'US9189624B2', 'US10248910B2', 'US9756066B2', 'US9774614B2', 'US20190297096A1']","
A software sample is identified that includes code and a control flow graph is generated for each of a plurality of functions included in the sample. Features are identified in each of the functions that correspond to instances of a set of control flow fragment types. A feature set is generated for the sample from the identified features.
",H04,2016,"
a software sample is identified that includes code and a control flow graph is generated for each of a plurality of functions included in the sample features are identified in each of the functions that correspond to instances of a set of control flow fragment types a feature set is generated for the sample from the identified features
",0,H04_0,2,5.0,95.0,5.0
US10783254B2,669,Systems and methods for risk rating framework for mobile applications ,2020-09-22,"['US10148667B2', 'US20190245894A1', 'US10114950B2', 'US9411965B2', 'US9686023B2', 'US9721212B2', 'US10762206B2', 'JP6014286B2', 'US20190311134A1', 'US9357397B2', 'EP2756437B1', 'US20190363893A1', 'US9621570B2', 'US9158604B1', 'US9753796B2', 'US10742676B2', 'US9596257B2', 'US20180041537A1']","
Systems, methods and computer readable medium for training a risk rating system for assessing a risk of a mobile application are disclosed. One or more features representing operational characteristics of mobile applications and malware are extracted. A first learning classifier and a second learning classifier are trained using the extracted features. A machine learning risk rating model is generated, based on the combination of the first learning classifier and the second learning classifier to calculate a risk rating based on the features and a correlation of the features. Systems, methods, and computer readable medium for assessing a risk for a mobile application are also disclosed. One or more features of a mobile application are extracted. A learning classifier is applied to the extracted features. A risk rating is determined based on the result of the classifier.
",G06,2020,"
systems methods and computer readable medium for training a risk rating system for assessing a risk of a mobile application are disclosed one or more features representing operational characteristics of mobile applications and malware are extracted a first learning classifier and a second learning classifier are trained using the extracted features a machine learning risk rating model is generated based on the combination of the first learning classifier and the second learning classifier to calculate a risk rating based on the features and a correlation of the features systems methods and computer readable medium for assessing a risk for a mobile application are also disclosed one or more features of a mobile application are extracted a learning classifier is applied to the extracted features a risk rating is determined based on the result of the classifier
",0,G06_0,2,5.0,5.0,5.0
US10045218B1,693,Anomaly detection in streaming telephone network data ,2018-08-07,"['US9774614B2', 'US20180025157A1', 'JP2015153428A', 'EP3731166A1', 'US10367841B2', 'WO2016182668A1', 'EP2945091B1', 'US8560471B2', 'US9910984B2', 'US20200304522A1', 'US9838403B2', 'US9324034B2', 'US9357397B2', 'US10742676B2', 'US9652362B2']","
In one example, a method includes receiving a feature vector that characterizes a call history for a telephone network subscriber, wherein the feature vector comprises respective categorical values for one or more categorical features and respective continuous values for one or more continuous features, and applying, to the categorical values, a first algorithm to determine a categorical score for the feature vector. The example method further includes applying, to the continuous values, an isolation forest algorithm to determine a continuous score for the feature vector, and outputting, in response to determining at least one of the categorical score for the feature vector and the continuous score for the feature vector indicate the feature vector is anomalous, an indication that the feature vector is anomalous.
",H04,2018,"
in one example a method includes receiving a feature vector that characterizes a call history for a telephone network subscriber wherein the feature vector comprises respective categorical values for one or more categorical features and respective continuous values for one or more continuous features and applying to the categorical values a first algorithm to determine a categorical score for the feature vector the example method further includes applying to the continuous values an isolation forest algorithm to determine a continuous score for the feature vector and outputting in response to determining at least one of the categorical score for the feature vector and the continuous score for the feature vector indicate the feature vector is anomalous an indication that the feature vector is anomalous
",0,H04_0,2,5.0,5.0,5.0
US9753796B2,698,"Distributed monitoring, evaluation, and response for multiple devices ",2017-09-05,"['US20190245894A1', 'US9344431B2', 'US9852292B2', 'US10482260B1', 'US10104107B2', 'US9411955B2', 'US20190392174A1', 'US10516682B2', 'US10516531B2', 'JP6227666B2', 'US10348771B2', 'US9609456B2', 'US10382459B2', 'US20180041537A1', 'JP2016181265A', 'US10063654B2', 'US10558800B2', 'EP3262815B1', 'US10348759B2', 'US9582668B2', 'US10657277B2', 'US9756066B2']","
Data is collected from a set of devices. The data is associated with the devices, mobile application programs (apps), web applications, users, or combinations of these. A norm is established using the collected data. The norm is compared with data collected from a particular device. If there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device, a response is initiated.
",G06,2017,"
data is collected from a set of devices the data is associated with the devices mobile application programs (apps) web applications users or combinations of these a norm is established using the collected data the norm is compared with data collected from a particular device if there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device a response is initiated
",0,G06_0,2,9.0,5.0,5.0
US10742676B2,699,Distributed monitoring and evaluation of multiple devices ,2020-08-11,"['US20190245894A1', 'US9344431B2', 'US9852292B2', 'US10482260B1', 'US10104107B2', 'US20190392174A1', 'US20190363893A1', 'US10516682B2', 'US20200322372A1', 'US10516531B2', 'JP6227666B2', 'US9330257B2', 'US10348771B2', 'US10382459B2', 'US20180041537A1', 'US10063654B2', 'US10558800B2', 'EP3262815B1', 'US10348759B2', 'US10509911B2', 'US10657277B2', 'US10817602B2', 'US20190349377A1', 'US9756066B2']","
Data is collected from a set of devices according to a data collection policy. The data is associated with device configuration, device state, or device behavior. A norm is established using the collected data. A different data collection policy is established based on the norm. Data is collected from a particular device according to the different data collection policy. The norm is compared to the data collected from the particular device. If there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device, a message is transmitted to an administrator.
",H04,2020,"
data is collected from a set of devices according to a data collection policy the data is associated with device configuration device state or device behavior a norm is established using the collected data a different data collection policy is established based on the norm data is collected from a particular device according to the different data collection policy the norm is compared to the data collected from the particular device if there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device a message is transmitted to an administrator
",0,H04_0,2,9.0,5.0,5.0
CN105531712B,703,The behavioural analysis based on data flow in mobile device ,2018-07-27,"['CN105229612B', 'US20170228603A1', 'JP6732317B2', 'JP6510610B2', 'US9609456B2', 'US9357397B2', 'CN104704472B', 'US8843346B2', 'CN105556482B', 'US9684870B2', 'US9652362B2', 'JP6050560B1', 'CN102859565B', 'US9613476B2', 'KR102057565B1', 'TWI530141B', 'CN107430660B', 'US9491187B2', 'US9756066B2', 'CN104221026B']","
Method, apparatus and system for detecting suspicious or deterioration performance mobile device behavior, the computing device behavior that intelligently, dynamically and/or adaptively determination will be observed, the behavior to be observed quantity and will be to details or granularity level that mobile device behavior is observed.Various aspects efficiently identify suspicious or deterioration performance mobile device behavior without excessive processing, memory or energy resource amount.
",G06,2018,"
method apparatus and system for detecting suspicious or deterioration performance mobile device behavior the computing device behavior that intelligently dynamically and/or adaptively determination will be observed the behavior to be observed quantity and will be to details or granularity level that mobile device behavior is observedvarious aspects efficiently identify suspicious or deterioration performance mobile device behavior without excessive processing memory or energy resource amount
",0,G06_0,2,5.0,5.0,5.0
US9357397B2,753,Methods and systems for detecting malware and attacks that target behavioral security mechanisms of a mobile device ,2016-05-31,"['EP2850524B1', 'US10701091B1', 'US20180025157A1', 'US20170134405A1', 'JP2017538186A', 'US9832214B2', 'US10025929B2', 'US9369476B2', 'US8607340B2', 'US20200014734A1', 'US9104864B2', 'US20200076804A1', 'US9210182B2', 'US20190363893A1', 'US10742676B2', 'US20180041537A1']","
A behavior-based security system of a computing device may be protected from non-benign behavior, malware, and cyber attacks by configuring the device to work in conjunction with another component (e.g., a server) to monitor the accuracy and performance of the security system, and determine whether the system is working correctly, efficiently, or as expected. This may be accomplished via the server generating artificial attack software, sending the generated artificial attack software to the mobile device to simulate non-benign behavior in the mobile device, such as a cyber attack, and determining whether the behavior-based security system of the mobile device responded adequately to the simulated non-benign behavior. The sever may send a dead-man signal to the mobile device in response to determining that the behavior-based security system of the mobile device did not respond adequately to the simulated non-benign behavior.
",H04,2016,"
a behavior-based security system of a computing device may be protected from non-benign behavior malware and cyber attacks by configuring the device to work in conjunction with another component (eg a server) to monitor the accuracy and performance of the security system and determine whether the system is working correctly efficiently or as expected this may be accomplished via the server generating artificial attack software sending the generated artificial attack software to the mobile device to simulate non-benign behavior in the mobile device such as a cyber attack and determining whether the behavior-based security system of the mobile device responded adequately to the simulated non-benign behavior the sever may send a dead-man signal to the mobile device in response to determining that the behavior-based security system of the mobile device did not respond adequately to the simulated non-benign behavior
",0,H04_0,2,5.0,5.0,5.0
KR20180013940A,788,Cross-module behavioral validation ,2018-02-07,"['KR20180044295A', 'US10104107B2', 'US9858525B2', 'US9323929B2', 'US9684775B2', 'US9690635B2', 'US9330257B2', 'US9609456B2', 'US9357397B2', 'US20140150100A1', 'CN102509039B', 'JP6239807B1', 'US9519775B2', 'US9189624B2', 'JP2018508071A', 'US9774614B2', 'CN106716382B', 'US10187415B2', 'EP3271860B1', 'US9448859B2', 'US9491187B2', 'US20170161478A1']","
Various aspects of systems, methods, and devices enable a method of cross-module behavior verification. A plurality of observer modules of the system may observe the behavior or behaviors of the observed modules of the system. Each of the observer modules may generate a behavioral representation based on the behavior or behavior of the observed module. Each observer module may apply the behavior representation to a suitable behavior classifier model for each observer module. The observer modules may aggregate the groupings of behaviors of the observed module as determined by each of the observer modules. Observer modules may determine whether the observed module is behaving abnormally based on the aggregated classification.

 

",G06,2018,"
various aspects of systems methods and devices enable a method of cross-module behavior verification a plurality of observer modules of the system may observe the behavior or behaviors of the observed modules of the system each of the observer modules may generate a behavioral representation based on the behavior or behavior of the observed module each observer module may apply the behavior representation to a suitable behavior classifier model for each observer module the observer modules may aggregate the groupings of behaviors of the observed module as determined by each of the observer modules observer modules may determine whether the observed module is behaving abnormally based on the aggregated classification

 

",0,G06_0,2,5.0,5.0,5.0
US9448859B2,790,Exploiting hot application programming interfaces (APIs) and action patterns for efficient storage of API logs on mobile devices for behavioral analysis ,2016-09-20,"['US10691824B2', 'US20180167402A1', 'US10657277B2', 'US9973517B2', 'CN104303538B', 'JP6239808B1', 'US9311480B2', 'US9787681B2', 'US10122747B2', 'US20130227641A1', 'JP2015508540A', 'US9438620B2', 'US9787718B2', 'CN106716382B', 'US9753796B2', 'US8584242B2', 'JP6320532B2', 'US9439077B2']","
Methods and devices for detecting suspicious or performance-degrading mobile device behaviors may include performing behavior monitoring and analysis operations to intelligently, dynamically, and/or adaptively determine the mobile device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the behaviors are to be observed. Such behavior monitoring and analysis operations may be performed continuously (or near continuously) in a mobile device without consuming an excessive amount of processing, memory, or energy resources of the mobile device by identifying hot application programming interfaces (APIs) and hot action patterns that are invoked or used most frequently by software applications of the mobile device and storing information regarding these hot APIs and hot action patterns separately and more efficiently.
",G06,2016,"
methods and devices for detecting suspicious or performance-degrading mobile device behaviors may include performing behavior monitoring and analysis operations to intelligently dynamically and/or adaptively determine the mobile device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the behaviors are to be observed such behavior monitoring and analysis operations may be performed continuously (or near continuously) in a mobile device without consuming an excessive amount of processing memory or energy resources of the mobile device by identifying hot application programming interfaces (apis) and hot action patterns that are invoked or used most frequently by software applications of the mobile device and storing information regarding these hot apis and hot action patterns separately and more efficiently
",0,G06_0,2,5.0,5.0,5.0
US9536072B2,841,Machine-learning behavioral analysis to detect device theft and unauthorized device usage ,2017-01-03,"['US10798113B2', 'KR102005110B1', 'US10104107B2', 'US20170293748A1', 'TWI530141B', 'US9448859B2', 'US10546113B2', 'US10089459B2', 'US9495537B2', 'US9690635B2', 'US9324034B2', 'US9357397B2', 'JP2017524172A', 'US9609456B2', 'US9455988B2', 'US20190327237A1', 'US10803408B2', 'US9652362B2']","
The disclosure relates to machine-learning behavioral analysis to detect device theft and unauthorized device usage. In particular, during a training phase, an electronic device may generate a local user profile that represents observed user-specific behaviors according to a centroid sequence, wherein the local user profile may be classified into a baseline profile model that represents aggregate behaviors associated with various users over time. Accordingly, during an authentication phase, the electronic device may generate a current user profile model comprising a centroid sequence re-expressing user-specific behaviors observed over an authentication interval, wherein the current user profile model may be compared to plural baseline profile models to identify the baseline profile model closest to the current user profile model. As such, an operator change may be detected where the baseline profile model closest to the current user profile model differs from the baseline profile model in which the electronic device has membership.
",G06,2017,"
the disclosure relates to machine-learning behavioral analysis to detect device theft and unauthorized device usage in particular during a training phase an electronic device may generate a local user profile that represents observed user-specific behaviors according to a centroid sequence wherein the local user profile may be classified into a baseline profile model that represents aggregate behaviors associated with various users over time accordingly during an authentication phase the electronic device may generate a current user profile model comprising a centroid sequence re-expressing user-specific behaviors observed over an authentication interval wherein the current user profile model may be compared to plural baseline profile models to identify the baseline profile model closest to the current user profile model as such an operator change may be detected where the baseline profile model closest to the current user profile model differs from the baseline profile model in which the electronic device has membership
",0,G06_0,2,5.0,5.0,5.0
CN103262087B,1136,With the irrelevant malware detection based on system action of signing ,2016-05-18,"['US10104107B2', 'US10834061B2', 'US9411955B2', 'US10073966B2', 'US10089459B2', 'US9940454B2', 'US9210182B2', 'JP6345271B2', 'US10248414B2', 'KR101928127B1', 'EP2447877B1', 'EP2850524B1', 'US10033748B1', 'US10908837B2', 'RU2571594C2', 'US20200050765A1', 'US9774614B2', 'US10003547B2', 'US10205744B2', 'US9686023B2', 'US9230107B2', 'US10783254B2', 'US9910984B2', 'US9756066B2', 'US10742676B2']","
Disclose for method, system and computer program with system action basis detection of malicious software. Current operation pattern-recognition for the treatment system that comprises one or more resources is contemplated at least one movable process. Taking described current operation pattern and described in be contemplated to the expected activity level of at least one movable process as described one or more resources for the treatment of system described in basic calculation. Determine the actual activity level of described multiple resources. If deviation detected between described expected activity level and described actual activity level, the source of inexpectancy activity be identified as to the potential cause of described deviation. Whether policy criteria is legal for determining described inexpectancy activity. If described inexpectancy activity is illegal, the described source of described inexpectancy activity is categorized as to Malware.
",G06,2016,"
disclose for method system and computer program with system action basis detection of malicious software current operation pattern-recognition for the treatment system that comprises one or more resources is contemplated at least one movable process taking described current operation pattern and described in be contemplated to the expected activity level of at least one movable process as described one or more resources for the treatment of system described in basic calculation determine the actual activity level of described multiple resources if deviation detected between described expected activity level and described actual activity level the source of inexpectancy activity be identified as to the potential cause of described deviation whether policy criteria is legal for determining described inexpectancy activity if described inexpectancy activity is illegal the described source of described inexpectancy activity is categorized as to malware
",0,G06_0,2,9.0,5.0,5.0
US9495537B2,1219,Adaptive observation of behavioral features on a mobile device ,2016-11-15,"['US9767013B1', 'EP2836955B1', 'KR20180080227A', 'US9438620B2', 'KR102057565B1', 'CN105830080B', 'CN104541293B', 'US9311480B2', 'US10038702B2', 'US9740859B2', 'CN104272786B', 'US9571512B2', 'US10681060B2', 'CN106716382B', 'US10742676B2', 'US20190068627A1']","
Methods, devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently, dynamically, and/or adaptively determine computing device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the mobile device behaviors are to be observed. The various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing, memory, or energy resources.
",G06,2016,"
methods devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently dynamically and/or adaptively determine computing device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the mobile device behaviors are to be observed the various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing memory or energy resources
",0,G06_0,2,5.0,5.0,5.0
US9147072B2,1243,Method and system for performing behavioral analysis operations in a mobile device based on application state ,2015-09-29,"['KR101720930B1', 'JP6140808B2', 'US9973517B2', 'US9378390B2', 'CN105830080B', 'US9438620B2', 'US8584242B2', 'CN104541293B', 'WO2018086544A1', 'CN105531712B', 'CN106716382B', 'US9753796B2', 'US20190068627A1', 'US10762206B2', 'CN104272787B', 'US10776463B2', 'JP6161807B2', 'WO2016054384A1', 'US10742676B2']","
Methods, systems and devices use operating system execution states while monitoring applications executing on a mobile device to perform comprehensive behavioral monitoring and analysis include configuring a mobile device to monitor an activity of a software application, generate a shadow feature value that identifies an operating system execution state of the software application during that activity, generate a behavior vector that associates the monitored activity with the shadow feature value, and determine whether the activity is malicious or benign based on the generated behavior vector, shadow feature value and/or operating system execution states. The mobile device may also be configured to intelligently determine whether the operating system execution state of a software application is relevant to determining whether any of the monitored mobile device behaviors are malicious or suspicious, and monitor only the operating system execution states of the software applications for which such determinations are relevant.
",G06,2015,"
methods systems and devices use operating system execution states while monitoring applications executing on a mobile device to perform comprehensive behavioral monitoring and analysis include configuring a mobile device to monitor an activity of a software application generate a shadow feature value that identifies an operating system execution state of the software application during that activity generate a behavior vector that associates the monitored activity with the shadow feature value and determine whether the activity is malicious or benign based on the generated behavior vector shadow feature value and/or operating system execution states the mobile device may also be configured to intelligently determine whether the operating system execution state of a software application is relevant to determining whether any of the monitored mobile device behaviors are malicious or suspicious and monitor only the operating system execution states of the software applications for which such determinations are relevant
",0,G06_0,2,5.0,5.0,5.0
KR101840156B1,1496,Methods and systems of generating application-specific models for the targeted protection of vital applications ,2018-03-19,"['CN103891242B', 'US20180025157A1', 'US9413781B2', 'US9378390B2', 'US10341363B1', 'US10547642B2', 'US9742559B2', 'US20150256423A1', 'US9189624B2', 'US9756066B2', 'US10742676B2', 'CN105531712B', 'CN106716382B', 'US9753796B2', 'US20180131711A1', 'US20190068627A1', 'US20180198812A1']","

 ,      ,                     .                 ,                 ,                    ,           .Methods, and computing devices implementing the methods improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system that is configured to predict whether a software application is causing undesirable or impractical behavior. The behavior monitoring and analysis system generates a behavior vector featuring activities of the software application and determines whether the generated behavior vector includes distinct behaviors or behavioral cues identifying the software application as a trusted software application, May be configured to quickly and efficiently classify a particular software application as positive by classifying the software application as positive in response to determining that the acquired behavior vector includes a distinct behavior identifying the software application as a trusted software application .


 

",G06,2018,"

                                                                                             methods and computing devices implementing the methods improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system that is configured to predict whether a software application is causing undesirable or impractical behavior the behavior monitoring and analysis system generates a behavior vector featuring activities of the software application and determines whether the generated behavior vector includes distinct behaviors or behavioral cues identifying the software application as a trusted software application may be configured to quickly and efficiently classify a particular software application as positive by classifying the software application as positive in response to determining that the acquired behavior vector includes a distinct behavior identifying the software application as a trusted software application 


 

",0,G06_0,2,9.0,5.0,5.0
CN104205111A,2404,Computing device to detect malware ,2014-12-10,"['US9147072B2', 'US9536072B2', 'US20170024660A1', 'US10104107B2', 'US9607146B2', 'JP6227666B2', 'US8479296B2', 'US10783254B2', 'US9910984B2', 'KR101848576B1', 'US9330257B2', 'US9324034B2', 'CN106133642B', 'CN106716382B', 'US10708288B2', 'US9998484B1']","
Disclosed is an apparatus and method for a computing device to determine if an application is malware. The computing device may include: a query logger to log the behavior of the application on the computing device to generate a log; a behavior analysis engine to analyze the log from the query logger to generate a behavior vector that characterizes the behavior of the application; and a classifier to classify the behavior vector for the application as benign or malware.
",H04,2014,"
disclosed is an apparatus and method for a computing device to determine if an application is malware the computing device may include: a query logger to log the behavior of the application on the computing device to generate a log; a behavior analysis engine to analyze the log from the query logger to generate a behavior vector that characterizes the behavior of the application; and a classifier to classify the behavior vector for the application as benign or malware
",0,H04_0,2,5.0,5.0,5.0
US20190260778A1,2980,Unsupervised spoofing detection from traffic data in mobile networks ,2019-08-22,"['US10038710B2', 'US10104107B2', 'US10248910B2', 'CN106796753B', 'US20170024660A1', 'US9330257B2', 'US9324034B2', 'US9639699B1', 'CN106133642B', 'US9357397B2', 'US20190260770A1', 'US20210014258A1', 'US9369479B2', 'US9712554B2', 'JP6239807B1', 'CN107209818B', 'EP2860937B1', 'KR102057565B1', 'US9910984B2', 'US20180268292A1']","
A method for detecting spoofing attacks from network traffic log data is presented. The method includes training a spoofing attack detector with the network traffic log data received from one or more mobile networks by extracting features that are relevant to spoofing attacks for training data, building a first set of vector representations for the network traffic log data, training an anomaly detection model by employing DAGMM, and obtaining learned parameters of DAGMM. The method includes testing the spoofing attack detector with the network traffic log data received from the one or more mobile networks by extracting features that are relevant to spoofing attacks for testing data, building a second set of vector representations for the network traffic log data, obtaining latent representations of the testing data, computing a z-score of the testing data, and creating a spoofing attack alert report listing traffic logs generating z-scores exceeding a predetermined threshold.
",H04,2019,"
a method for detecting spoofing attacks from network traffic log data is presented the method includes training a spoofing attack detector with the network traffic log data received from one or more mobile networks by extracting features that are relevant to spoofing attacks for training data building a first set of vector representations for the network traffic log data training an anomaly detection model by employing dagmm and obtaining learned parameters of dagmm the method includes testing the spoofing attack detector with the network traffic log data received from the one or more mobile networks by extracting features that are relevant to spoofing attacks for testing data building a second set of vector representations for the network traffic log data obtaining latent representations of the testing data computing a z-score of the testing data and creating a spoofing attack alert report listing traffic logs generating z-scores exceeding a predetermined threshold
",0,H04_0,2,5.0,5.0,5.0
US20180039779A1,3099,Predictive Behavioral Analysis for Malware Detection ,2018-02-08,"['US9813445B2', 'JP2015508540A', 'US10025929B2', 'US10147049B2', 'CN105830080B', 'US9438620B2', 'CN106133642B', 'US8584242B2', 'WO2018086544A1', 'US10122747B2', 'CN105531712B', 'CN106716382B', 'US9753796B2', 'US9747440B2', 'JP6110482B2', 'KR102057565B1', 'EP3271860B1', 'US9742559B2', 'US9756066B2']","
A computing device may be protected from non-benign behavior, malware, and cyber attacks by using a combination of predictive and real-time behavior-based analysis techniques. A computing device may be configured to identify anticipated behaviors of a software application before runtime, analyze the anticipated behaviors before runtime to generate static analysis results, commencing execution of the software application, analyze behaviors of the software application during runtime via a behavior-based analysis system, and control operations of the behavior-based analysis system based on the static analysis results.
",G06,2018,"
a computing device may be protected from non-benign behavior malware and cyber attacks by using a combination of predictive and real-time behavior-based analysis techniques a computing device may be configured to identify anticipated behaviors of a software application before runtime analyze the anticipated behaviors before runtime to generate static analysis results commencing execution of the software application analyze behaviors of the software application during runtime via a behavior-based analysis system and control operations of the behavior-based analysis system based on the static analysis results
",0,G06_0,2,9.0,5.0,5.0
US10681080B1,4269,System and method for assessing android applications malware risk ,2020-06-09,"['US10474817B2', 'US8782792B1', 'US10176321B2', 'US9594904B1', 'US20170161496A1', 'US20170024660A1', 'US10783254B2', 'US9448859B2', 'US10872151B1', 'US10516638B2', 'US9147072B2', 'US9158604B1', 'US10104107B2', 'US10834107B1', 'US8756432B1', 'US9684787B2', 'US9910984B2', 'KR101691719B1', 'US9781144B1', 'US8176559B2']","
A system and method for malware assessment of an unknown application file are provided. The system and method are particularly applicable to malware assessment for Android operating system based applications. The malware assessment increases the confidence in an assessment that an application is benign or malware.
",H04,2020,"
a system and method for malware assessment of an unknown application file are provided the system and method are particularly applicable to malware assessment for android operating system based applications the malware assessment increases the confidence in an assessment that an application is benign or malware
",0,H04_0,2,5.0,5.0,5.0
CN109684837A,6670,A kind of mobile application malware detection method and system towards electric power enterprise ,2019-04-26,"['US9898602B2', 'CN106133642B', 'US10412115B1', 'US20170286678A1', 'US20200014734A1', 'US9607146B2', 'US10762206B2', 'US10181033B2', 'US9495537B2', 'US9324034B2', 'US9703962B2', 'CN104541293B', 'CN105426760B', 'US20160006757A1', 'US20190068627A1', 'KR101848576B1', 'JP6650439B2', 'US10152594B2', 'TWI461952B', 'US9609456B2', 'JP6050560B1']","
A kind of mobile application malware detection method towards electric power enterprise characterized by comprising obtain software to be detected, and the source code that decompiling obtains the software under testing is carried out to the software under testingThe feature vector of the source code is extracted, and the feature vector of the source code is input to the support vector machines disaggregated model constructed in advance and is compared, determines whether the software to be detected is MalwareWherein, the svm classifier model includes: SVM classifier, and the SVM classifier is based on dual weight increment method and is iterated update.Technical solution of the present invention solves the classification learning that support vector machines is not suitable for great amount of samples, the present invention propose it is a kind of based on the SVM Incremental Learning Algorithm of double weighting functions to application sample carry out learning classification, this method can be under the premise of guaranteeing that application class precision does not decline, learning time is reduced to greatest extent, is improved learning efficiency.
",G06,2019,"
a kind of mobile application malware detection method towards electric power enterprise characterized by comprising obtain software to be detected and the source code that decompiling obtains the software under testing is carried out to the software under testingthe feature vector of the source code is extracted and the feature vector of the source code is input to the support vector machines disaggregated model constructed in advance and is compared determines whether the software to be detected is malwarewherein the svm classifier model includes: svm classifier and the svm classifier is based on dual weight increment method and is iterated updatetechnical solution of the present invention solves the classification learning that support vector machines is not suitable for great amount of samples the present invention propose it is a kind of based on the svm incremental learning algorithm of double weighting functions to application sample carry out learning classification this method can be under the premise of guaranteeing that application class precision does not decline learning time is reduced to greatest extent is improved learning efficiency
",0,G06_0,2,5.0,5.0,5.0
EP3751476A1,6830,A system to mitigate against adversarial samples for machine learning and artificial intelligence models ,2020-12-16,"['US9721212B2', 'US9787695B2', 'US9898602B2', 'US9686023B2', 'US9684775B2', 'JP6235681B2', 'US9760716B1', 'US9774614B2', 'KR101789962B1', 'US9948663B1', 'EP3077949B1', 'US9448859B2', 'JP6661768B2', 'US10776463B2', 'US10754845B2', 'US20150286500A1', 'US10104107B2', 'US10254936B2', 'US9767013B1', 'JP6239807B1', 'US9910984B2', 'US20180157638A1', 'JP6650439B2', 'US9330257B2', 'US20180299943A1']","
Embodiments of the disclosure disclose a system to mitigate against adversarial input samples for machine learning (ML)/artificial intelligence (AI) models. According to one embodiment, a system receives a query from a client for a ML service. The system calculates a similarity score for the query based on a number of prior queries received from the client, the similarity score representing a similarity between the received query and the prior queries. The system determines that the query is an adversarial query in response to determining that the similarity score is above a predetermined threshold.
",G06,2020,"
embodiments of the disclosure disclose a system to mitigate against adversarial input samples for machine learning (ml)/artificial intelligence (ai) models according to one embodiment a system receives a query from a client for a ml service the system calculates a similarity score for the query based on a number of prior queries received from the client the similarity score representing a similarity between the received query and the prior queries the system determines that the query is an adversarial query in response to determining that the similarity score is above a predetermined threshold
",0,G06_0,2,5.0,5.0,5.0
US10032010B2,30,"System, device, and method of visual login and stochastic cryptography ",2018-07-24,"['US9071969B2', 'US10839065B2', 'US20190364019A1', 'JP6239808B1', 'US10686818B2', 'CN105229596B', 'US10754935B2', 'US9971891B2', 'US10356069B2', 'US9794228B2', 'JP2017528055A', 'CN104408341B', 'JP6190897B2', 'US9813446B2', 'US10587601B2', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. A log-in process or a user-authentication process, is augmented or enriched by one or more incidental tasks, which force the user to perform additional on-screen interactions or input-unit interactions, which in turn enrich and augment the pool of user interactions from which the system extracts one or more user-specific features. The extracted user-specific features are used as part of the user authentication process, and are further used to differentiate among users.
",G06,2018,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker a log-in process or a user-authentication process is augmented or enriched by one or more incidental tasks which force the user to perform additional on-screen interactions or input-unit interactions which in turn enrich and augment the pool of user interactions from which the system extracts one or more user-specific features the extracted user-specific features are used as part of the user authentication process and are further used to differentiate among users
",1,G06_1,2,0.0,1.0,6.0
US9547766B2,31,"Device, system, and method of detecting malicious automatic script and code injection ",2017-01-17,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9813446B2', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10055560B2,35,"Device, method, and system of detecting multiple users accessing the same account ",2018-08-21,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10397262B2', 'US10164985B2', 'US10839065B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US9225737B2', 'US10686818B2', 'US10834090B2', 'US10586036B2', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2018,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US20170193526A1,36,"Device, system, and method of differentiating among users based on detection of hardware components ",2017-07-06,"['US10164985B2', 'US10395018B2', 'KR101721032B1', 'US20180082304A1', 'US10839065B2', 'US9485275B2', 'US10735432B2', 'US10834090B2', 'US20190236250A1', 'US10157273B2', 'US10686818B2', 'AU2016315900B2', 'US9813441B2', 'CN106716958B', 'US9552470B2', 'US9071969B2', 'US20190364019A1', 'US9264419B1', 'CN104408341B']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, detecting a possible attacker, and flagging a particular financial transaction or a particular retail transaction as being possibly-fraudulent. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are analyzed, and enable extraction of hardware-specific features of a computer mouse, a touchpad, a touch-screen, a keyboard, or other input unit. In some methods, detection of different mouse polling rates or different mouse DPI values, across two different usage sessions in the same financial account, enables the method to detect a possibly-fraudulent transaction.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service detecting a possible attacker and flagging a particular financial transaction or a particular retail transaction as being possibly-fraudulent the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are analyzed and enable extraction of hardware-specific features of a computer mouse a touchpad a touch-screen a keyboard or other input unit in some methods detection of different mouse polling rates or different mouse dpi values across two different usage sessions in the same financial account enables the method to detect a possibly-fraudulent transaction
",1,G06_1,2,0.0,1.0,6.0
US9848009B2,38,Identification of computerized bots and automated cyber-attack modules ,2017-12-19,"['US20160021117A1', 'KR101977845B1', 'US10044730B1', 'US10740758B2', 'US10091180B1', 'EP3368973B1', 'US10735432B2', 'US20170235954A1', 'CN106575401B', 'JP6239808B1', 'US10068076B1', 'CN105229596B', 'US9794228B2', 'US9813446B2', 'US9526006B2', 'US9552470B2', 'US10223517B2', 'US9071969B2', 'US20190364019A1', 'US20200244633A1', 'US10558792B2', 'CN104408341B']","
Devices, systems, and methods of detecting whether an electronic device or computerized device or computer, is being controlled by a legitimate human user, or by an automated cyber-attack unit or malware or automatic script. The system monitors interactions performed via one or more input units of the electronic device. The system searches for abnormal input-user interactions; or for an abnormal discrepancy between: the input-unit gestures that were actually registered by the input unit, and the content that the electronic device reports as allegedly entered via such input units. A discrepancy or abnormality indicates that more-possibly, or necessarily or certainly, a malware or automated script is controlling the electronic device, rather than a legitimate human user. Optionally, an input-output aberration or interference is injected, in order to check for manual corrective actions that only a human user, and not an automated script, is able to perform.
",H04,2017,"
devices systems and methods of detecting whether an electronic device or computerized device or computer is being controlled by a legitimate human user or by an automated cyber-attack unit or malware or automatic script the system monitors interactions performed via one or more input units of the electronic device the system searches for abnormal input-user interactions; or for an abnormal discrepancy between: the input-unit gestures that were actually registered by the input unit and the content that the electronic device reports as allegedly entered via such input units a discrepancy or abnormality indicates that more-possibly or necessarily or certainly a malware or automated script is controlling the electronic device rather than a legitimate human user optionally an input-output aberration or interference is injected in order to check for manual corrective actions that only a human user and not an automated script is able to perform
",1,H04_1,2,0.0,1.0,6.0
US9526006B2,42,"System, method, and device of detecting identity of a user of an electronic device ",2016-12-20,"['US9531710B2', 'KR101977845B1', 'US9531733B2', 'US10032010B2', 'US9547766B2', 'US10740758B2', 'US20170270289A1', 'US10586036B2', 'US10069852B2', 'US20170193526A1', 'US20180107836A1', 'US9921659B2', 'CN107077551B', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'US9477826B2', 'US9621567B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'US9280652B1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2016,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
US9838373B2,43,"System, device, and method of detecting a remote access user ",2017-12-05,"['US10049209B2', 'US9071969B2', 'US20180039990A1', 'US10839065B2', 'US20190364019A1', 'AU2016315900B2', 'CN105229596B', 'US10686818B2', 'US10754935B2', 'US10579784B2', 'US10476873B2', 'US10356069B2', 'US9794228B2', 'CN104408341B', 'US10587601B2', 'CN106716958B', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US9071969B2,44,"System, device, and method of detecting identity of a user of an electronic device ",2015-06-30,"['US9122456B2', 'US9531710B2', 'US9531733B2', 'US10032010B2', 'US9547766B2', 'US10164985B2', 'US20170270289A1', 'US10069852B2', 'US9418221B2', 'US20180107836A1', 'US9921659B2', 'CN104951681B', 'US10565569B2', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'US10621585B2', 'US9477826B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2015,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
US10586036B2,69,"System, device, and method of recovery and resetting of user authentication factor ",2020-03-10,"['US9207772B2', 'US10740758B2', 'US10567376B2', 'JP6820062B2', 'US20200327458A1', 'US20180160309A1', 'CN107077551B', 'US9703953B2', 'US9712558B2', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'US10079853B2', 'US10157273B2', 'US9794228B2', 'US10200360B2', 'US10523680B2', 'US9838373B2', 'US10114935B2', 'US8806610B2', 'US10558792B2', 'JP6565230B2']","
Devices, systems, and methods of password recovery and password reset, as well as resetting or recovering other types of user-authentication factor. A system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service. The system defines a user-specific task or challenge, in which the user is requested to enter a phrase or perform a task. A user-specific feature is extracted from the manner in which the user performs the task. Subsequently, that user-specific feature is utilized instead of a security question, in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task, and monitoring the manner in which the user performs the fresh task.
",G06,2020,"
devices systems and methods of password recovery and password reset as well as resetting or recovering other types of user-authentication factor a system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service the system defines a user-specific task or challenge in which the user is requested to enter a phrase or perform a task a user-specific feature is extracted from the manner in which the user performs the task subsequently that user-specific feature is utilized instead of a security question in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task and monitoring the manner in which the user performs the fresh task
",1,G06_1,2,0.0,1.0,6.0
US10735432B2,88,Personalized inferred authentication for virtual assistance ,2020-08-04,"['US10505926B2', 'US10032010B2', 'US10164985B2', 'US10740758B2', 'US10009327B2', 'US9813454B2', 'US10586036B2', 'US20190363893A1', 'US10509907B2', 'US10257127B2', 'US9848009B2', 'US20170180332A1', 'JP2018033162A', 'US9455988B2', 'US10769635B2', 'JP2019061688A', 'US10032008B2', 'US10044761B2', 'US9794228B2', 'US20200257781A1', 'EP3198911B1', 'US10057227B1', 'KR20200092368A']","
Aspects of the technology described herein provide a mechanism for controlling access to secure computing resources based on inferred user authentication. A current user may be authenticated and access to secure computing resources permitted based on a determined probability that the current user is a legitimate user associated with the secure computing resource. Legitimacy of the current user may be inferred based on a comparison of user-related activity of the current user to a persona model, which may comprise behavior patterns, rules, or other information for identifying a legitimate user. If it is determined that the current user is likely legitimate, then access to secure information may be permitted. However, if it is determined that the current user is likely illegitimate, than a verification procedure may be provided to the current user, such as a temporal, dynamic security challenge based on recent activity conducted by the legitimate user.
",H04,2020,"
aspects of the technology described herein provide a mechanism for controlling access to secure computing resources based on inferred user authentication a current user may be authenticated and access to secure computing resources permitted based on a determined probability that the current user is a legitimate user associated with the secure computing resource legitimacy of the current user may be inferred based on a comparison of user-related activity of the current user to a persona model which may comprise behavior patterns rules or other information for identifying a legitimate user if it is determined that the current user is likely legitimate then access to secure information may be permitted however if it is determined that the current user is likely illegitimate than a verification procedure may be provided to the current user such as a temporal dynamic security challenge based on recent activity conducted by the legitimate user
",1,H04_1,2,0.0,1.0,6.0
US10164985B2,142,"Device, system, and method of recovery and resetting of user authentication factor ",2018-12-25,"['US9207772B2', 'US10740758B2', 'US10567376B2', 'JP6820062B2', 'KR101721032B1', 'US20200327458A1', 'US20180160309A1', 'CN107077551B', 'US9712558B2', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'US10079853B2', 'US10157273B2', 'US10200360B2', 'US9838373B2', 'US10114935B2', 'US8806610B2', 'US10558792B2', 'CN104408341B']","
Devices, systems, and methods of password recovery and password reset, as well as resetting or recovering other types of user-authentication factor. A system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service. The system defines a user-specific task or challenge, in which the user is requested to enter a phrase or perform a task. A user-specific feature is extracted from the manner in which the user performs the task. Subsequently, that user-specific feature is utilized instead of a security question, in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task, and monitoring the manner in which the user performs the fresh task.
",H04,2018,"
devices systems and methods of password recovery and password reset as well as resetting or recovering other types of user-authentication factor a system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service the system defines a user-specific task or challenge in which the user is requested to enter a phrase or perform a task a user-specific feature is extracted from the manner in which the user performs the task subsequently that user-specific feature is utilized instead of a security question in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task and monitoring the manner in which the user performs the fresh task
",1,H04_1,2,0.0,1.0,6.0
US9477826B2,240,"Device, system, and method of detecting multiple users accessing the same account ",2016-10-25,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10686818B2,268,Method and apparatus to detect non-human users on computer systems ,2020-06-16,"['AU2019210493B2', 'US10110619B2', 'US20170085587A1', 'US9547766B2', 'US9626677B2', 'US9690915B2', 'US10579784B2', 'US20200387588A1', 'US20180034850A1', 'US9213990B2', 'US9779423B2', 'JP6239808B1']","
Methods and systems for malicious non-human user detection on computing devices are described. The method includes collecting, by a processing device, raw data corresponding to a user action, converting, by the processing device, the raw data to features, wherein the features represent characteristics of a human user or a malicious code acting as if it were the human user, and comparing, by the processing device, at least one of the features against a corresponding portion of a characteristic model to differentiate the human user from the malicious code acting as if it were the human user.
",H04,2020,"
methods and systems for malicious non-human user detection on computing devices are described the method includes collecting by a processing device raw data corresponding to a user action converting by the processing device the raw data to features wherein the features represent characteristics of a human user or a malicious code acting as if it were the human user and comparing by the processing device at least one of the features against a corresponding portion of a characteristic model to differentiate the human user from the malicious code acting as if it were the human user
",1,H04_1,2,0.0,1.0,6.0
US9690915B2,270,"Device, method, and system of detecting remote access users and differentiating among users ",2017-06-27,"['US10164985B2', 'US9788203B2', 'US10586036B2', 'US20190373018A1', 'KR101721032B1', 'US10230718B2', 'US10049209B2', 'US10187408B1', 'US10754935B2', 'US10735432B2', 'US10834090B2', 'US20170201540A1', 'US20200045076A1', 'US20190236250A1', 'AU2016315900B2', 'US10686818B2', 'US10019744B2', 'US9071969B2', 'US10476873B2', 'US10558792B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, detecting a possible cyber-attacker, detecting a remote access user, and detecting an automated script or malware. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service detecting a possible cyber-attacker detecting a remote access user and detecting an automated script or malware the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10685355B2,575,"Method, device, and system of detecting mule accounts and accounts used for money laundering ",2020-06-16,"['US10164985B2', 'US9788203B2', 'US10740758B2', 'US10586036B2', 'KR101721032B1', 'US10637853B2', 'JP6433978B2', 'US10735432B2', 'US10834090B2', 'US20180189475A1', 'US10769635B2', 'US10108791B1', 'JP6594542B2', 'US10686818B2', 'US9813446B2', 'US20200257781A1', 'US8528091B2', 'US20190364019A1', 'US10476873B2', 'US10356069B2', 'US10037421B2']","
Method, device, and system of detecting a mule bank account, or a bank account used for terror funding or money laundering. A method includes: monitoring interactions of a user with a computing device during online access with a banking account; and based on the monitoring, determining that the online banking account is utilized as a mule bank account to illegally receive and transfer money. The method takes into account one or more indicators, such as, utilization of a remote access channel, utilization of a virtual machine or a proxy server, unique behavior across multiple different account, temporal correlation among operations, detection of a set of operations that follow a pre-defined mule account playbook, detection of multiple incoming fund transfers from multiple countries that are followed by a single outgoing fund transfer to a different country, and other suitable indicators.
",G06,2020,"
method device and system of detecting a mule bank account or a bank account used for terror funding or money laundering a method includes: monitoring interactions of a user with a computing device during online access with a banking account; and based on the monitoring determining that the online banking account is utilized as a mule bank account to illegally receive and transfer money the method takes into account one or more indicators such as utilization of a remote access channel utilization of a virtual machine or a proxy server unique behavior across multiple different account temporal correlation among operations detection of a set of operations that follow a pre-defined mule account playbook detection of multiple incoming fund transfers from multiple countries that are followed by a single outgoing fund transfer to a different country and other suitable indicators
",1,G06_1,2,0.0,1.0,6.0
US10476873B2,577,"Device, system, and method of password-less user authentication and password-less detection of user identity ",2019-11-12,"['US9207772B2', 'US9531733B2', 'US9547766B2', 'US10579784B2', 'US20170193526A1', 'US10055560B2', 'US10565569B2', 'US9519769B2', 'US10685355B2', 'CN106575401B', 'US9779423B2', 'US8646060B1', 'US10298614B2', 'US9477826B2', 'US10200360B2', 'US9838373B2', 'CN104318138B', 'EP3100152B1', 'US10558792B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting possible attackers; as well as password-less user authentication, and password-less detection of user identity. A system or a computing device requires a user to perform a particular unique non-user-defined task, the task optionally being an on-screen connect-the-dots task. The system monitors user interactions, extracts user-specific features that characterizes the manner in which the user performs the tasks; and subsequently relies on such user-specific features as a means for user authentication, optionally without utilizing a password or passphrase. Optionally, a user interface anomaly or interference is intentionally introduced in order to elicit the user to perform corrective gestures, which are optionally used for extraction of additional user-specific features.
",H04,2019,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting possible attackers; as well as password-less user authentication and password-less detection of user identity a system or a computing device requires a user to perform a particular unique non-user-defined task the task optionally being an on-screen connect-the-dots task the system monitors user interactions extracts user-specific features that characterizes the manner in which the user performs the tasks; and subsequently relies on such user-specific features as a means for user authentication optionally without utilizing a password or passphrase optionally a user interface anomaly or interference is intentionally introduced in order to elicit the user to perform corrective gestures which are optionally used for extraction of additional user-specific features
",1,H04_1,2,0.0,1.0,6.0
US10037421B2,578,"Device, system, and method of three-dimensional spatial user authentication ",2018-07-31,"['US9531733B2', 'US10740758B2', 'US10567376B2', 'US10735196B2', 'US9208492B2', 'US20200327458A1', 'EP2733635B1', 'US20160269411A1', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'EP3108397B1', 'US9621567B2', 'US9794228B2', 'US9526006B2', 'US10200360B2', 'US9838373B2', 'US9071969B2', 'US8856543B2', 'US10558792B2', 'CN104408341B', 'US10728761B2', 'CN103797752B']","
Devices, systems, and methods of user authentication. A system includes a spatial challenge unit to distinguish between a human user and a non-human user. The spatial challenge unit requires the user to perform one or more spatial operations that modify the spatial properties of an electronic device operated by the user. Correct performance of the required spatial operations, indicates that the user is human. The system also includes a spatial password unit, which tracks a manner in which a human user handles the electronic device while the user enters a password; and then utilizes this user-specific manner for user authentication, by checking whether a manner in which the user enters his password matches a reference manner of password entry or a historical manner of password entry. The system also utilizes sequence of spatial operations or spatial gestures, as a pure spatial password or purely-spatial user-authentication factor.
",G06,2018,"
devices systems and methods of user authentication a system includes a spatial challenge unit to distinguish between a human user and a non-human user the spatial challenge unit requires the user to perform one or more spatial operations that modify the spatial properties of an electronic device operated by the user correct performance of the required spatial operations indicates that the user is human the system also includes a spatial password unit which tracks a manner in which a human user handles the electronic device while the user enters a password; and then utilizes this user-specific manner for user authentication by checking whether a manner in which the user enters his password matches a reference manner of password entry or a historical manner of password entry the system also utilizes sequence of spatial operations or spatial gestures as a pure spatial password or purely-spatial user-authentication factor
",1,G06_1,2,0.0,1.0,6.0
US9552470B2,600,"Method, device, and system of generating fraud-alerts for cyber-attacks ",2017-01-24,"['US9531733B2', 'US10044730B1', 'US9547766B2', 'US20200396237A1', 'US10474815B2', 'US9971891B2', 'AU2019219712B9', 'US10749887B2', 'US10055560B2', 'US9027134B2', 'US10187408B1', 'US9690915B2', 'US9621570B2', 'US10230746B2', 'US9477826B2', 'US9621566B2', 'US10182031B2', 'US10749884B2', 'US20200304522A1', 'US10728761B2', 'US10192051B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a cyber-attacker. An end-user device (a desktop computer, a laptop computer, a smartphone, a tablet, or the like) interacts and communicates with a server of a computerized server (a banking website, an electronic commerce website, or the like). The interactions are monitored, tracked and logged. User Interface (UI) interferences are intentionally introduced to the communication session; and the server tracks the response or the reaction of the end-user to such communication interferences. The system determines whether the user is a legitimate human user; or a cyber-attacker posing as the legitimate human user. The system displays gauges indicating cyber fraud scores or cyber-attack threat-levels. The system extrapolates from observed fraud incidents and utilizes a rules engine to automatically search for similar fraud events and to automatically detect fraud events or cyber-attackers.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a cyber-attacker an end-user device (a desktop computer a laptop computer a smartphone a tablet or the like) interacts and communicates with a server of a computerized server (a banking website an electronic commerce website or the like) the interactions are monitored tracked and logged user interface (ui) interferences are intentionally introduced to the communication session; and the server tracks the response or the reaction of the end-user to such communication interferences the system determines whether the user is a legitimate human user; or a cyber-attacker posing as the legitimate human user the system displays gauges indicating cyber fraud scores or cyber-attack threat-levels the system extrapolates from observed fraud incidents and utilizes a rules engine to automatically search for similar fraud events and to automatically detect fraud events or cyber-attackers
",1,G06_1,2,0.0,1.0,6.0
US9531733B2,710,"Device, system, and method of detecting a remote access user ",2016-12-27,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US10754935B2', 'AU2016315900B2', 'US10735432B2', 'US10686818B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US10474815B2,776,"System, device, and method of detecting malicious automatic script and code injection ",2019-11-12,"['US10769635B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US20180262476A1', 'AU2016315900B2', 'CN105229596B', 'US10754935B2', 'US10686818B2', 'US10579784B2', 'US10735432B2', 'US10356069B2', 'US9794228B2', 'US10558792B2', 'JP2017528055A', 'CN106716958B', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2019,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US9621567B2,843,"Device, system, and method of detecting hardware components ",2017-04-11,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US9450971B2,1445,"Device, system, and method of visual login and stochastic cryptography ",2016-09-20,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US10754935B2', 'AU2016315900B2', 'US10735432B2', 'US10686818B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US20190156034A1,1977,"System, device, and method of detecting vishing attacks ",2019-05-23,"['US9787723B2', 'US9531733B2', 'US9547766B2', 'US10164985B2', 'US10740758B2', 'US10037531B2', 'KR20180016232A', 'CN107077551B', 'US10776464B2', 'US9674218B2', 'US10754935B2', 'US9558339B2', 'US10735432B2', 'EP3256976B1', 'JP6239808B1', 'US9799080B2', 'US10778626B2', 'US9369479B2', 'US9477826B2', 'US9621567B2', 'US10154134B1', 'US10354054B2', 'US10057227B1', 'US10303864B2']","
Devices, systems, and methods of detecting a vishing attack, in which an attacker provides to a victim step-by-step over-the-phone instructions that command the victim to log-in to his bank account and to perform a dictated banking transaction. The system monitors transactions, online operations, user interactions, gestures performed via input units, and user engagement with User Interface elements. The system detects that the operations performed by the victim, follow a pre-defined playbook of a vishing attack. The system detects that the victim operates under duress or under dictated instructions, as exhibited in irregular doodling activity, data entry rhythm, typographical error introduction rhythm, unique posture of the user, alternating pattern of listening to phone instructions and performing online operations via a computer, and device orientation changes or spatial changes that characterize a device being used to perform an online transaction while also talking on the phone.
",G06,2019,"
devices systems and methods of detecting a vishing attack in which an attacker provides to a victim step-by-step over-the-phone instructions that command the victim to log-in to his bank account and to perform a dictated banking transaction the system monitors transactions online operations user interactions gestures performed via input units and user engagement with user interface elements the system detects that the operations performed by the victim follow a pre-defined playbook of a vishing attack the system detects that the victim operates under duress or under dictated instructions as exhibited in irregular doodling activity data entry rhythm typographical error introduction rhythm unique posture of the user alternating pattern of listening to phone instructions and performing online operations via a computer and device orientation changes or spatial changes that characterize a device being used to perform an online transaction while also talking on the phone
",1,G06_1,2,0.0,1.0,6.0
US10747305B2,3331,"Method, system, and device of authenticating identity of a user of an electronic device ",2020-08-18,"['US9122456B2', 'US9531733B2', 'US10032010B2', 'US10164985B2', 'JP2019021327A', 'US20170270289A1', 'US10069852B2', 'US20170193526A1', 'US20180107836A1', 'US9921659B2', 'CN107077551B', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'AU2015255652B2', 'US9477826B2', 'US9621567B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2020,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
EP3011483A1,5057,"System, device, and method of detecting identity of a user of a mobile electronic device ",2016-04-27,"['CN104408341B', 'JP6542324B2', 'AU2015255652B2', 'US9921659B2', 'US10037421B2', 'US9542541B1', 'US9848009B2', 'US20190347632A1', 'US9531710B2', 'US10740758B2', 'US9832206B2', 'US20170270289A1', 'US10032010B2', 'US10164985B2', 'US9838373B2', 'US10565569B2', 'US10586036B2', 'US20170193526A1', 'US9280652B1', 'US20180107836A1', 'US9203835B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",G06,2016,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,G06_1,2,0.0,1.0,6.0
US20200007565A1,8414,Passive automated content entry detection system ,2020-01-02,"['US20170235954A1', 'US10893055B2', 'CN104408341B', 'US9774614B2', 'KR101789962B1', 'EP3077949B1', 'US9477826B2', 'US10834590B2', 'US10474815B2', 'US10037421B2', 'US10305889B2', 'US10404729B2', 'US9848009B2', 'US9547766B2', 'US10104107B2', 'US9621567B2', 'US9531733B2', 'US10460090B2', 'US10735432B2', 'JP6239807B1']","
An automated content entry detection system to identify inputs received automated agents. Aspects of the automated content entry system include various functional components to perform operations that include: receiving entries that comprise inputs into one or more data entry fields from user accounts; determining behavioral data of the entries based on one or more input attributes of the entries; generating a prediction to be assigned to the user accounts based on the one or more attributes of the entries; and performing operations that include denying further requests received from the automated agents based on the prediction.
",G06,2020,"
an automated content entry detection system to identify inputs received automated agents aspects of the automated content entry system include various functional components to perform operations that include: receiving entries that comprise inputs into one or more data entry fields from user accounts; determining behavioral data of the entries based on one or more input attributes of the entries; generating a prediction to be assigned to the user accounts based on the one or more attributes of the entries; and performing operations that include denying further requests received from the automated agents based on the prediction
",1,G06_1,2,0.0,1.0,6.0
US9866218B2,402,Boolean logic in a state machine lattice ,2018-01-09,"['KR101474598B1', 'JP2004537106A', 'US10380446B2', 'US9164945B2', 'US10817569B2', 'US20190147278A1', 'US8725961B2', 'EP2580659B1', 'US9348784B2', 'TWI506556B', 'CN103443767B', 'TWI489300B', 'KR20050083667A', 'US9104828B2', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US7392229B2', 'US10152113B2', 'US10157208B2', 'CN1759393B', 'US9026485B2', 'US20190087243A1']","
Disclosed are methods and devices, among which is a device that includes a finite state machine lattice. The lattice may includes a programmable Boolean logic cell that may be programmed to perform various logic functions on a data stream. The programmability includes an inversion of a first input to the Boolean logic cell, an inversion of a last output of the Boolean logic cell, and a selection of an AND gate or an OR gate as a final output of the Boolean logic cell. The Boolean logic cell also includes end of data circuitry configured to cause the Boolean logic cell to only output after an end of data signifying the end of a data stream is received at the Boolean logic cell.
",other,2018,"
disclosed are methods and devices among which is a device that includes a finite state machine lattice the lattice may includes a programmable boolean logic cell that may be programmed to perform various logic functions on a data stream the programmability includes an inversion of a first input to the boolean logic cell an inversion of a last output of the boolean logic cell and a selection of an and gate or an or gate as a final output of the boolean logic cell the boolean logic cell also includes end of data circuitry configured to cause the boolean logic cell to only output after an end of data signifying the end of a data stream is received at the boolean logic cell
",2,other_2,2,6.0,14.0,5.0
US9817678B2,403,Methods and systems for detection in a state machine ,2017-11-14,"['KR101474598B1', 'EP2386081B1', 'US10380446B2', 'CN107729989B', 'US10817569B2', 'JP5857072B2', 'US20190147278A1', 'US8725961B2', 'US9348784B2', 'CN103547998B', 'US9104828B2', 'EP1532496B1', 'US10417236B2', 'US10180922B2', 'US9164940B2', 'JP4921638B2', 'US9916145B2', 'US7392229B2', 'US10152113B2', 'US10157208B2', 'US20200285604A1', 'CN1759393B', 'US9026485B2', 'US20190087243A1']","
A device including a data analysis element including a plurality of memory cells. The memory cells analyze at least a portion of a data stream and output a result of the analysis. The device also includes a detection cell. The detection cell includes an AND gate. The AND gate receives result of the analysis as a first input. The detection cell also includes a D flip-flop including an output coupled to a second input of the AND gate.
",G06,2017,"
a device including a data analysis element including a plurality of memory cells the memory cells analyze at least a portion of a data stream and output a result of the analysis the device also includes a detection cell the detection cell includes an and gate the and gate receives result of the analysis as a first input the detection cell also includes a d flip-flop including an output coupled to a second input of the and gate
",2,G06_2,2,6.0,14.0,5.0
US10817569B2,404,Methods and devices for saving and/or restoring a state of a pattern-recognition processor ,2020-10-27,"['KR101996961B1', 'US9866218B2', 'US7680852B2', 'TWI569206B', 'US20040059443A1', 'TWI590096B', 'CN104067282B', 'TWI602120B', 'CN105912992B', 'US8583896B2', 'TWI492062B', 'US6392910B1', 'US10606787B2', 'KR101908768B1', 'KR101012623B1', 'JP6181074B2', 'US10691799B2', 'US9916145B2', 'US9934034B2', 'CN103988212B', 'US10089086B2', 'CN102232216B', 'CN102272776B', 'JP3670160B2', 'US20190087243A1']","
Systems and methods are disclosed for saving and restoring the search state of a pattern-recognition processor. Embodiments include a pattern-recognition processor having a state variable array and a state variable storage array stored in on-chip memory (on-silicon memory with the processor). State variable storage control logic of the pattern-recognition processor may control the saving of state variables from the state variable array to the state variable storage array. The state variable storage control logic may also control restoring of the state variables from the state variable storage array to restore a search state.
",G06,2020,"
systems and methods are disclosed for saving and restoring the search state of a pattern-recognition processor embodiments include a pattern-recognition processor having a state variable array and a state variable storage array stored in on-chip memory (on-silicon memory with the processor) state variable storage control logic of the pattern-recognition processor may control the saving of state variables from the state variable array to the state variable storage array the state variable storage control logic may also control restoring of the state variables from the state variable storage array to restore a search state
",2,G06_2,2,6.0,14.0,5.0
US10366009B2,405,Methods and systems for handling data received by a state machine engine ,2019-07-30,"['US8843523B2', 'EP3709224A1', 'US10380446B2', 'CN107729989B', 'CN103003792B', 'US9164945B2', 'US10817569B2', 'US8131659B2', 'JP5857072B2', 'US20190147278A1', 'US8725961B2', 'TWI506556B', 'KR101033429B1', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US7392229B2', 'US9639493B2', 'US10157208B2', 'CN1759393B', 'US9026485B2']","
A data analysis system to analyze data. The data analysis system includes a data buffer configured to receive data to be analyzed. The data analysis system also includes a state machine lattice. The state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis. The data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice.
",G06,2019,"
a data analysis system to analyze data the data analysis system includes a data buffer configured to receive data to be analyzed the data analysis system also includes a state machine lattice the state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis the data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice
",2,G06_2,2,6.0,14.0,5.0
US7392229B2,793,General purpose set theoretic processor ,2008-06-24,"['US9535861B2', 'US9866218B2', 'US9817678B2', 'US10417236B2', 'US9886017B2', 'US10152113B2', 'US10817569B2', 'US10909452B2', 'US10733508B2', 'US10572414B2', 'US10366009B2', 'US8725961B2', 'US9164940B2']","
A general purpose processor architecture (methods and apparatuses) that can discern all subsets of a serial data stream which fulfill an arbitrarily complex reference pattern. The invention comprises an ordered set of Detection Cells conditionally interconnected according to the reference pattern and operationally controlling one another's states through the network. The invention preferably includes a Host Interface to enable reporting of Results from a search session as well as the input and control of reference patterns and source data.
",G06,2008,"
a general purpose processor architecture (methods and apparatuses) that can discern all subsets of a serial data stream which fulfill an arbitrarily complex reference pattern the invention comprises an ordered set of detection cells conditionally interconnected according to the reference pattern and operationally controlling one another's states through the network the invention preferably includes a host interface to enable reporting of results from a search session as well as the input and control of reference patterns and source data
",2,G06_2,2,6.0,14.0,5.0
US10152113B2,794,Dynamic power-down of a block of a pattern-recognition processor ,2018-12-11,"['KR102061754B1', 'KR101996961B1', 'US9866218B2', 'CN106852185B', 'US7680852B2', 'TWI569206B', 'CN104067282B', 'US7451143B2', 'KR20050085299A', 'CN105912992B', 'JP6122121B2', 'US8583896B2', 'US6392910B1', 'US10366009B2', 'US20190278612A1', 'KR102168930B1', 'JP6207605B2', 'JP6181074B2', 'CN103988212B', 'JP6041987B2', 'US7392229B2', 'CN102232216B', 'JP2008547106A', 'US9792097B2']","
A device includes a pattern-recognition processor. The pattern recognition processor includes blocks, such that each of the blocks include a plurality of feature cells configured to analyze at least a portion of data to be analyzed and to selectively provide a result of the analysis. The pattern recognition processor also includes block deactivation logic configured to dynamically power-down the block.
",G06,2018,"
a device includes a pattern-recognition processor the pattern recognition processor includes blocks such that each of the blocks include a plurality of feature cells configured to analyze at least a portion of data to be analyzed and to selectively provide a result of the analysis the pattern recognition processor also includes block deactivation logic configured to dynamically power-down the block
",2,G06_2,2,6.0,14.0,5.0
US9164940B2,799,Methods and systems to accomplish variable width data input ,2015-10-20,"['TWI569206B', 'US7539032B2', 'US10733508B2', 'CN104067282B', 'JP2014182810A', 'US10366009B2', 'US20080071780A1', 'US10606787B2', 'KR101873619B1', 'JP2745949B2', 'EP1994474B1', 'CN102741859B', 'CA1181866A', 'KR101012623B1', 'US10909452B2', 'JP6207605B2', 'JP6181074B2', 'US20050232020A1', 'US9934034B2', 'CN103988212B', 'CN102272714B', 'US4384325A', 'US20050050237A1', 'US7533273B2', 'US7308561B2']","
Disclosed are methods and systems for variable width data input to a pattern-recognition processor. A variable width data input method may include receiving bytes over a data bus having a first width and receiving one or more signals indicating the validity of each of the one or more bytes. The valid bytes may be sequentially provided to a pattern-recognition processor in an 8-bit wide data stream. In an embodiment, a system may include one or more address lines configured to provide the one or more signals indicating the validity of the bytes transferred over the data bus. The system may include a buffer and control logic to sequentially process the valid bytes.
",G06,2015,"
disclosed are methods and systems for variable width data input to a pattern-recognition processor a variable width data input method may include receiving bytes over a data bus having a first width and receiving one or more signals indicating the validity of each of the one or more bytes the valid bytes may be sequentially provided to a pattern-recognition processor in an 8-bit wide data stream in an embodiment a system may include one or more address lines configured to provide the one or more signals indicating the validity of the bytes transferred over the data bus the system may include a buffer and control logic to sequentially process the valid bytes
",2,G06_2,2,6.0,14.0,5.0
US9026485B2,977,Pattern-recognition processor with matching-data reporting module ,2015-05-05,"['JP4365162B2', 'US9817678B2', 'US7680852B2', 'US20170261956A1', 'US10733508B2', 'US9454322B2', 'TWI502502B', 'CN104011723B', 'KR20050073429A', 'US10606787B2', 'JP2511435B2', 'CN102741859B', 'KR101012623B1', 'US9787706B1', 'US10558804B2', 'JP6051212B2', 'US7792810B1', 'US9934034B2', 'CN102232216B', 'CN102272776B', 'US20200117977A1', 'US7146643B2', 'KR101858311B1']","
Disclosed are methods and devices, among which is a device that includes a pattern-recognition processor. The pattern-recognition processor may include a matching-data reporting module, which may have a buffer and a match event table. The buffer may be coupled to a data stream and configured to store at least part of the data stream, and the match event table may be configured to store data indicative of a buffer location corresponding with a start of a search criterion being satisfied.
",G06,2015,"
disclosed are methods and devices among which is a device that includes a pattern-recognition processor the pattern-recognition processor may include a matching-data reporting module which may have a buffer and a match event table the buffer may be coupled to a data stream and configured to store at least part of the data stream and the match event table may be configured to store data indicative of a buffer location corresponding with a start of a search criterion being satisfied
",2,G06_2,2,6.0,14.0,5.0
US9164945B2,1127,"Devices, systems, and methods to synchronize parallel processing of a single data stream ",2015-10-20,"['US8601013B2', 'TWI488110B', 'CN104603742B', 'US20040059443A1', 'US20130124823A1', 'CN104067282B', 'US7451143B2', 'CN104011723B', 'JP6122121B2', 'US20190079984A1', 'US8583896B2', 'KR20050083877A', 'US4152762A', 'CN103999035B', 'JP2745949B2', 'CN102741859B', 'JP6207605B2', 'CN103988212B', 'CN102272714B', 'US10089086B2', 'CN104011736B', 'CN102232216B', 'US20050050237A1', 'JP6017034B2', 'TWI625631B']","
Disclosed are methods and devices, among which is a system that includes one or more pattern-recognition processors, such as in a pattern-recognition cluster. The pattern-recognition processors may be activated to perform a search of a data stream individually using a chip select or in parallel using a universal select signal. In this manner, the plurality of pattern-recognition processors may be enabled concurrently for synchronized processing of the data stream.
",G06,2015,"
disclosed are methods and devices among which is a system that includes one or more pattern-recognition processors such as in a pattern-recognition cluster the pattern-recognition processors may be activated to perform a search of a data stream individually using a chip select or in parallel using a universal select signal in this manner the plurality of pattern-recognition processors may be enabled concurrently for synchronized processing of the data stream
",2,G06_2,2,6.0,14.0,5.0
US10671295B2,2893,Methods and systems for using state vector data in a state machine engine ,2020-06-02,"['EP2386081B1', 'EP3709224A1', 'US10380446B2', 'CN107729989B', 'US9164945B2', 'US10817569B2', 'JP5753091B2', 'US20190147278A1', 'WO2017124644A1', 'US8725961B2', 'TWI506556B', 'CN103443767B', 'KR101033429B1', 'US9104828B2', 'WO2018205708A1', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US10152113B2', 'US8442927B2', 'US10157208B2', 'CN1759393B', 'US9026485B2']","
A state machine engine includes a state vector system. The state vector system includes an input buffer configured to receive state vector data from a restore buffer and to provide state vector data to a state machine lattice. The state vector system also includes an output buffer configured to receive state vector data from the state machine lattice and to provide state vector data to a save buffer.
",G06,2020,"
a state machine engine includes a state vector system the state vector system includes an input buffer configured to receive state vector data from a restore buffer and to provide state vector data to a state machine lattice the state vector system also includes an output buffer configured to receive state vector data from the state machine lattice and to provide state vector data to a save buffer
",2,G06_2,2,6.0,14.0,5.0
US20180113951A1,4957,Graph traversal using automata processor ,2018-04-26,"['US9348784B2', 'US10817569B2', 'US20200285604A1', 'US9164945B2', 'US9916145B2', 'US10902013B2', 'US7916510B1', 'CN109726806A', 'KR101033429B1', 'US9639493B2', 'CN103443767B', 'US20190095497A1', 'US7392229B2', 'US10152113B2', 'TWI506556B', 'CN104067282B', 'WO2018171717A1', 'US10503716B2', 'KR20160145785A', 'US10191788B2', 'TWI584198B', 'US8843508B2', 'US9026485B2']","
An apparatus includes a state machine engine. The state machine engine may also include an automaton, whereby the automaton is configured to analyze data from a query related to solving a graph. The automaton may further be configured to report an event representative of a satisfaction of a node solving a hop of the graph by a portion of the input data stream.
",G06,2018,"
an apparatus includes a state machine engine the state machine engine may also include an automaton whereby the automaton is configured to analyze data from a query related to solving a graph the automaton may further be configured to report an event representative of a satisfaction of a node solving a hop of the graph by a portion of the input data stream
",2,G06_2,2,6.0,14.0,5.0
US10915450B2,7267,Methods and systems for padding data received by a state machine engine ,2021-02-09,"['US10380446B2', 'US10817569B2', 'CN1759393B', 'US9164945B2', 'US9916145B2', 'JP5387866B2', 'US8725961B2', 'US20160320829A1', 'US9164940B2', 'US20190147278A1', 'US7451459B2', 'KR101033429B1', 'US9639493B2', 'US7392229B2', 'US10157208B2', 'JP6258034B2', 'TWI506556B', 'WO2019085655A1', 'CN103003792B', 'TWI512625B', 'CN107729989B', 'US10417236B2', 'JP5857072B2', 'JP2004537106A', 'US9026485B2']","
A data analysis system to analyze data. The data analysis system includes a data buffer configured to receive data to be analyzed. The data analysis system also includes a state machine lattice. The state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis. The data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice.
",G06,2021,"
a data analysis system to analyze data the data analysis system includes a data buffer configured to receive data to be analyzed the data analysis system also includes a state machine lattice the state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis the data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice
",2,G06_2,2,6.0,14.0,5.0
CN106709345B,276,"Method, system and equipment for deducing malicious code rules based on deep learning method ",2020-05-19,"['CN103336766B', 'US9619758B2', 'CN103544255B', 'CN101166159B', 'JP5460887B2', 'CN103559235B', 'CN107276805B', 'KR101337874B1', 'US8407253B2', 'CN107204960B', 'CN104008166B', 'WO2014000508A1', 'CN106055574B', 'CN103914494B', 'KR20180011254A', 'CN108875040A', 'CN105915555B', 'CN103593418B', 'CN103942340A', 'CN107786575B']","
The invention discloses a method, a system and a terminal device for deducing malicious code rules based on a deep learning method, which creatively apply the word2vec thought to the field of malicious code analysis, train character strings of known malicious codes to obtain character strings with the maximum relevance of the character strings of the malicious codes, and further obtain the character string rules of the malicious codes. The invention can deduce the malicious code rules with low false alarm rate and high coverage rate by fully utilizing the characteristics of the malicious samples so as to optimize the existing virus detection engine and improve the malicious code detection efficiency. The invention can be widely applied to the field of malicious code detection and malicious code analysis.
",G06,2020,"
the invention discloses a method a system and a terminal device for deducing malicious code rules based on a deep learning method which creatively apply the word2vec thought to the field of malicious code analysis train character strings of known malicious codes to obtain character strings with the maximum relevance of the character strings of the malicious codes and further obtain the character string rules of the malicious codes the invention can deduce the malicious code rules with low false alarm rate and high coverage rate by fully utilizing the characteristics of the malicious samples so as to optimize the existing virus detection engine and improve the malicious code detection efficiency the invention can be widely applied to the field of malicious code detection and malicious code analysis
",3,G06_3,2,5.0,2.0,2.0
CN105224075B,399,"Sensor-based mobile search, correlation technique and system ",2019-06-04,"['US10658007B2', 'CN103781522B', 'CN104937586B', 'US10872322B2', 'US20180233028A1', 'US10373616B2', 'US9918183B2', 'US9547873B2', 'US10347028B2', 'CN104113769B', 'US10547574B2', 'US9563902B2', 'US20180204111A1', 'CN103918247B', 'KR102050334B1', 'US10862836B2', 'CN105229566B', 'US20190311422A1']","
Smart phone sensing audio, image, and/or other stimulations from user environment, and spontaneously take action to meet user demand being inferred to or predicting.In an aspect, the technology being described in detail is related to carrying out the cognition based on mobile phone to the scene that the video camera of mobile phone is observed.Image processing tasks applied to the scene can be selected from various choices with the factors such as reference resources cost, resource constraint, other stimulus information (such as audio), task substitutability.Mobile phone can depend on the success that image processing tasks carry out or based on user to the obvious interest of image processing tasks and to the more or fewer resources of the task application.In some schemes, data can submit to cloud and be analyzed or be collected.The cognition and identification of device response appropriate can be assisted by collateral information (such as background environment).Also other a large amount of features and scheme are detailed.
",G06,2019,"
smart phone sensing audio image and/or other stimulations from user environment and spontaneously take action to meet user demand being inferred to or predictingin an aspect the technology being described in detail is related to carrying out the cognition based on mobile phone to the scene that the video camera of mobile phone is observedimage processing tasks applied to the scene can be selected from various choices with the factors such as reference resources cost resource constraint other stimulus information (such as audio) task substitutabilitymobile phone can depend on the success that image processing tasks carry out or based on user to the obvious interest of image processing tasks and to the more or fewer resources of the task applicationin some schemes data can submit to cloud and be analyzed or be collectedthe cognition and identification of device response appropriate can be assisted by collateral information (such as background environment)also other a large amount of features and scheme are detailed
",3,G06_3,2,3.0,15.0,2.0
CN107430379A,833,"Image recognition system, image recognition method, hologram recording medium, hologram reproducing apparatus, hologram reproducing and image photographic device ",2017-12-01,"['TW466476B', 'CN106257396B', 'CN104937586B', 'JP4823890B2', 'US20200357002A1', 'CN102884779B', 'US20190107990A1', 'TW484106B', 'CN101127834B', 'US7647279B2', 'US10147076B2', 'US20180232930A1', 'EP2695147B1', 'CN105579917B', 'CN105224075B', 'US10694386B2', 'US9286461B2']","
View and admire with hologram reproducing apparatus, hologram reproducing before this without effective characteristic using hologram so as to access the function of special content.And for hologram, due to being flooded with the personation approximation product of hologram in itself on the market, even if it is expected that realization suppression forgery effect, still or expects to provide the user with a kind of system for being capable of the simplicity judgement true and false from visual effect.(solution) reads holographic bar line code using portable data assistances such as smart mobile phones, so as to carry out identification to hologram.Now by the light source being illuminated from the control of portable data assistance side to hologram, so as to add reliable identification function, cost will not be improved and without carrying out special fundamental construction.
",G06,2017,"
view and admire with hologram reproducing apparatus hologram reproducing before this without effective characteristic using hologram so as to access the function of special contentand for hologram due to being flooded with the personation approximation product of hologram in itself on the market even if it is expected that realization suppression forgery effect still or expects to provide the user with a kind of system for being capable of the simplicity judgement true and false from visual effect(solution) reads holographic bar line code using portable data assistances such as smart mobile phones so as to carry out identification to hologramnow by the light source being illuminated from the control of portable data assistance side to hologram so as to add reliable identification function cost will not be improved and without carrying out special fundamental construction
",3,G06_3,2,3.0,15.0,2.0
CN102884779B,834,Intuition computational methods and system ,2016-04-20,"['US9918183B2', 'US20170243318A1', 'US20170243246A1', 'US9436883B2', 'KR101661407B1', 'CN104937586B', 'US20170270927A1', 'US10121099B2', 'US9705838B2', 'CN104396284B', 'US10862836B2', 'JP2017010579A', 'US9646335B2', 'US8755837B2', 'JP2019204536A', 'US10872322B2', 'US10007664B2', 'CN102067164B', 'CN106462608B', 'US10262356B2']","
Smart phone sensing from the audio frequency of user environment, image and/or other stimulate, and spontaneously action thus meet user's request that is that infer or that predict.In an aspect, the technology described in detail relate to the cameras observe of mobile phone to scene carry out based on mobile phone cognition.The image processing tasks being applied to described scene can reference resources cost, resource restriction, the factor such as other stimulus informations (such as audio frequency), task substitutability be selected from various choice.Mobile phone can depend on the success that image processing tasks carries out or based on user to the obvious interest of image processing tasks the resource more or less to described task application.In some versions, data can be submitted to cloud and carry out analyzing or collecting.Cognition and the identification of suitable device response can be assisted by collateral information (such as background environment).Also other characteristic sum schemes a large amount of are detailed.
",H04,2016,"
smart phone sensing from the audio frequency of user environment image and/or other stimulate and spontaneously action thus meet user's request that is that infer or that predictin an aspect the technology described in detail relate to the cameras observe of mobile phone to scene carry out based on mobile phone cognitionthe image processing tasks being applied to described scene can reference resources cost resource restriction the factor such as other stimulus informations (such as audio frequency) task substitutability be selected from various choicemobile phone can depend on the success that image processing tasks carries out or based on user to the obvious interest of image processing tasks the resource more or less to described task applicationin some versions data can be submitted to cloud and carry out analyzing or collectingcognition and the identification of suitable device response can be assisted by collateral information (such as background environment)also other characteristic sum schemes a large amount of are detailed
",3,H04_3,2,3.0,15.0,2.0
CN106096405B,1134,A kind of Android malicious code detecting method abstract based on Dalvik instruction ,2019-07-05,"['US9747452B2', 'US8201244B2', 'KR102160659B1', 'US8850581B2', 'US10044750B2', 'CN103761475B', 'US9819689B2', 'US9621571B2', 'CN105022960B']","
A kind of Android malicious code detecting method abstract based on Dalvik instruction, include the following steps: the 1) detection of malicious code and disaggregated model training, Dalvik operation code is extracted from smali file and be abstracted is reduced to command character, the N-Gram sequence signature for abstract Dalvik command character carries out statistics and normalized again, finally establishes Malicious Code Detection model and malice family classification model using the sorting algorithm of machine learning2) APK file to be measured is first pre-processed, extract Dalvik instruction features and makees abstract simplification and N-Gram serializing processing, then pass through the detection of Malicious Code Detection model, tentatively judge whether be malicious codeIf not testing result is just directly given, the malicious code family type is if it is further obtained by malice family classification model.Rapidity of the present invention is good, validity is higher.
",G06,2019,"
a kind of android malicious code detecting method abstract based on dalvik instruction include the following steps: the 1) detection of malicious code and disaggregated model training dalvik operation code is extracted from smali file and be abstracted is reduced to command character the n-gram sequence signature for abstract dalvik command character carries out statistics and normalized again finally establishes malicious code detection model and malice family classification model using the sorting algorithm of machine learning2) apk file to be measured is first pre-processed extract dalvik instruction features and makees abstract simplification and n-gram serializing processing then pass through the detection of malicious code detection model tentatively judge whether be malicious codeif not testing result is just directly given the malicious code family type is if it is further obtained by malice family classification modelrapidity of the present invention is good validity is higher
",3,G06_3,2,5.0,2.0,2.0
CN109447048B,1209,Artificial intelligence early warning system ,2020-12-25,"['CN103578240B', 'CN103273982B', 'CN201893807U', 'US10867398B2', 'CN102981467B', 'US20180048693A1', 'CN103116825B', 'CN104052151A', 'CN105765565A', 'AU2016331221B2', 'CN105023188B', 'CN103839346B', 'CN104537788B', 'CN105187771A', 'CN102545386B', 'CN107211515A', 'CN105427221A', 'CN103839373B', 'US10768625B2', 'CN101795395B', 'CN102724478B', 'CN203799428U']","
The invention relates to an artificial intelligence early warning system which comprises an intelligent internet of things and risk factor data acquisition system (100), a risk factor management system (200), cloud computing (300), cloud storage (400), a cloud database (500), an artificial intelligence early warning operating system (600), an artificial intelligence early warning server (700), an internet + distributed early warning kiosk (800), a five-level artificial intelligence early warning system (900), a four-level artificial intelligence early warning system (1000), a three-level artificial intelligence early warning system (1100), a two-level artificial intelligence early warning system (1200) and a one-level artificial intelligence early warning system (1300). According to the invention, an artificial intelligent early warning system is used for collecting, contrastively analyzing, reasoning, evaluating, cloud computing, cloud storage, grading alarm and coping prevention and control on risk factors; the all-weather 24-hour monitoring on the peripheral control points of the police kiosk is realized, the information sharing can be realized for users, the utilization rate of information resources is improved, and the safety guarantee is increased for maintaining the frontier stability.
",G06,2020,"
the invention relates to an artificial intelligence early warning system which comprises an intelligent internet of things and risk factor data acquisition system (100) a risk factor management system (200) cloud computing (300) cloud storage (400) a cloud database (500) an artificial intelligence early warning operating system (600) an artificial intelligence early warning server (700) an internet + distributed early warning kiosk (800) a five-level artificial intelligence early warning system (900) a four-level artificial intelligence early warning system (1000) a three-level artificial intelligence early warning system (1100) a two-level artificial intelligence early warning system (1200) and a one-level artificial intelligence early warning system (1300) according to the invention an artificial intelligent early warning system is used for collecting contrastively analyzing reasoning evaluating cloud computing cloud storage grading alarm and coping prevention and control on risk factors; the all-weather 24-hour monitoring on the peripheral control points of the police kiosk is realized the information sharing can be realized for users the utilization rate of information resources is improved and the safety guarantee is increased for maintaining the frontier stability
",3,G06_3,2,4.0,78.0,2.0
CN108200030A,1233,"Detection method, system, device and the computer readable storage medium of malicious traffic stream ",2018-06-22,"['CN105068925B', 'CN103782303B', 'TWI234974B', 'US9661003B2', 'CN103679031B', 'EP3254224B1', 'CN104660594B', 'US8443443B2', 'CN106790186B', 'US10185832B2', 'EP3461103A1', 'US20170213037A1', 'CN106341414B', 'CN103870751B', 'US9306889B2', 'KR102017756B1', 'CN104283889B']","
This application discloses a kind of detection method of malicious traffic stream, includingUtilize malice and normal data flow sample the correspondence establishment malice and normal data sample database of acquisitionData cleansing operation and pretreatment operation are performed successively to data sample database, obtain training data, and utilize training data and deep learning algorithm structure flow detection modelJudge whether contain malicious data in testing data flow using flow detection modelIf it does, the warning message for the testing data flow for belonging to malicious data is then carried by preset path transmission.The automatic learning characteristic that deep learning algorithm has is made full use of to carry out feature learning and training from the normal and malicious data sample database of offer, feature information extraction operation is completed without expending valuable human resources, has been obviously improved working efficiency, the discrimination precision for improving malicious traffic stream.The application further simultaneously discloses a kind of detecting system of malicious traffic stream, device and computer readable storage medium, has above-mentioned advantageous effect.
",H04,2018,"
this application discloses a kind of detection method of malicious traffic stream includingutilize malice and normal data flow sample the correspondence establishment malice and normal data sample database of acquisitiondata cleansing operation and pretreatment operation are performed successively to data sample database obtain training data and utilize training data and deep learning algorithm structure flow detection modeljudge whether contain malicious data in testing data flow using flow detection modelif it does the warning message for the testing data flow for belonging to malicious data is then carried by preset path transmissionthe automatic learning characteristic that deep learning algorithm has is made full use of to carry out feature learning and training from the normal and malicious data sample database of offer feature information extraction operation is completed without expending valuable human resources has been obviously improved working efficiency the discrimination precision for improving malicious traffic streamthe application further simultaneously discloses a kind of detecting system of malicious traffic stream device and computer readable storage medium has above-mentioned advantageous effect
",3,H04_3,2,5.0,0.0,2.0
US8872915B1,1561,Doorbell communication systems and methods ,2014-10-28,"['KR102195746B1', 'US9692380B2', 'US10091017B2', 'US10142597B2', 'US9113052B1', 'US10218932B2', 'US10176706B2', 'US9053622B2', 'US10636284B1', 'US9172921B1', 'US10757371B2', 'KR101952298B1', 'US20200020216A1', 'US10440545B2', 'US10586433B2', 'US10411827B2', 'US9628286B1', 'US10902707B1', 'US10284820B2', 'US9286786B2', 'US9547977B2', 'US20200082702A1', 'US10263802B2', 'US10755372B2']","
Methods can include using a doorbell to wirelessly communicate with a remotely located computing device. Doorbells can include a speaker, a microphone, a camera, and a button to sound a chime. A doorbell shipping mode can detect whether the doorbell is electrically coupled to an external power source. Methods can include entering a setup mode or a standby mode in response to detecting electricity from the external power source.
",H04,2014,"
methods can include using a doorbell to wirelessly communicate with a remotely located computing device doorbells can include a speaker a microphone a camera and a button to sound a chime a doorbell shipping mode can detect whether the doorbell is electrically coupled to an external power source methods can include entering a setup mode or a standby mode in response to detecting electricity from the external power source
",3,H04_3,2,15.0,341.0,2.0
CN106980692B,1572,Influence calculation method based on microblog specific events ,2020-12-08,"['US10546006B2', 'KR101475682B1', 'US9372929B2', 'US20170262759A1', 'CN103324665B', 'CN104182389B', 'US20170140058A1', 'US10169419B2', 'US8463795B2', 'CN105069102B', 'CN103699626B', 'US9424319B2']","
The invention relates to a method for calculating influence based on a microblog specific event, and belongs to the technical field of social network analysis and data mining. According to the method, specific events are analyzed and divided relatively according to five stages of event development in the propaganda and are applied to influence calculation, statistical processing and natural language processing are mainly performed on microblog text data and basic user data, six influence indexes with both propagation angles and content angles are calculated, and a K-means machine learning algorithm is used for dividing sub-topics; and finally obtaining the influence heat index EII of the specific event, the user influence ranking list and the message influence ranking list in the event. Compared with the prior art, the method and the device have the advantages that the content indexes of the microblog texts are considered, the information of all aspects of the event is comprehensively and accurately reflected, and the practical significance and the practical value are very strong. In addition, the space-time consumption of the method is low, modularization is easy, large-scale data calculation can be carried out, and the method has good stability.
",G06,2020,"
the invention relates to a method for calculating influence based on a microblog specific event and belongs to the technical field of social network analysis and data mining according to the method specific events are analyzed and divided relatively according to five stages of event development in the propaganda and are applied to influence calculation statistical processing and natural language processing are mainly performed on microblog text data and basic user data six influence indexes with both propagation angles and content angles are calculated and a k-means machine learning algorithm is used for dividing sub-topics; and finally obtaining the influence heat index eii of the specific event the user influence ranking list and the message influence ranking list in the event compared with the prior art the method and the device have the advantages that the content indexes of the microblog texts are considered the information of all aspects of the event is comprehensively and accurately reflected and the practical significance and the practical value are very strong in addition the space-time consumption of the method is low modularization is easy large-scale data calculation can be carried out and the method has good stability
",3,G06_3,2,14.0,268.0,2.0
CN103699626B,1574,Method and system for analysing individual emotion tendency of microblog user ,2017-02-01,"['CN103390051B', 'CN107092596B', 'CN104794212B', 'CA2578513C']","
The invention discloses a method for analysing individual emotion tendency of microblog user. The method comprises the following steps of: acquiring data, separating words, loading a word bank and an emoticon bank, establishing the interested topic bank of the user, dividing short sentences, extracting emotion elements, establishing the individual locution list of the user, calculating a locution emotion value, calculating the topic emotion tendency of the user, and calculating the overall emotion tendency of the user. The invention further discloses a system for analysing individual emotion tendency of microblog user. According to the method and the system disclosed by the invention, an emotion analysis on the single microblog user is realized, and the emotion analysis on the user is combined with specific topics to avoid an indistinct and stiff analysis mode, thus the emotion analysis on the user is more meticulous and directional, and the accuracy of the emotion tendency analysis is improved.
",G06,2017,"
the invention discloses a method for analysing individual emotion tendency of microblog user the method comprises the following steps of: acquiring data separating words loading a word bank and an emoticon bank establishing the interested topic bank of the user dividing short sentences extracting emotion elements establishing the individual locution list of the user calculating a locution emotion value calculating the topic emotion tendency of the user and calculating the overall emotion tendency of the user the invention further discloses a system for analysing individual emotion tendency of microblog user according to the method and the system disclosed by the invention an emotion analysis on the single microblog user is realized and the emotion analysis on the user is combined with specific topics to avoid an indistinct and stiff analysis mode thus the emotion analysis on the user is more meticulous and directional and the accuracy of the emotion tendency analysis is improved
",3,G06_3,2,14.0,268.0,2.0
CN107688742B,1994,Large-scale rapid mobile application APP detection and analysis method ,2020-06-05,"['US8108931B1', 'KR100759798B1', 'US20180121652A1', 'CN108200030A', 'EP3193265A1', 'CN104598824A', 'CN107276805B', 'US20120136812A1', 'CN106709345B', 'US20190065894A1', 'CN103748853B', 'CN105426356B', 'US20160335435A1', 'KR20160132842A', 'EP3139297B1', 'KR101752251B1', 'US10176323B2', 'US10635814B2', 'CN101751535A', 'CN107885999B', 'CN102254111B', 'CN102722709B', 'EP2821927A1', 'CN104123500B', 'KR102171220B1']","
The invention discloses a large-scale rapid mobile application APP detection and analysis method, which comprises the following steps: acquiring a mobile application APP from a mobile application market of a mobile phone; obtaining the natural language characteristics of the APP by using a natural language processing technology facing reverse analysis codes; obtaining DEX image characteristics of the APP by using a characteristic image processing technology facing DEX; and judging whether the APP is the repackaging application or not by using a repackaging verification technology based on fuzzy Hash. If the APP is judged to be malicious application, marking an MALWARE label on the natural language characteristic and the DEX image characteristic of the APP, and putting the MALWARE label into a verification model in a machine learning module; if the APP is judged to be normally applied, NORMAL labels are marked on the natural language features and the DEX image features of the APP, and the APP is placed into a verification model in machine learning.
",G06,2020,"
the invention discloses a large-scale rapid mobile application app detection and analysis method which comprises the following steps: acquiring a mobile application app from a mobile application market of a mobile phone; obtaining the natural language characteristics of the app by using a natural language processing technology facing reverse analysis codes; obtaining dex image characteristics of the app by using a characteristic image processing technology facing dex; and judging whether the app is the repackaging application or not by using a repackaging verification technology based on fuzzy hash if the app is judged to be malicious application marking an malware label on the natural language characteristic and the dex image characteristic of the app and putting the malware label into a verification model in a machine learning module; if the app is judged to be normally applied normal labels are marked on the natural language features and the dex image features of the app and the app is placed into a verification model in machine learning
",3,G06_3,2,5.0,0.0,2.0
CN103761475B,2302,Method and device for detecting malicious code in intelligent terminal ,2017-04-26,"['US7636856B2', 'US20160012225A1', 'US9525706B2', 'CN102779257B', 'CN106161381B', 'US9715593B2', 'CN102831338B', 'US7636945B2']","
The invention discloses a method and a device for detecting a malicious code in an intelligent terminal. The method comprises the steps of obtaining a virtual machine execution file of an application program from an application program layer of an intelligent terminal operation system; performing decompilation on the virtual machine execution file to obtain a decompiled function information structure; resolving the decompiled function information structure and extracting a function call sequence from the decompiled function information structure; utilizing a preset malicious code feature library, performing matching of the function call sequence and conforming that the virtual machine execution file of the application program includes the malicious code if the matching succeeds. By applying the method and the device, the malicious code including situation of the application program can be analyzed and confirmed through the virtual machine execution file of the application program, so that a tampered application program or malicious software can be searched and killed, and the safety of the intelligent terminal can be ensured.
",G06,2017,"
the invention discloses a method and a device for detecting a malicious code in an intelligent terminal the method comprises the steps of obtaining a virtual machine execution file of an application program from an application program layer of an intelligent terminal operation system; performing decompilation on the virtual machine execution file to obtain a decompiled function information structure; resolving the decompiled function information structure and extracting a function call sequence from the decompiled function information structure; utilizing a preset malicious code feature library performing matching of the function call sequence and conforming that the virtual machine execution file of the application program includes the malicious code if the matching succeeds by applying the method and the device the malicious code including situation of the application program can be analyzed and confirmed through the virtual machine execution file of the application program so that a tampered application program or malicious software can be searched and killed and the safety of the intelligent terminal can be ensured
",3,G06_3,2,5.0,2.0,2.0
CN109190372A,2692,A kind of JavaScript Malicious Code Detection model based on bytecode ,2019-01-11,"['US9747452B2', 'TWI515598B', 'CN107180192B', 'CN103559235B', 'CN104881607B', 'CN103544436B', 'CN106709345B', 'CN103106365B', 'CN106096405B', 'US10178107B2', 'US9621570B2', 'CN104077396B', 'CN103177215B']","
The present invention design it is a kind of based on bytecode can be to the system that JavaScript malicious code is detected, by extracting the byte code sequence based on V8 engine, the extraction of term vector is carried out from the angle of context semanteme to byte code sequence, using the sorting algorithm based on shot and long term memory network (Long Short-Term Memory, LSTM) to realize the purpose for accurately and effectively detecting JavaScript malicious code.
",G06,2019,"
the present invention design it is a kind of based on bytecode can be to the system that javascript malicious code is detected by extracting the byte code sequence based on v8 engine the extraction of term vector is carried out from the angle of context semanteme to byte code sequence using the sorting algorithm based on shot and long term memory network (long short-term memory lstm) to realize the purpose for accurately and effectively detecting javascript malicious code
",3,G06_3,2,5.0,2.0,2.0
CN108012121A,3075,A kind of edge calculations and the real-time video monitoring method and system of cloud computing fusion ,2018-05-08,"['CN105631427A', 'CN104935600B', 'CN104348829B', 'CN102348101A', 'CN105279365B', 'CN102340485B', 'CN103839065B', 'CN102163290B', 'CN108200030A', 'US8868985B2', 'CN104809933B', 'CN103914735A', 'CN103870751B', 'CN102098180B', 'CN105303193B', 'CN106845415B', 'CN105975504A']","
The invention discloses the real-time video monitoring method that a kind of edge calculations and cloud computing merge, includingThe training storehouse of sample is built, trains CNN convolutional neural networks using the image information in sample training storehouse, training chip is embedded in front edge equipment by structure CNN convolutional neural networks model structure as training chip contentExtract real-time edge device monitor video, multiple image is decomposed into by original videoChip is trained to carry out feature and Similarity measures to multiple image by CNN convolutional neural networksBy the similitude picture and information that extract storage to long-range cloud device, long term backup management, there is provided calculating is used and analyzed to supervision department, message push relevant departments unit is implemented to alarm to relevant departments.The invention also discloses a kind of real-time video monitoring system.The advantage of the invention is thatSolve Cloud Server mass memory in real time to picture processing using CNN convolutional neural networks image recognitions retrieval technique at edge device end and calculate pressure.
",G06,2018,"
the invention discloses the real-time video monitoring method that a kind of edge calculations and cloud computing merge includingthe training storehouse of sample is built trains cnn convolutional neural networks using the image information in sample training storehouse training chip is embedded in front edge equipment by structure cnn convolutional neural networks model structure as training chip contentextract real-time edge device monitor video multiple image is decomposed into by original videochip is trained to carry out feature and similarity measures to multiple image by cnn convolutional neural networksby the similitude picture and information that extract storage to long-range cloud device long term backup management there is provided calculating is used and analyzed to supervision department message push relevant departments unit is implemented to alarm to relevant departmentsthe invention also discloses a kind of real-time video monitoring systemthe advantage of the invention is thatsolve cloud server mass memory in real time to picture processing using cnn convolutional neural networks image recognitions retrieval technique at edge device end and calculate pressure
",3,G06_3,2,5.0,0.0,2.0
CN104537788A,3367,High voltage electric transmission line external damage-proof intelligent image pre-warning system and method ,2015-04-22,"['CN103021109A', 'CN204024115U', 'CN205656469U', 'CN202196177U', 'CN203465572U', 'CN203204743U', 'CN104079874B', 'CN105187769B', 'CN103203087A', 'CN207092737U', 'CN104700586B', 'CN105989682A', 'CN202331743U', 'CN103065409B', 'CN102821525B', 'CN109447048B', 'CN103514700A', 'CN103281364B', 'CN202067379U', 'CN102931724A', 'CN102231227B', 'CN102446390A', 'CN103578228B', 'CN201773460U', 'CN103676857B']","
The invention discloses a high voltage electric transmission line external damage-proof intelligent image pre-warning system and method. The system comprises front side monitor equipment, a rear side server and user side moving monitor terminals. The front side monitor equipment is arranged on high voltage line iron towers to monitor areas to be monitored. When an objective of hazardous operation is detected, a site image is sent to the server, warning messages and the link of the site image on the server are sent to the moving monitor terminals of corresponding electric inspection personnel, and the rear side server receives image information and performs image preservation and management, log management, and log-in information management of inspection personnel. The user side moving monitor terminals are cell phones which receive the image information and warning message information and send control instructions to the front side monitor equipment to warn in a voice mode. Through adopting an intelligent image recognition algorithm, the high voltage electric transmission line external damage-proof intelligent image pre-warning system and method can monitor field operation in high voltage line areas to be monitored automatically and provide an effective method to high voltage damage-proof applying requirements.
",other,2015,"
the invention discloses a high voltage electric transmission line external damage-proof intelligent image pre-warning system and method the system comprises front side monitor equipment a rear side server and user side moving monitor terminals the front side monitor equipment is arranged on high voltage line iron towers to monitor areas to be monitored when an objective of hazardous operation is detected a site image is sent to the server warning messages and the link of the site image on the server are sent to the moving monitor terminals of corresponding electric inspection personnel and the rear side server receives image information and performs image preservation and management log management and log-in information management of inspection personnel the user side moving monitor terminals are cell phones which receive the image information and warning message information and send control instructions to the front side monitor equipment to warn in a voice mode through adopting an intelligent image recognition algorithm the high voltage electric transmission line external damage-proof intelligent image pre-warning system and method can monitor field operation in high voltage line areas to be monitored automatically and provide an effective method to high voltage damage-proof applying requirements
",3,other_3,2,4.0,78.0,2.0
CN107748786A,3898,Alert big data management system ,2018-03-02,"['CN203720890U', 'CN107046578A', 'CN103441571A', 'CN104517432A', 'CN205507540U', 'CN104852992A', 'CN105554059B', 'CN103391432A', 'CN103955174A', 'CN104040601B', 'CN103327122A', 'CN109447048B', 'CN206069114U', 'CN103607467B', 'CN106709580A', 'CN104537788A', 'CN102023599B', 'WO2017059395A1', 'CN105427221A', 'CN107016057A', 'CN102063690A', 'CN105096508A', 'CN103096032B', 'CN107193375A', 'CN105050224B']","
The invention discloses alert big data management system to includeData prediction subsystem, for anticipating alert data to reduce error in dataConvergence subsystem, for by alert tidal data recovering and being stored in databaseData analytics subsystem, for analyzing and processing deposit to the alert data of databaseData application subsystem, for establishing the algorithm model based on alert data, multiple data warehouses simultaneously carry out data analysis and computingData display subsystem, for showing the data and information that need to showMonitoring management subsystem, for monitoring alert big data management system normal operation.Data prediction subsystem, convergence analyzing and processing subsystem, form data connection between data application subsystem and data display subsystem.The present invention is advantageous in that, there is provided a kind of alert big data management system that can timely and effectively handle alert data.
",G06,2018,"
the invention discloses alert big data management system to includedata prediction subsystem for anticipating alert data to reduce error in dataconvergence subsystem for by alert tidal data recovering and being stored in databasedata analytics subsystem for analyzing and processing deposit to the alert data of databasedata application subsystem for establishing the algorithm model based on alert data multiple data warehouses simultaneously carry out data analysis and computingdata display subsystem for showing the data and information that need to showmonitoring management subsystem for monitoring alert big data management system normal operationdata prediction subsystem convergence analyzing and processing subsystem form data connection between data application subsystem and data display subsystemthe present invention is advantageous in that there is provided a kind of alert big data management system that can timely and effectively handle alert data
",3,G06_3,2,4.0,78.0,2.0
CN103955174A,3899,Building health monitoring system based on building information model technology ,2014-07-30,"['CN201628558U', 'CN201937337U', 'CN206594781U', 'CN106979798B', 'CN100538759C', 'CN107748945A', 'CN202033053U', 'CN203365585U', 'CN205003813U', 'CN102156180B', 'CN103078673A', 'CN109447048B', 'CN103852744A', 'CN203490806U', 'CN103514700A', 'CN107831285B', 'CN104092750B', 'CN102735966A', 'CN105550824A', 'CN102721741B', 'CN101266254A', 'CN102162773B', 'CN102592424A']","
The invention discloses a building health monitoring system based on the building information model technology, and relates to the field of health performance monitoring of high-rise buildings and super high-rise buildings. The system is composed of an alarm system, a composite detection subsystem, an indication light subsystem and a remote management subsystem. Units of the system conduct information interchange through buses. The building information model technology is adopted in the system, so that the building information integration degree is greatly increased; an information sharing platform is provided, and the status, the change rule and the development tendency of a building can be integrally analyzed and evaluated. Wireless communication nodes are arranged between the composite detection subsystem and the remote management subsystem, wireless network coverage of a local area is achieved, and overall reliability and overall applicability of the system are enhanced. Composite detection nodes in the composite detection subsystem are of a multihop clustering network structure, communication energy consumption can be effectively reduced, service loads between the nodes are balanced, and extendibility of a network is improved.
",other,2014,"
the invention discloses a building health monitoring system based on the building information model technology and relates to the field of health performance monitoring of high-rise buildings and super high-rise buildings the system is composed of an alarm system a composite detection subsystem an indication light subsystem and a remote management subsystem units of the system conduct information interchange through buses the building information model technology is adopted in the system so that the building information integration degree is greatly increased; an information sharing platform is provided and the status the change rule and the development tendency of a building can be integrally analyzed and evaluated wireless communication nodes are arranged between the composite detection subsystem and the remote management subsystem wireless network coverage of a local area is achieved and overall reliability and overall applicability of the system are enhanced composite detection nodes in the composite detection subsystem are of a multihop clustering network structure communication energy consumption can be effectively reduced service loads between the nodes are balanced and extendibility of a network is improved
",3,other_3,2,4.0,78.0,2.0
CN102609407A,4119,Fine-grained semantic detection method of harmful text contents in network ,2012-07-25,"['CN101661513B', 'US10565233B2', 'CN101488150B', 'CN103544255B', 'CN104182389B', 'JP5904559B2', 'CN104077377B', 'CN102929937B', 'CN105005594B', 'CN104239539B', 'CN102629904B', 'CN103927398B', 'CN106980692B', 'CN103699626B', 'CN103729402B', 'CN103399901B']","
The invention belongs to the technical field of text content filtration, and particularly relates to a fine-grained semantic detection method of harmful text contents in network. Aiming at an introduced harmful information scene, the method comprises the steps of: constructing a train text set in which independent sentences are used as basic units, thereby establishing a mathematic description of the scene by using a probability topic model; performing information content extraction to a Web page to be detected; performing sentence identification to the text information; calculating a condition probability of each sentence under the model based on the established probability topic model; and accomplishing the fine-grained semantic detection under the set content detection sensitivity. According to the invention, the model construction is hardly affected by the number of the topics, and probability calculation on the sentence and word level is carried out effectively, so that the method is applicable for various application circumstances requiring harmful text content detection; furthermore fine-grained detection to harmful words and sentences of the text content is supported, so that the method improves the detection rate and reduces the misinformation rate effectively, and is beneficial to improving the practicability of text content filtration.
",other,2012,"
the invention belongs to the technical field of text content filtration and particularly relates to a fine-grained semantic detection method of harmful text contents in network aiming at an introduced harmful information scene the method comprises the steps of: constructing a train text set in which independent sentences are used as basic units thereby establishing a mathematic description of the scene by using a probability topic model; performing information content extraction to a web page to be detected; performing sentence identification to the text information; calculating a condition probability of each sentence under the model based on the established probability topic model; and accomplishing the fine-grained semantic detection under the set content detection sensitivity according to the invention the model construction is hardly affected by the number of the topics and probability calculation on the sentence and word level is carried out effectively so that the method is applicable for various application circumstances requiring harmful text content detection; furthermore fine-grained detection to harmful words and sentences of the text content is supported so that the method improves the detection rate and reduces the misinformation rate effectively and is beneficial to improving the practicability of text content filtration
",3,other_3,2,14.0,268.0,2.0
CN104318732B,4184,Transformer substation field worker monitoring and management system and method based on video analysis and RFID ,2017-02-15,"['CN101909203B', 'CN104122842B', 'CN201003413Y', 'CN100485558C', 'CN106779447A', 'CN102169614B', 'US20090122143A1', 'CN102375140A', 'CN201212325Y', 'CN201681464U', 'CN202854920U', 'CN201503601U', 'CN103680028B', 'CN203773681U', 'CN105913037A', 'CN205015693U', 'CN103248534A', 'CN103854233A', 'CN204884045U', 'CN103617699A', 'CN104463174A', 'CN102509428A', 'CN108206932A', 'CN104155959B', 'CN103108159B']","
The invention discloses a transformer substation field worker monitoring and management system and method based on video analysis and RFID. The management system comprises a video monitoring module for acquiring video data of a field zone, a danger zone and a key device zone, an RFID identification module for reading RFID identifier information of workers in a wireless mode and transmitting the RFID identifier information to a monitoring center through the Ethernet  to conduct worker permission analysis; a voice early warning module connected with the monitoring center and used for sending early warning prompt information according to video analysis and the worker authority analysis, and the monitoring center for analyzing received monitoring videos and RFID identifier information results of the workers. The transformer substation field worker monitoring and management system and method can identify whether the field workers wear safety helmets or not and identify colors by means of a video analysis technology, utilizes an RFID technology to identify the identity permissions of the workers, can completely eradicate the potential safety hazard that the workers who do not wear the safety helmets enter a field and stray into a restricted zone and can achieve an anti-theft function.
",other,2017,"
the invention discloses a transformer substation field worker monitoring and management system and method based on video analysis and rfid the management system comprises a video monitoring module for acquiring video data of a field zone a danger zone and a key device zone an rfid identification module for reading rfid identifier information of workers in a wireless mode and transmitting the rfid identifier information to a monitoring center through the ethernet  to conduct worker permission analysis; a voice early warning module connected with the monitoring center and used for sending early warning prompt information according to video analysis and the worker authority analysis and the monitoring center for analyzing received monitoring videos and rfid identifier information results of the workers the transformer substation field worker monitoring and management system and method can identify whether the field workers wear safety helmets or not and identify colors by means of a video analysis technology utilizes an rfid technology to identify the identity permissions of the workers can completely eradicate the potential safety hazard that the workers who do not wear the safety helmets enter a field and stray into a restricted zone and can achieve an anti-theft function
",3,other_3,2,4.0,3.0,2.0
CN111527530A,4500,Privacy mode for wireless audio devices ,2020-08-11,"['US9736284B2', 'US20170084131A1', 'KR20190071794A', 'US10290302B2', 'US10861461B2', 'US9179107B1', 'US9094584B2', 'US9253455B1', 'US9196133B2', 'US9160987B1', 'US9247219B2', 'US10062256B1', 'US10553089B2', 'US8872915B1', 'KR101737191B1', 'US9237318B2', 'US9113052B1', 'CN104407592B', 'US9692380B2', 'US9325516B2', 'US10142597B2', 'US8937659B1', 'US9060104B2', 'US8953040B1', 'US9113051B1']","
A device that records data from a space, such as an audio or video device with a microphone and/or camera, may have a privacy mode that allows a user to temporarily prevent the device from re-encoding the audio or video of the space. The privacy mode may be a privacy cover, button, air gap, or other mechanism for obfuscating acoustic or video signals or removing power and/or communications from the camera, microphone, control circuitry, or the entire device itself. Additionally, the privacy mode may be enabled remotely for a plurality of devices in the space.
",other,2020,"
a device that records data from a space such as an audio or video device with a microphone and/or camera may have a privacy mode that allows a user to temporarily prevent the device from re-encoding the audio or video of the space the privacy mode may be a privacy cover button air gap or other mechanism for obfuscating acoustic or video signals or removing power and/or communications from the camera microphone control circuitry or the entire device itself additionally the privacy mode may be enabled remotely for a plurality of devices in the space
",3,other_3,2,15.0,341.0,2.0
US9113051B1,4501,Power outlet cameras ,2015-08-18,"['US10685257B2', 'KR102195746B1', 'US10091017B2', 'US10667347B2', 'US9113052B1', 'US10142597B2', 'EP3316583A1', 'US10218932B2', 'AU2017232359B8', 'US9060103B2', 'US8559914B2', 'US9165444B2', 'US10636284B1', 'US10757371B2', 'KR101952298B1', 'US9508239B1', 'US10909833B2', 'US10586433B2', 'US9786133B2', 'US9628286B1', 'US10902707B1', 'US10602065B2', 'US10638292B2', 'US10263802B2', 'US10755372B2']","
Remote surveillance systems can include an outward portion that faces away from a power outlet and can include an inward portion with electrical prongs that protrude into the power outlet. The power outlet can mechanically support the inward portion and a camera assembly. The remote surveillance system can take videos using the camera and can send the videos to a remotely located computing device.
",H04,2015,"
remote surveillance systems can include an outward portion that faces away from a power outlet and can include an inward portion with electrical prongs that protrude into the power outlet the power outlet can mechanically support the inward portion and a camera assembly the remote surveillance system can take videos using the camera and can send the videos to a remotely located computing device
",3,H04_3,2,15.0,341.0,2.0
US20090153660A1,5244,Surveillance system and method including active alert function ,2009-06-18,"['US9922514B2', 'US20140125754A1', 'US10490042B1', 'US10902707B1', 'US20180040215A1', 'US8675071B1', 'US9094584B2', 'US10462341B1', 'US8680982B2', 'US9247219B2', 'US20180261075A1', 'US9058738B1', 'US10559193B2', 'US8872915B1', 'US20200358908A1', 'US9237318B2', 'US8780201B1', 'EP1346577B1', 'CA2485504C', 'US9065987B2', 'US20150070495A1', 'US10257469B2', 'US7504942B2', 'US9113051B1', 'US10807563B1']","
A surveillance system including active alert function has a recognition system and an information processing system linking to the recognition system. The recognition system sets a monitoring area and identifies whether a visitor entering the monitoring area is an authorized user and gets monitoring information of the visitor. The information processing system saves the monitoring information and sends the saved information to the authorized user through an output system. Through the invention the authorized user can be actively informed of the monitoring in formation got in the monitoring area to avoid possible risks that might otherwise occur due to non-timely informed of the monitoring information.
",other,2009,"
a surveillance system including active alert function has a recognition system and an information processing system linking to the recognition system the recognition system sets a monitoring area and identifies whether a visitor entering the monitoring area is an authorized user and gets monitoring information of the visitor the information processing system saves the monitoring information and sends the saved information to the authorized user through an output system through the invention the authorized user can be actively informed of the monitoring in formation got in the monitoring area to avoid possible risks that might otherwise occur due to non-timely informed of the monitoring information
",3,other_3,2,15.0,341.0,2.0
CN106886579A,5477,Real-time streaming textual hierarchy monitoring method and device ,2017-06-23,"['CN106021364A', 'CN102831234B', 'CN107368468B', 'AU2006277608B2', 'CN104484815B', 'CN106980692B', 'CN104834686A', 'CN104636425B', 'US10706113B2', 'US6654735B1', 'CN103699626B', 'CN104820629B']","
The embodiment of the present invention provides a kind of real-time streaming textual hierarchy monitoring method and device, includingThe short text of streaming is obtained in real timeData cleansing, Data-parallel language and data filtration treatment, generating structure data are carried out to the short textText word segmentation processing is carried out to the structural data, K word is obtainedThe K is the integer more than 0According to sensitive word database, sensibility analysis is carried out to the K word, obtain the sensitivity value of the short textAccording to emotion word database, sentiment analysis are carried out to the K word, obtain the emotion value of the short textAccording to the sensitivity value and the emotion value, the monitoring grade of the user belonging to the short text is obtained.The monitoring grade of the user that the present embodiment is obtained is more accurate also rapider.
",G06,2017,"
the embodiment of the present invention provides a kind of real-time streaming textual hierarchy monitoring method and device includingthe short text of streaming is obtained in real timedata cleansing data-parallel language and data filtration treatment generating structure data are carried out to the short texttext word segmentation processing is carried out to the structural data k word is obtainedthe k is the integer more than 0according to sensitive word database sensibility analysis is carried out to the k word obtain the sensitivity value of the short textaccording to emotion word database sentiment analysis are carried out to the k word obtain the emotion value of the short textaccording to the sensitivity value and the emotion value the monitoring grade of the user belonging to the short text is obtainedthe monitoring grade of the user that the present embodiment is obtained is more accurate also rapider
",3,G06_3,2,14.0,268.0,2.0
CN106092191B,5694,A kind of laboratory environment monitoring wireless sensing device and safety pre-warning system ,2018-12-07,"['CN205942994U', 'CN110291489A', 'US20200145906A1', 'AU2017209096B2', 'CN103984315A', 'AU2014101617A4', 'CN203465820U', 'CN104334075B', 'WO2016061365A1', 'CN206069114U', 'CN103325080B', 'CN103839373B', 'CN104318732B', 'US10467885B2', 'US20180365950A1', 'CN109447048B', 'US20170372568A1', 'CN105632101A', 'US20120047083A1', 'US7755480B2', 'CN104799826A', 'CN105581411B', 'CN105247587B', 'US20150119069A1']","
The present invention provides a kind of laboratory environment monitoring wireless sensing device and safety pre-warning systems, comprising: sensing module detection obtains sensitive informationDangerous discernment module obtains the security information of ambient enviroment according to sensitive information and is sent to control moduleControl module is used for: module is established to be wirelessly connected with preset laboratory environment monitoring wireless sensing device automatically by wireless communication sets up sensor network, and determines leader node and member node with the laboratory environment monitoring wireless sensing device being connected according to preset voting protocolWherein, laboratory environment monitoring wireless sensing device is as member node, and control module also sends security information to leader node when security level is preset range, or response sends sensitive information from the received cooperation order of leader node to leader nodeOr laboratory environment monitoring wireless sensing device, as leader node, received security information is also forwarded to server by control module, and/or sends cooperation order to all member nodes.
",other,2018,"
the present invention provides a kind of laboratory environment monitoring wireless sensing device and safety pre-warning systems comprising: sensing module detection obtains sensitive informationdangerous discernment module obtains the security information of ambient enviroment according to sensitive information and is sent to control modulecontrol module is used for: module is established to be wirelessly connected with preset laboratory environment monitoring wireless sensing device automatically by wireless communication sets up sensor network and determines leader node and member node with the laboratory environment monitoring wireless sensing device being connected according to preset voting protocolwherein laboratory environment monitoring wireless sensing device is as member node and control module also sends security information to leader node when security level is preset range or response sends sensitive information from the received cooperation order of leader node to leader nodeor laboratory environment monitoring wireless sensing device as leader node received security information is also forwarded to server by control module and/or sends cooperation order to all member nodes
",3,other_3,2,4.0,3.0,2.0
CN105957305A,6485,Prison anti-terrorism early warning system based on visual identification and big data technology ,2016-09-21,"['CN201111180Y', 'CN106355714B', 'CN101290704B', 'CN108297058B', 'CN103325164A', 'CN104537788A', 'CN102591275B', 'CN203799428U', 'CN105913037A', 'CN103839346B', 'CN101093603A', 'CN103839373B', 'CN104318732B', 'CN103268680B', 'CN101610396A', 'CN104052151A', 'CN103714648B', 'CN103297751A', 'CN109447048B', 'WO2017059395A1', 'CN103578240B', 'CN106100672A', 'US20130173062A1', 'CN105119998B', 'CN103273982B']","
The invention discloses a prison anti-terrorism early warning system based on visual identification and big data technology. The system comprises infrared identification code prison uniforms, wherein the infrared identification code prison uniforms are specially-made prison uniforms printed with invisible infrared identification codes, which are in unique correspondence to prison numbers of prisoners, and serve as identity symbols of the prisoners; dormitories, playground, dining rooms and factories and the like are equipped with digital high-definition cameras; and each digital high-definition camera is provided with a data temporary storage module and a wireless transmitter-receiver device, and can identify the invisible infrared identification codes on the prison uniforms in the view field. The system reduces monitoring work load of prison guards, saves manning quotas and labors, greatly improves prison anti-terrorism early warning capability and effect, solves various problems, facilitates superior leaders to monitor the states of terminals in real time, reduces study and judge time and improves decision-making efficiency; and after a prison anti-terrorism cloud is established, through the big data technology, it is hopeful that prisoner intention early warning is realized in the very early time, and the problems are nipped in the bud.
",other,2016,"
the invention discloses a prison anti-terrorism early warning system based on visual identification and big data technology the system comprises infrared identification code prison uniforms wherein the infrared identification code prison uniforms are specially-made prison uniforms printed with invisible infrared identification codes which are in unique correspondence to prison numbers of prisoners and serve as identity symbols of the prisoners; dormitories playground dining rooms and factories and the like are equipped with digital high-definition cameras; and each digital high-definition camera is provided with a data temporary storage module and a wireless transmitter-receiver device and can identify the invisible infrared identification codes on the prison uniforms in the view field the system reduces monitoring work load of prison guards saves manning quotas and labors greatly improves prison anti-terrorism early warning capability and effect solves various problems facilitates superior leaders to monitor the states of terminals in real time reduces study and judge time and improves decision-making efficiency; and after a prison anti-terrorism cloud is established through the big data technology it is hopeful that prisoner intention early warning is realized in the very early time and the problems are nipped in the bud
",3,other_3,2,4.0,78.0,2.0
CN110712891A,7314,Garbage classification supervision system ,2020-01-21,"['CN102098332B', 'CN104148301B', 'CN109447048A', 'CN204270381U', 'CN203720890U', 'CN101404107A', 'CN104965431A', 'CN104609060B', 'CN107169598A', 'CN105173482B', 'CN100504942C', 'CN108200030A', 'CN105100724A', 'CN108012121A', 'CN108062809B', 'CN101340308B', 'CN106097346A', 'CN105913604A', 'CN106530633A', 'CN103279883B', 'CN103839373A', 'CN103593654B', 'CN104079874B', 'CN101309396A']","
The invention relates to a garbage classification supervision system which comprises a cloud server, an acquisition terminal and an operation terminal, wherein the acquisition terminal and the operation terminal are in communication connection with the cloud server; the cloud server stores data and logically operates the data; the acquisition terminal comprises a host and an operation module, the operation module is electrically connected with the host, and the operation module is in communication connection with the cloud server through the host; the operation module comprises an identity recognition module, a photographing module and a door opening module; the operation terminal comprises a face acquisition module, an audit scoring module and a propaganda and education module. By the garbage classification monitoring system, garbage bags with unified codes are not needed, and the cost is low; less human resources are needed, and meanwhile, the working environment of a supervisor is improved; according to the scoring result, the personnel who do not classify the dry and wet garbage according to the requirement can be educated and punished, and then the effect of supervising and urging the supervision is achieved.
",other,2020,"
the invention relates to a garbage classification supervision system which comprises a cloud server an acquisition terminal and an operation terminal wherein the acquisition terminal and the operation terminal are in communication connection with the cloud server; the cloud server stores data and logically operates the data; the acquisition terminal comprises a host and an operation module the operation module is electrically connected with the host and the operation module is in communication connection with the cloud server through the host; the operation module comprises an identity recognition module a photographing module and a door opening module; the operation terminal comprises a face acquisition module an audit scoring module and a propaganda and education module by the garbage classification monitoring system garbage bags with unified codes are not needed and the cost is low; less human resources are needed and meanwhile the working environment of a supervisor is improved; according to the scoring result the personnel who do not classify the dry and wet garbage according to the requirement can be educated and punished and then the effect of supervising and urging the supervision is achieved
",3,other_3,2,5.0,0.0,2.0
CN110533443A,7374,"Method, equipment and the storage medium of material in figure are closed in tracking ",2019-12-03,"['CN102884779B', 'US9152979B2', 'CN103503013B', 'CN104471564B', 'US10210659B2', 'US20180232930A1', 'KR101832693B1', 'CN104541270B', 'CN105224075B', 'CN102713894B', 'CN103443781B', 'CN104350493B', 'JP6681342B2', 'US20130304604A1', 'CN103763178B', 'CN105579946B', 'US9310955B2', 'CN105338117B', 'CN107111889A', 'US20160042562A1', 'US20160078659A1', 'US8850331B2', 'US9563902B2', 'US9904442B2', 'CN103534721B']","
This application discloses method, equipment and storage mediums that material in figure is closed in a kind of tracking.Wherein, this method comprises: figure is closed in detection, it determines in above-mentioned conjunction figure with the presence or absence of flag data, wherein, there are third party's materials that third party's object provides in above-mentioned conjunction figure for characterizing for above-mentioned flag data, and above-mentioned flag data includes at least the source-information for third party's material that above-mentioned third party's object providesThere are the operation informations in the case where above-mentioned flag data, obtaining above-mentioned third party's material in determining above-mentioned conjunction figureBased on the operation information of above-mentioned third party's material, statistics needs to be distributed to the resource data of above-mentioned third party's object.Present application addresses that can not determine the material distinguishing third party's object different in conjunction figure and providing in the prior art, lead to the technical issues of tracking quarry inaccuracy, can not accurately paying expense.
",G06,2019,"
this application discloses method equipment and storage mediums that material in figure is closed in a kind of trackingwherein this method comprises: figure is closed in detection it determines in above-mentioned conjunction figure with the presence or absence of flag data wherein there are third party's materials that third party's object provides in above-mentioned conjunction figure for characterizing for above-mentioned flag data and above-mentioned flag data includes at least the source-information for third party's material that above-mentioned third party's object providesthere are the operation informations in the case where above-mentioned flag data obtaining above-mentioned third party's material in determining above-mentioned conjunction figurebased on the operation information of above-mentioned third party's material statistics needs to be distributed to the resource data of above-mentioned third party's objectpresent application addresses that can not determine the material distinguishing third party's object different in conjunction figure and providing in the prior art lead to the technical issues of tracking quarry inaccuracy can not accurately paying expense
",3,G06_3,2,3.0,15.0,2.0
US20190347449A1,8584,Privacy protection system for electronic devices ,2019-11-14,"['US10499136B2', 'US8842180B1', 'EP2999271B1', 'US10200790B2', 'CN105391855B', 'US9253455B1', 'US9094584B2', 'US9247219B2', 'US9058738B1', 'JP5314154B2', 'CN105814913B', 'US8872915B1', 'US20200358908A1', 'US9237318B2', 'US9271077B2', 'US9270244B2', 'RU2653355C2', 'US10003730B2', 'US8897822B2', 'KR20150126549A', 'US8538374B1', 'US9432499B2', 'US9060104B2', 'US7039393B1', 'US9113051B1']","
The present invention relates to securing a private conversational, photo and video environment in a home or office from the eavesdropping capability of an electronic devices microphone and the camera while wireless charging the electronic device in those private and sensitive environments. The invention is comprised of an enclosure to hold the electronic device with an inclusive wireless charging unit built into the inventions enclosure body. The enclosure can be of many embodiments such as an open design with internal LED lights, a semi-open design with a diffused translucent  top cover, and a design with a full lift up door covering unit that can be either solid or a full translucent lift up door with a  top area that is diffused, all embodiments would prevent the internal camera of the electronic device from taking accurate photo or video of its surroundings outside of the enclosure while the device is wirelessly charging in the invention. All embodiments of the invention would allow the user to visually see alerts and activity on their electronic device's screen while placed onto the inventions wireless charging base. All embodiments of the invention would include an attached frequency generator and internal micro ultrasonic speakers which when an electronic device is placed onto the wireless charging base the invention will then actively electronically broadcast an audio disillusionment frequency/sound undetectable to the human ear but which would disrupt the ability of the electronic device microphone to disseminate sounds or record words spoken outside of the inventions enclosure. The enclosed electronic devices ringer and speakers would not be affected by the audible frequency so that the alert capabilities of the device are not compromised.
",H04,2019,"
the present invention relates to securing a private conversational photo and video environment in a home or office from the eavesdropping capability of an electronic devices microphone and the camera while wireless charging the electronic device in those private and sensitive environments the invention is comprised of an enclosure to hold the electronic device with an inclusive wireless charging unit built into the inventions enclosure body the enclosure can be of many embodiments such as an open design with internal led lights a semi-open design with a diffused translucent  top cover and a design with a full lift up door covering unit that can be either solid or a full translucent lift up door with a  top area that is diffused all embodiments would prevent the internal camera of the electronic device from taking accurate photo or video of its surroundings outside of the enclosure while the device is wirelessly charging in the invention all embodiments of the invention would allow the user to visually see alerts and activity on their electronic device's screen while placed onto the inventions wireless charging base all embodiments of the invention would include an attached frequency generator and internal micro ultrasonic speakers which when an electronic device is placed onto the wireless charging base the invention will then actively electronically broadcast an audio disillusionment frequency/sound undetectable to the human ear but which would disrupt the ability of the electronic device microphone to disseminate sounds or record words spoken outside of the inventions enclosure the enclosed electronic devices ringer and speakers would not be affected by the audible frequency so that the alert capabilities of the device are not compromised
",3,H04_3,2,15.0,341.0,2.0
CN109918950A,9049,A kind of application method identifying binary function in embedded device ,2019-06-21,"['CN107885999B', 'US8344916B2', 'US9003529B2', 'CA2735600C', 'US20170116203A1', 'CN103631632B', 'CN103902910B', 'CN106709345B', 'CN103761475B', 'CN106537333A', 'CN101359352B']","
The invention discloses a kind of in embedded device identifies the application method of binary function comprising the steps of: A, carries out dynamic signature to fileB, Dynamic Extraction feature is carried out to the file after dynamic signatureC, signature generatesD, feasibility analysis, the present invention identifies that the application method of binary function is freed function Study of recognition person using machine learning model from heavy feature learning and selection work in embedded device, while reducing the requirement to researcher's stock of knowledge.And it is able to solve the insurmountable unknown function identification of traditional recognition method.
",other,2019,"
the invention discloses a kind of in embedded device identifies the application method of binary function comprising the steps of: a carries out dynamic signature to fileb dynamic extraction feature is carried out to the file after dynamic signaturec signature generatesd feasibility analysis the present invention identifies that the application method of binary function is freed function study of recognition person using machine learning model from heavy feature learning and selection work in embedded device while reducing the requirement to researcher's stock of knowledgeand it is able to solve the insurmountable unknown function identification of traditional recognition method
",3,other_3,2,5.0,2.0,2.0
US9838405B1,55,Systems and methods for determining types of malware infections on computing devices ,2017-12-05,"['US8806625B1', 'JP6689992B2', 'CA2804258C', 'US9401925B1', 'US9882920B2', 'US9407664B1', 'US9100426B1', 'US9948663B1', 'US9529990B2', 'US9154466B2', 'JP2018530066A', 'JP6335315B2', 'US9800606B1', 'US8850517B2', 'US9256739B1', 'CA2895265C', 'US10032033B2', 'US9223966B1', 'US9736178B1', 'US9998480B1', 'US9846772B1', 'US8806641B1']","
The disclosed computer-implemented method for determining types of malware infections on computing devices may include (1) identifying multiple types of security events generated by a group of endpoint devices that describe suspicious activities on the endpoint devices, each of the endpoint devices having one or more types of malware infections, (2) determining correlations between each type of security event generated by the group of endpoint devices and each type of malware infection within the group of endpoint devices, (3) identifying a set of security events generated on a target endpoint device that potentially has a malware infection, and (4) detecting, based on both the set of security events generated on the target endpoint device and the correlations between the types of malware infections and the types of security events, at least one type of malware infection likely present on the target endpoint device.
",H04,2017,"
the disclosed computer-implemented method for determining types of malware infections on computing devices may include (1) identifying multiple types of security events generated by a group of endpoint devices that describe suspicious activities on the endpoint devices each of the endpoint devices having one or more types of malware infections (2) determining correlations between each type of security event generated by the group of endpoint devices and each type of malware infection within the group of endpoint devices (3) identifying a set of security events generated on a target endpoint device that potentially has a malware infection and (4) detecting based on both the set of security events generated on the target endpoint device and the correlations between the types of malware infections and the types of security events at least one type of malware infection likely present on the target endpoint device
",4,H04_4,2,10.0,0.0,9.0
US9300693B1,57,Systems and methods for preventing data loss over virtualized networks ,2016-03-29,"['US9245123B1', 'JP6689992B2', 'US20140283079A1', 'US9294442B1', 'CA2972467C', 'US10686809B2', 'JP6730997B2', 'EP3374922B1', 'US9529990B2', 'JP5963966B2', 'JP6560368B2', 'US9892265B1', 'US9800606B1', 'US10009381B2', 'US9223966B1', 'US9336384B2', 'CA2964301C', 'US9736178B1', 'JP6205062B2', 'US9998480B1', 'US9141790B2', 'CN107431712B', 'US9514309B1', 'US10073864B1', 'US9256739B1']","
The disclosed computer-implemented method for preventing data loss over virtualized networks may include (1) receiving, by a data loss prevention callout driver registered to a switch, a network packet from a virtual machine, (2) identifying, by the data loss prevention callout driver registered to the switch, flow context information that specifies a context associated with transmitting the network packet, (3) providing the flow context information and the network packet to a data loss prevention service, and (4) applying, by the data loss prevention service, a data loss prevention policy to the network packet based on the flow context information. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for preventing data loss over virtualized networks may include (1) receiving by a data loss prevention callout driver registered to a switch a network packet from a virtual machine (2) identifying by the data loss prevention callout driver registered to the switch flow context information that specifies a context associated with transmitting the network packet (3) providing the flow context information and the network packet to a data loss prevention service and (4) applying by the data loss prevention service a data loss prevention policy to the network packet based on the flow context information various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9116768B1,59,Systems and methods for deploying applications included in application containers ,2015-08-25,"['JP6689992B2', 'US9268935B2', 'EP3362938B1', 'US9401925B1', 'US9185119B1', 'US9781143B1', 'JP6314267B2', 'US9009836B1', 'EP3374922B1', 'US9529990B2', 'EP3087531B1', 'JP6560368B2', 'US9800606B1', 'JP6166839B2', 'US8060940B2', 'US9600320B2', 'US10623418B2', 'US9223966B1', 'US20200137097A1', 'EP3207487B1', 'US9846772B1', 'US9514309B1', 'US10073864B1', 'JP6122555B2', 'US9141790B2']","
The disclosed computer-implemented method for deploying applications included in application containers may include (1) identifying an application container that includes an application and facilitates transferring the application to a deployment environment, (2) performing a reconnaissance analysis on the deployment environment by identifying one or more properties of the deployment environment, (3) determining, based at least in part on the reconnaissance analysis, that the deployment environment meets a predetermined threshold of requirements for securely executing the application, and then (4) transferring the application included in the application container to the deployment environment in response to determining that the deployment environment meets the predetermined threshold. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
the disclosed computer-implemented method for deploying applications included in application containers may include (1) identifying an application container that includes an application and facilitates transferring the application to a deployment environment (2) performing a reconnaissance analysis on the deployment environment by identifying one or more properties of the deployment environment (3) determining based at least in part on the reconnaissance analysis that the deployment environment meets a predetermined threshold of requirements for securely executing the application and then (4) transferring the application included in the application container to the deployment environment in response to determining that the deployment environment meets the predetermined threshold various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9223966B1,60,Systems and methods for replicating computing system environments ,2015-12-29,"['US9245123B1', 'US10169585B1', 'JP6689992B2', 'AU2015374078B2', 'US9838405B1', 'US10511636B2', 'EP3374922B1', 'EP3087531B1', 'JP6560368B2', 'US9300693B1', 'CA2868752C', 'US9852289B1', 'US9800606B1', 'JP5978365B2', 'JP6166839B2', 'US9166997B1', 'US9116768B1', 'US10331879B1', 'CA2964301C', 'US9736178B1', 'US8782792B1', 'US9998480B1', 'US10073864B1', 'US9256739B1', 'JP6101408B2']","
The disclosed computer-implemented method for replicating computing system environments may include (1) identifying each application installed on a plurality of computing systems, (2) creating, within a virtual machine image, virtual containers that store each application installed on the plurality of computing systems, (3) determining that a potentially malicious file is directed to a target computing system within the plurality of computing systems, (4) identifying each application installed on the target computing system, (5) in response to determining that the file is directed to the target computing system, replicating a configuration of the target computing system within the virtual machine image by, for each application installed on the target computing system, activating a virtual container that stores the application, and (6) determining how the file would affect the target computing system by sending the file to the virtual machine image and analyzing how the file impacts the virtual machine image.
",G06,2015,"
the disclosed computer-implemented method for replicating computing system environments may include (1) identifying each application installed on a plurality of computing systems (2) creating within a virtual machine image virtual containers that store each application installed on the plurality of computing systems (3) determining that a potentially malicious file is directed to a target computing system within the plurality of computing systems (4) identifying each application installed on the target computing system (5) in response to determining that the file is directed to the target computing system replicating a configuration of the target computing system within the virtual machine image by for each application installed on the target computing system activating a virtual container that stores the application and (6) determining how the file would affect the target computing system by sending the file to the virtual machine image and analyzing how the file impacts the virtual machine image
",4,G06_4,2,10.0,8.0,9.0
US9294284B1,62,Systems and methods for validating application signatures ,2016-03-22,"['CN105453102B', 'EP3411825B1', 'US9407664B1', 'US9838405B1', 'US9948663B1', 'EP3087531B1', 'US8904503B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9852289B1', 'US9800606B1', 'JP5978365B2', 'JP6166839B2', 'US9166997B1', 'US9116768B1', 'US9342705B1', 'US10032033B2', 'US9223966B1', 'US9148441B1', 'CA2964301C', 'US9736178B1', 'US9998480B1', 'CN107567699B', 'US9141790B2']","
A computer-implemented method for validating application signatures may include maintaining a signature-validation database that associates application publishers with signature keys by, for each application in a set of applications, (1) identifying a key used to sign the application, (2) determining that the application claims to be provided by a publisher, (3) verifying that the claimed publisher provides the application, and (4) maintaining, in response to verifying that the claimed publisher provides the application, an association that indicates that the publisher of the application is authorized to use the key. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for validating application signatures may include maintaining a signature-validation database that associates application publishers with signature keys by for each application in a set of applications (1) identifying a key used to sign the application (2) determining that the application claims to be provided by a publisher (3) verifying that the claimed publisher provides the application and (4) maintaining in response to verifying that the claimed publisher provides the application an association that indicates that the publisher of the application is authorized to use the key various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9185119B1,207,Systems and methods for detecting malware using file clustering ,2015-11-10,"['US8806625B1', 'JP6689992B2', 'US8627469B1', 'US8875292B1', 'US9998484B1', 'CA2989160C', 'US9407664B1', 'US9386034B2', 'US8671449B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9571509B1', 'US9729579B1', 'EP2939173B1', 'US9852289B1', 'US9800606B1', 'US8479296B2', 'EP3567504B1', 'US9116768B1', 'US9223966B1', 'US9418222B1', 'US8756432B1', 'JP5978383B2', 'US10073864B1']","
The disclosed computer-implemented method for detecting malware using file clustering may include (1) identifying a file with an unknown reputation, (2) identifying at least one file with a known reputation that co-occurs with the unknown file, (3) identifying a malware classification assigned to the known file, (4) determining a probability that the unknown file is of the same classification as the known file, and (5) assigning, based on the probability that the unknown file is of the same classification as the known file, the classification of the known file to the unknown file. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
the disclosed computer-implemented method for detecting malware using file clustering may include (1) identifying a file with an unknown reputation (2) identifying at least one file with a known reputation that co-occurs with the unknown file (3) identifying a malware classification assigned to the known file (4) determining a probability that the unknown file is of the same classification as the known file and (5) assigning based on the probability that the unknown file is of the same classification as the known file the classification of the known file to the unknown file various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9852289B1,319,Systems and methods for protecting files from malicious encryption attempts ,2017-12-26,"['US9043922B1', 'US7657941B1', 'US9246944B1', 'US8806641B1', 'US9401925B1', 'US9596257B2', 'US10375086B2', 'EP3087531B1', 'JP6560368B2', 'US9571509B1', 'US9729579B1', 'US9223966B1', 'US10671724B2', 'US9148441B1', 'US9336384B2', 'EP3207487B1', 'US9736178B1', 'US9230099B1', 'US8756432B1', 'US9998480B1', 'EP2316092B1', 'US9846776B1', 'US9256739B1', 'JP6101408B2']","
A computer-implemented method for protecting files from malicious encryption attempts may include (1) detecting an attempt to alter a file, (2) identifying at least one characteristic of the attempt to alter the file, (3) determining, based on the characteristic of the attempt to alter the file, that the attempt to alter the file represents a malicious attempt by a third party to encrypt the file, and (4) performing a security action in response to determining that the attempt to alter the file represents a malicious attempt by the third party to encrypt the file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for protecting files from malicious encryption attempts may include (1) detecting an attempt to alter a file (2) identifying at least one characteristic of the attempt to alter the file (3) determining based on the characteristic of the attempt to alter the file that the attempt to alter the file represents a malicious attempt by a third party to encrypt the file and (4) performing a security action in response to determining that the attempt to alter the file represents a malicious attempt by the third party to encrypt the file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10250617B1,348,Systems and methods for detecting malware using machine learning ,2019-04-02,"['US8806625B1', 'JP6689992B2', 'CA2804258C', 'US9330273B2', 'US9767013B1', 'US9100426B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'US9300693B1', 'JP6335315B2', 'US9852289B1', 'US9160766B2', 'US9166997B1', 'US9116768B1', 'US8291497B1', 'US8943587B2', 'US9223966B1', 'US9148441B1', 'US9336384B2', 'US9736178B1', 'US9998480B1', 'US10073864B1', 'US9424136B1']","
A computer-implemented method for detecting malware using machine learning may include (1) identifying data to be analyzed for malware, (2) classifying, using a classifier created by a combination of at least one deep learning neural network and at least one supervised data mining method, the data to be analyzed for malware, (3) determining, based on a predefined threshold, that the classification of the data indicates potential malware on the computing device, and (4) performing a security action based on the determination of potential malware on the computing device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
a computer-implemented method for detecting malware using machine learning may include (1) identifying data to be analyzed for malware (2) classifying using a classifier created by a combination of at least one deep learning neural network and at least one supervised data mining method the data to be analyzed for malware (3) determining based on a predefined threshold that the classification of the data indicates potential malware on the computing device and (4) performing a security action based on the determination of potential malware on the computing device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US8806625B1,349,Systems and methods for performing security scans ,2014-08-12,"['JP5586216B2', 'JP6689992B2', 'JP2017507414A', 'US8806641B1', 'US9407664B1', 'US8719935B2', 'US9529990B2', 'US9171156B1', 'US9571509B1', 'EP2831798B1', 'US9852289B1', 'US9166997B1', 'US9256739B1', 'US10032033B2', 'US8612594B1', 'US10331879B1', 'US9148441B1', 'US8725702B1', 'US9736178B1', 'US8667489B2', 'US9998480B1', 'US10496823B2', 'US10073864B1', 'US8578496B1', 'US9141790B2']","
A computer-implemented method for performing security scans may include 1) generating a first hash of a first file, 2) performing a first security scan on the first file, 3) storing the first hash to indicate a result of the first security scan of the first file, 4) identifying a second file and generating a second hash of the second file, 5) determining that the second hash of the second file is equivalent to the first hash of the first file and, in response, determining that the result of the first security scan of the first file applies to the second file, 6) identifying a third file and determining that the third file is volatile, and 7) performing a second security scan on the third file instead of generating a third hash of the third file. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2014,"
a computer-implemented method for performing security scans may include 1) generating a first hash of a first file 2) performing a first security scan on the first file 3) storing the first hash to indicate a result of the first security scan of the first file 4) identifying a second file and generating a second hash of the second file 5) determining that the second hash of the second file is equivalent to the first hash of the first file and in response determining that the result of the first security scan of the first file applies to the second file 6) identifying a third file and determining that the third file is volatile and 7) performing a second security scan on the third file instead of generating a third hash of the third file various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US9330273B2,350,Systems and methods for increasing compliance with data loss prevention policies ,2016-05-03,"['US9165150B2', 'US8943546B1', 'EP3411825B1', 'US8806639B2', 'US9734352B2', 'JP6471233B2', 'JP6314267B2', 'EP3374922B1', 'US9529990B2', 'US9300693B1', 'US9571509B1', 'EP2681669B1', 'US9230096B2', 'US8938775B1', 'US9116768B1', 'US9223966B1', 'EP3039609B1', 'JP2016503219A', 'US9736178B1', 'JP6205062B2', 'US9998480B1', 'US8060596B1', 'US8776196B1', 'JP6101408B2', 'AU2015256400B2']","
A computer-implemented method for increasing compliance with data loss prevention policies may include (1) identifying a file that is subject to a data loss prevention policy, (2) determining a classification of the file according to the data loss prevention policy, (3) identifying a graphical user interface that is configured to display a representation of the file, and (4) enhancing the representation of the file within the graphical user interface with a visual indication of the classification of the file according to the data loss prevention policy. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for increasing compliance with data loss prevention policies may include (1) identifying a file that is subject to a data loss prevention policy (2) determining a classification of the file according to the data loss prevention policy (3) identifying a graphical user interface that is configured to display a representation of the file and (4) enhancing the representation of the file within the graphical user interface with a visual indication of the classification of the file according to the data loss prevention policy various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9336384B2,354,Systems and methods for replacing application methods at runtime ,2016-05-10,"['US9052935B1', 'US9563457B2', 'US10073966B2', 'EP3411825B1', 'US10372919B1', 'US9465652B1', 'JP5816198B2', 'CA2770419C', 'EP3374922B1', 'US8561193B1', 'US9300693B1', 'US9571509B1', 'US8387046B1', 'JP6335315B2', 'US9852289B1', 'JP5978365B2', 'US9983891B1', 'US9342705B1', 'US10623418B2', 'US8725702B1', 'US9319380B2', 'US9230099B1', 'US8782792B1', 'US9424136B1']","
A computer-implemented method for replacing application methods at runtime may include identifying an application at runtime that includes a target method to replace at runtime with a source method, locating a target address of a target method data structure (that includes a target code pointer to method code of the target method) within memory at runtime that is referenced by a target class, determining a source address of a source method data structure (that includes a source code pointer to method code of the source method) within memory at runtime that describes the source method, and modifying the application at runtime to have the target class reference the source method instead of the target method by copying the source method data structure from the source address to the target address and, thereby, replacing the target code pointer with the source code pointer. Various other methods and systems are also disclosed.
",G06,2016,"
a computer-implemented method for replacing application methods at runtime may include identifying an application at runtime that includes a target method to replace at runtime with a source method locating a target address of a target method data structure (that includes a target code pointer to method code of the target method) within memory at runtime that is referenced by a target class determining a source address of a source method data structure (that includes a source code pointer to method code of the source method) within memory at runtime that describes the source method and modifying the application at runtime to have the target class reference the source method instead of the target method by copying the source method data structure from the source address to the target address and thereby replacing the target code pointer with the source code pointer various other methods and systems are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10073864B1,355,Systems and methods for automated aggregation of information-source metadata ,2018-09-11,"['US8806625B1', 'US8060596B1', 'US9100440B1', 'US9246944B1', 'US9202057B2', 'JP6360927B2', 'JP6314267B2', 'US9529990B2', 'JP6560368B2', 'US9300693B1', 'US9571509B1', 'US9727491B2', 'US9160766B2', 'US9800606B1', 'US8977661B2', 'US9166997B1', 'US9116768B1', 'US9223966B1', 'US8688601B2', 'US20200137097A1', 'CA2964301C', 'US9736178B1', 'US8458186B2', 'JP5978383B2', 'US20140019497A1']","
The disclosed computer-implemented method for automated aggregation of information-source metadata may include (1) receiving metadata of an information asset, the metadata of the information asset having been generated by a data-management system, (2) determining that the metadata of the information asset includes metadata of an information source that contains the information asset, (3) extracting the metadata of the information source from the metadata of the information asset, (4) storing the metadata of the information source in an information-source metadata repository such that the metadata of the information source is associated with the information source, and (5) providing access to the metadata of the information source stored in the information-source metadata repository to (a) the data-management system, (b) an additional data-management system, and/or (c) the entity. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for automated aggregation of information-source metadata may include (1) receiving metadata of an information asset the metadata of the information asset having been generated by a data-management system (2) determining that the metadata of the information asset includes metadata of an information source that contains the information asset (3) extracting the metadata of the information source from the metadata of the information asset (4) storing the metadata of the information source in an information-source metadata repository such that the metadata of the information source is associated with the information source and (5) providing access to the metadata of the information source stored in the information-source metadata repository to (a) the data-management system (b) an additional data-management system and/or (c) the entity various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9424136B1,356,Systems and methods for creating optimized synthetic backup images ,2016-08-23,"['US9052935B1', 'US9245123B1', 'US8805788B2', 'US9684473B2', 'US8812436B2', 'US10228962B2', 'US9697228B2', 'US9967144B2', 'US20180285202A1', 'US10776329B2', 'US9626254B2', 'US8443159B1', 'US10445518B2', 'US9727491B2', 'US9451023B2', 'US9459968B2', 'JP6166839B2', 'US10387266B2', 'US10140370B1', 'JP6336675B2', 'US10545833B1', 'US10817326B2', 'US8600947B1', 'US9461881B2', 'US10387073B2']","
A computer-implemented method for creating optimized synthetic backup images may include (1) transferring a backup image that represents a virtual machine at a specific point in time to a server that stores the backup image, (2) identifying a subsequent backup image that represents at least a portion of the virtual machine at a subsequent point in time, (3) creating a data stream that includes (i) at least one changed data block captured in the subsequent backup image and (ii) at least one reference that identifies where at least one unchanged data block is located within the backup image stored on the server, and then (4) transferring the data stream to the server to enable the server to create an optimized synthetic backup image of the virtual machine. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for creating optimized synthetic backup images may include (1) transferring a backup image that represents a virtual machine at a specific point in time to a server that stores the backup image (2) identifying a subsequent backup image that represents at least a portion of the virtual machine at a subsequent point in time (3) creating a data stream that includes (i) at least one changed data block captured in the subsequent backup image and (ii) at least one reference that identifies where at least one unchanged data block is located within the backup image stored on the server and then (4) transferring the data stream to the server to enable the server to create an optimized synthetic backup image of the virtual machine various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US9171156B1,366,Systems and methods for managing malware signatures ,2015-10-27,"['US9245123B1', 'JP6689992B2', 'US9100440B1', 'JP2017507414A', 'US8224935B1', 'JP5816198B2', 'EP2199939B1', 'US9959404B2', 'EP3374922B1', 'US9948663B1', 'US8819666B2', 'US9852289B1', 'EP2199941B1', 'US9800606B1', 'EP3014447B1', 'US20190265968A1', 'US9342705B1', 'US8612594B1', 'US10205744B2', 'US9223966B1', 'US9148441B1', 'US8725702B1', 'EP3207487B1', 'US9418222B1', 'US9736178B1']","
A computer-implemented method for managing malware signatures. The method may include maintaining a set of active malware signatures and maintaining a set of dormant malware signatures. The method may also include providing the set of active malware signatures for use in malware detection more frequently than the set of dormant malware signatures and determining that a first malware signature from the set of dormant malware signatures triggers one or more positive malware detection responses. The method may further include, in response to the determination, moving the first malware signature from the set of dormant malware signatures to the set of active malware signatures. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for managing malware signatures the method may include maintaining a set of active malware signatures and maintaining a set of dormant malware signatures the method may also include providing the set of active malware signatures for use in malware detection more frequently than the set of dormant malware signatures and determining that a first malware signature from the set of dormant malware signatures triggers one or more positive malware detection responses the method may further include in response to the determination moving the first malware signature from the set of dormant malware signatures to the set of active malware signatures various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US8756432B1,369,Systems and methods for detecting malicious digitally-signed applications ,2014-06-17,"['JP5586216B2', 'JP6689992B2', 'US8869305B1', 'US8806641B1', 'US9596257B2', 'JP5816198B2', 'US8671449B1', 'EP3374922B1', 'US9171156B1', 'US8826426B1', 'US9571509B1', 'US9852289B1', 'JP6166839B2', 'US8918387B1', 'US9166997B1', 'US9116768B1', 'US9256739B1', 'US8612594B1', 'US9223966B1', 'US10331879B1', 'US8302193B1', 'US9230099B1', 'US9998480B1', 'US8060596B1', 'US9141790B2']","
A computer-implemented method for detecting malicious digitally-signed applications. The method may include 1) identifying an application package file that has been digitally signed, wherein the application package file is used to distribute an application, 2) comparing the application package file to a set of known application package files, 3) determining that the application package file has been repackaged from a known application package file, 4) comparing a public key associated with a digital signature of the application package file to a public key associated with a digital signature of the known application package file, 5) determining that the public key associated with the digital signature of the application package file and the public key associated with the digital signature of the known application package file are different, and 6) performing a security action on the application. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for detecting malicious digitally-signed applications the method may include 1) identifying an application package file that has been digitally signed wherein the application package file is used to distribute an application 2) comparing the application package file to a set of known application package files 3) determining that the application package file has been repackaged from a known application package file 4) comparing a public key associated with a digital signature of the application package file to a public key associated with a digital signature of the known application package file 5) determining that the public key associated with the digital signature of the application package file and the public key associated with the digital signature of the known application package file are different and 6) performing a security action on the application various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9846772B1,370,Systems and methods for detecting misplaced applications using functional categories ,2017-12-19,"['EP3210364B1', 'US9330273B2', 'US9888032B2', 'JP6314267B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9300693B1', 'US9571509B1', 'US9852289B1', 'US9160766B2', 'US9800606B1', 'US8495705B1', 'US9166997B1', 'US9116768B1', 'US9223966B1', 'US9148441B1', 'US8688601B2', 'US9736178B1', 'US9998480B1', 'EP2316092B1', 'US10073864B1', 'JP6122555B2', 'US9256739B1', 'JP6101408B2']","
A computer-implemented method for detecting misplaced applications using functional categories may include (1) identifying a functional category assigned to an application located on a computing system, the functional category describing a field of functionality that the application performs, (2) identifying an additional functional category assigned to at least one of the computing system and another application located on the computing system, (3) applying a security policy to both the functional category assigned to the application and the additional functional category to determine whether the application belongs on the computing system according to the security policy, and (4) performing a security action to protect users based on the application of the security policy to the functional category assigned to the application and the additional functional category. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for detecting misplaced applications using functional categories may include (1) identifying a functional category assigned to an application located on a computing system the functional category describing a field of functionality that the application performs (2) identifying an additional functional category assigned to at least one of the computing system and another application located on the computing system (3) applying a security policy to both the functional category assigned to the application and the additional functional category to determine whether the application belongs on the computing system according to the security policy and (4) performing a security action to protect users based on the application of the security policy to the functional category assigned to the application and the additional functional category various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9800606B1,384,Systems and methods for evaluating network security ,2017-10-24,"['US10367815B2', 'US9832217B2', 'JP6689992B2', 'US9210182B2', 'US10516682B2', 'EP3362938B1', 'US10652273B2', 'US10686809B2', 'US9686293B2', 'US9948663B1', 'US9529990B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9166997B1', 'US9516062B2', 'US9223966B1', 'US9148441B1', 'US10817602B2', 'US20200137097A1', 'US9736178B1', 'US10515211B2', 'US9998480B1', 'US8990948B2', 'US20170126731A1']","
A computer-implemented method for evaluating network security may include (1) receiving, by a security server, a request to report a network risk score for an organization based on telemetry data describing file downloads at computers managed by the organization over a specified period of time, (2) identifying the telemetry data describing file downloads at the computers managed by the organization over the specified period of time, (3) searching the telemetry data to match file downloads over the specified period of time to at least one file that was previously categorized, prior to the request, as a hacking tool, (4) calculating the network risk score based on the telemetry data, and (5) reporting, automatically by the security server in response to the request, the calculated network risk score. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for evaluating network security may include (1) receiving by a security server a request to report a network risk score for an organization based on telemetry data describing file downloads at computers managed by the organization over a specified period of time (2) identifying the telemetry data describing file downloads at the computers managed by the organization over the specified period of time (3) searching the telemetry data to match file downloads over the specified period of time to at least one file that was previously categorized prior to the request as a hacking tool (4) calculating the network risk score based on the telemetry data and (5) reporting automatically by the security server in response to the request the calculated network risk score various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US8725702B1,390,Systems and methods for repairing system files ,2014-05-13,"['US9245123B1', 'US9946880B2', 'US8224935B1', 'US10742665B2', 'US8255902B1', 'US9407664B1', 'US8499352B2', 'US8224796B1', 'EP3374922B1', 'US9171156B1', 'JP2016006670A', 'US9372762B2', 'US9852289B1', 'US9342705B1', 'US9148441B1', 'CN102736978B', 'US9230099B1', 'US7831412B1', 'AU2010347733B2', 'US8806641B1']","
A computer-implemented method for repairing system files may include 1) identifying a request to repair a corrupted system file in an operating system, 2) receiving file metadata describing the corrupted system file and system metadata describing the operating system, 3) identifying an uncorrupted version of the corrupted system file by i) identifying a series of matching tests for matching the corrupted system file with the uncorrupted version, the series of matching tests including at least one file metadata item from the file metadata and at least one system metadata item from the system metadata, and ii) applying the series of matching tests in a predetermined order to a database of uncorrupted system files until a matching test matches the corrupted system file with the uncorrupted version of the system file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for repairing system files may include 1) identifying a request to repair a corrupted system file in an operating system 2) receiving file metadata describing the corrupted system file and system metadata describing the operating system 3) identifying an uncorrupted version of the corrupted system file by i) identifying a series of matching tests for matching the corrupted system file with the uncorrupted version the series of matching tests including at least one file metadata item from the file metadata and at least one system metadata item from the system metadata and ii) applying the series of matching tests in a predetermined order to a database of uncorrupted system files until a matching test matches the corrupted system file with the uncorrupted version of the system file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US8739284B1,431,Systems and methods for blocking and removing internet-traversing malware ,2014-05-27,"['US9680849B2', 'JP6689992B2', 'US8806638B1', 'AU2018217323B2', 'US9210182B2', 'US20160180087A1', 'US7650639B2', 'US10348771B2', 'US9529990B2', 'US8646079B2', 'JP6560368B2', 'US9571509B1', 'US8607340B2', 'EP2486507B1', 'US9852289B1', 'US8161556B2', 'US9800606B1', 'US8479296B2', 'US10282548B1', 'EP2774039B1', 'US9418222B1', 'US9736178B1', 'US8782792B1', 'US9846776B1']","
A computer-implemented method for blocking and removing Internet-traversing malware may include: 1) identifying a persistent storage object of an Internet client application, 2) identifying an attempt by an executable object to access the persistent storage object, 3) determining that the executable object is not authorized to access the persistent storage object, and then 4) performing a security action based on the determination. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for blocking and removing internet-traversing malware may include: 1) identifying a persistent storage object of an internet client application 2) identifying an attempt by an executable object to access the persistent storage object 3) determining that the executable object is not authorized to access the persistent storage object and then 4) performing a security action based on the determination various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9729579B1,503,Systems and methods for increasing security on computing systems that launch application containers ,2017-08-08,"['CN105453102B', 'US9245123B1', 'US8806625B1', 'JP6689992B2', 'US9246944B1', 'TWI530872B', 'US9401925B1', 'US9888032B2', 'JP6471233B2', 'EP3374922B1', 'US9258122B1', 'EP3087531B1', 'US9300693B1', 'US9852289B1', 'US8788763B2', 'JP5978365B2', 'US9934407B2', 'US9223966B1', 'US10176095B2', 'US10331879B1', 'US9319380B2', 'US9088560B1', 'US8756432B1', 'US9141790B2']","
A computer-implemented method for increasing security on computing systems that launch application containers may include (1) authenticating an application container that facilitates launching at least one application on a host computing system by verifying that the application container meets a certain trustworthiness threshold, (2) intercepting, via a policy-enforcement proxy, a command to perform a deployment action on the host computing system in connection with the authenticated application container, (3) determining that the deployment action potentially violates a security policy applied to the authenticated application container, and then in response to determining that the deployment action potentially violates the security policy, (4) modifying, via the policy-enforcement proxy, the command to prevent the potential violation of the security policy. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for increasing security on computing systems that launch application containers may include (1) authenticating an application container that facilitates launching at least one application on a host computing system by verifying that the application container meets a certain trustworthiness threshold (2) intercepting via a policy-enforcement proxy a command to perform a deployment action on the host computing system in connection with the authenticated application container (3) determining that the deployment action potentially violates a security policy applied to the authenticated application container and then in response to determining that the deployment action potentially violates the security policy (4) modifying via the policy-enforcement proxy the command to prevent the potential violation of the security policy various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US8225406B1,504,Systems and methods for using reputation data to detect shared-object-based security threats ,2012-07-17,"['CN101777062B', 'US10412115B1', 'US10742665B2', 'US20150074806A1', 'US10599846B2', 'US8280830B2', 'US20140201208A1', 'US8819666B2', 'US9571509B1', 'US7469419B2', 'EP2486507B1', 'US8479296B2', 'US9332033B2', 'US9356946B1', 'US10032033B2', 'US8938782B2', 'US9148441B1', 'US9336384B2', 'JP6129897B2', 'US9230099B1', 'US9514309B1', 'US8621233B1', 'RU2531861C1', 'JP6122555B2', 'US9256739B1']","
Computer-implemented methods and systems for using reputation data to detect shared-object-based security threats are disclosed. In one example, an exemplary method for performing such a task may comprise: 1) identifying a process, 2) identifying an executable file associated with the process, 3) identifying at least one shared object loaded by the process, 4) obtaining reputation data for both the executable file and the shared object from a reputation service, 5) determining that the shared object represents a potential security risk by comparing the reputation data for the executable file with the reputation data for the shared object and determining that the reputation data for the shared object is significantly different from the reputation data for the executable file, and then 6) performing a security operation on the shared object. Corresponding server-side methods and systems for identifying malicious shared objects based on reputation data are also disclosed.
",G06,2012,"
computer-implemented methods and systems for using reputation data to detect shared-object-based security threats are disclosed in one example an exemplary method for performing such a task may comprise: 1) identifying a process 2) identifying an executable file associated with the process 3) identifying at least one shared object loaded by the process 4) obtaining reputation data for both the executable file and the shared object from a reputation service 5) determining that the shared object represents a potential security risk by comparing the reputation data for the executable file with the reputation data for the shared object and determining that the reputation data for the shared object is significantly different from the reputation data for the executable file and then 6) performing a security operation on the shared object corresponding server-side methods and systems for identifying malicious shared objects based on reputation data are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US8806641B1,505,Systems and methods for detecting malware variants ,2014-08-12,"['US9245123B1', 'RU2680738C1', 'JP5586216B2', 'US7490354B2', 'US9596257B2', 'RU2607231C2', 'US10348771B2', 'EP2486507B1', 'US9852289B1', 'US8056136B1', 'US10872151B1', 'US10762206B2', 'CA2964301C', 'US8756432B1', 'US8959641B2', 'KR101928908B1', 'US9846776B1', 'US10467406B2', 'US8117441B2', 'US9141790B2']","
A computer-implemented method for detecting malware variants may include (1) identifying an application package file including at least one class file, (2) identifying a set of metadata fields within the class file, (3) comparing the set of metadata fields within the class file with a set of metadata fields within a corresponding class file found in a known malware package to determine a similarity between the application package file and the known malware package, and (4) determining, based on the similarity between the application package file and the known malware package, that the application package file is a threat variant in a same threat family as the known malware package. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for detecting malware variants may include (1) identifying an application package file including at least one class file (2) identifying a set of metadata fields within the class file (3) comparing the set of metadata fields within the class file with a set of metadata fields within a corresponding class file found in a known malware package to determine a similarity between the application package file and the known malware package and (4) determining based on the similarity between the application package file and the known malware package that the application package file is a threat variant in a same threat family as the known malware package various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9246944B1,560,Systems and methods for enforcing data loss prevention policies on mobile devices ,2016-01-26,"['US9330273B2', 'US9401925B1', 'EP3411825B1', 'JP6182589B2', 'JP6314267B2', 'US9529990B2', 'US8904503B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9852289B1', 'US9800606B1', 'US8966287B2', 'US10140370B1', 'JP6336675B2', 'US8612594B1', 'US10331879B1', 'US9077541B2', 'US8688601B2', 'US20200137097A1', 'US9336384B2', 'US20150081644A1', 'US9998480B1', 'US8544060B1', 'US9141790B2']","
A computer-implemented method for enforcing data loss prevention policies on mobile devices may include (1) identifying a mobile device that connected to a network and that may include sensitive data and that is in a predetermined state that is designated for transferring data for data loss prevention analysis, (2) requesting, from a data loss prevention policy database via the network, a data loss prevention policy category for the sensitive data based on an analysis the sensitive data, (3) receiving the data loss prevention policy category, tagging, based on the data loss prevention policy category, the sensitive data on the mobile device with a data loss prevention policy tag and (4) enforcing on the mobile device, based on the data loss prevention policy tag, a data loss prevention rule for the data loss prevention category of the sensitive data. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for enforcing data loss prevention policies on mobile devices may include (1) identifying a mobile device that connected to a network and that may include sensitive data and that is in a predetermined state that is designated for transferring data for data loss prevention analysis (2) requesting from a data loss prevention policy database via the network a data loss prevention policy category for the sensitive data based on an analysis the sensitive data (3) receiving the data loss prevention policy category tagging based on the data loss prevention policy category the sensitive data on the mobile device with a data loss prevention policy tag and (4) enforcing on the mobile device based on the data loss prevention policy tag a data loss prevention rule for the data loss prevention category of the sensitive data various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,3.0,9.0
US9407664B1,562,Systems and methods for enforcing enterprise data access control policies in cloud computing environments ,2016-08-02,"['US9171154B2', 'JP6689992B2', 'US9100440B1', 'EP3430559B1', 'US9401925B1', 'US9935971B2', 'US9781143B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'US9300693B1', 'US9571509B1', 'US9246948B2', 'US9729579B1', 'US9852289B1', 'JP6166839B2', 'US9342705B1', 'CA2895265C', 'US10623418B2', 'US9223966B1', 'US8756432B1', 'US10073864B1', 'JP6122555B2', 'JP6101408B2']","
A computer-implemented method for enforcing enterprise data access control policies in cloud computing environments may include (1) intercepting, at a proxy, an attempt to configure a computing instance on a cloud computing platform with a permission that would provide the computing instance with access to secured data on the cloud computing platform, (2) identifying a user within an enterprise that initiated the attempt to configure the computing instance with the permission, (3) determining, based on a data access control policy for the enterprise, that the user is not entitled to access the secured data, and (4) blocking the attempt to configure the computing instance with the permission based on determining that the user is not entitled to access the secured data. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for enforcing enterprise data access control policies in cloud computing environments may include (1) intercepting at a proxy an attempt to configure a computing instance on a cloud computing platform with a permission that would provide the computing instance with access to secured data on the cloud computing platform (2) identifying a user within an enterprise that initiated the attempt to configure the computing instance with the permission (3) determining based on a data access control policy for the enterprise that the user is not entitled to access the secured data and (4) blocking the attempt to configure the computing instance with the permission based on determining that the user is not entitled to access the secured data various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US8782792B1,563,Systems and methods for detecting malware on mobile platforms ,2014-07-15,"['US10198574B1', 'US10025927B1', 'US10169585B1', 'US9852289B1', 'US10242186B2', 'US10762206B2', 'US9268946B2', 'US9230107B2', 'CN105814577B', 'JP5978365B2', 'US9846776B1', 'RU2653985C2', 'US10412115B1', 'US9166997B1', 'US10075455B2']","
A computer-implemented method for detecting malware on mobile platforms may include (1) identifying an application on a mobile computing platform subject to a malware evaluation, (2) transmitting the application to a security server, (3) providing emulation information to the security server, the emulation information relating to emulating the mobile computing platform, (4) receiving a result of the malware evaluation as performed by the security server, the malware evaluation including the security server using the emulation information to execute the application within an emulation of the mobile computing platform, and (5) performing a security action based on the result of the malware evaluation. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2014,"
a computer-implemented method for detecting malware on mobile platforms may include (1) identifying an application on a mobile computing platform subject to a malware evaluation (2) transmitting the application to a security server (3) providing emulation information to the security server the emulation information relating to emulating the mobile computing platform (4) receiving a result of the malware evaluation as performed by the security server the malware evaluation including the security server using the emulation information to execute the application within an emulation of the mobile computing platform and (5) performing a security action based on the result of the malware evaluation various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9569605B1,610,Systems and methods for enabling biometric authentication options ,2017-02-14,"['US9237146B1', 'JP6198231B2', 'JP2017142821A', 'US8812860B1', 'EP3411825B1', 'US9525684B1', 'US9407664B1', 'US9838405B1', 'EP3374922B1', 'EP3087531B1', 'JP6239808B1', 'US9571509B1', 'US9053310B2', 'EP2199940B1', 'US9729579B1', 'JP6649411B2', 'US9160766B2', 'KR101571741B1', 'US20200137107A1', 'US10454922B2', 'TWI516973B', 'EP2836957B1', 'WO2016015448A1', 'JP6122555B2']","
A computer-implemented method for enabling biometric authentication options may include (1) identifying a device that includes a biometric authentication option that provides access to a protected feature of the device and that is based on a biometric trait and an initial authentication option that provides access to the protected feature and that is not based on the biometric trait, (2) detecting an authentication action that is performed by a user on the device that provides access to the protected feature via the initial authentication option, (3) capturing biometric data describing the biometric trait of the user in connection with the user performing the authentication action on the device, and (4) using the biometric data as training data for the biometric authentication option to enable the user to access the protected feature of the device via the biometric authentication option. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for enabling biometric authentication options may include (1) identifying a device that includes a biometric authentication option that provides access to a protected feature of the device and that is based on a biometric trait and an initial authentication option that provides access to the protected feature and that is not based on the biometric trait (2) detecting an authentication action that is performed by a user on the device that provides access to the protected feature via the initial authentication option (3) capturing biometric data describing the biometric trait of the user in connection with the user performing the authentication action on the device and (4) using the biometric data as training data for the biometric authentication option to enable the user to access the protected feature of the device via the biometric authentication option various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
CN108701188A,618,In response to detecting the potential system and method for extorting software for modification file backup ,2018-10-23,"['US9043922B1', 'US8739284B1', 'US9246944B1', 'US9330273B2', 'US9401925B1', 'US9781143B1', 'JP6314267B2', 'US9948663B1', 'US9529990B2', 'US9679160B1', 'US9300693B1', 'US9571509B1', 'CN105874464B', 'US9729579B1', 'US9852289B1', 'US9160766B2', 'US9166997B1', 'US9946877B2', 'CN106133741B', 'US9223966B1', 'CN106257481B', 'US9736178B1', 'US9998480B1', 'US10073864B1', 'US9141790B2']","
The invention discloses a kind of in response to detecting the potential computer implemented method for extorting software for modification file backup, the method may include that (1) detects the exception for potentially indicating to extort software on computing device during file backup process, (2) in response to detecting that the exception of software is extorted in potentially instruction, backup copies are stored in the position detached with other backup copies, (3) confirm and extort software on the abnormal instruction computing device, (4) backup policy is adjusted in response to the confirmation for extorting software on the abnormal instruction computing device, and (5) manage the backup copies based on the adjusted backup policy.The invention also discloses various other methods, system and computer-readable mediums.
",H04,2018,"
the invention discloses a kind of in response to detecting the potential computer implemented method for extorting software for modification file backup the method may include that (1) detects the exception for potentially indicating to extort software on computing device during file backup process (2) in response to detecting that the exception of software is extorted in potentially instruction backup copies are stored in the position detached with other backup copies (3) confirm and extort software on the abnormal instruction computing device (4) backup policy is adjusted in response to the confirmation for extorting software on the abnormal instruction computing device and (5) manage the backup copies based on the adjusted backup policythe invention also discloses various other methods system and computer-readable mediums
",4,H04_4,2,10.0,49.0,9.0
US9401925B1,619,Systems and methods for detecting security threats based on user profiles ,2016-07-26,"['US9171154B2', 'US8495747B1', 'US9330273B2', 'US8806641B1', 'EP3411825B1', 'US9888032B2', 'JP6314267B2', 'EP3374922B1', 'US10623435B2', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'JP2018501591A', 'US10270769B2', 'US9852289B1', 'US9116768B1', 'US10257220B2', 'US9223966B1', 'US9148441B1', 'US9736178B1', 'US9998480B1', 'EP2316092B1', 'US9846776B1', 'US10230750B2', 'US9256739B1']","
A computer-implemented method for detecting security threats based on user profiles may include 1) identifying behavior on a computing system that is potentially indicative of a security threat, 2) identifying a user profile for a user of the computing system that estimates a level of the user's technical sophistication, 3) comparing the identified behavior with the estimated level of the user's technical sophistication, and 4) determining whether the identified behavior indicates a security threat based at least in part on the comparison of the identified behavior with the estimated level of the user's technical sophistication. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for detecting security threats based on user profiles may include 1) identifying behavior on a computing system that is potentially indicative of a security threat 2) identifying a user profile for a user of the computing system that estimates a level of the user's technical sophistication 3) comparing the identified behavior with the estimated level of the user's technical sophistication and 4) determining whether the identified behavior indicates a security threat based at least in part on the comparison of the identified behavior with the estimated level of the user's technical sophistication various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9800560B1,1004,Systems and methods for monitoring encrypted data transmission ,2017-10-24,"['JP6523463B2', 'JP6689992B2', 'US8954758B2', 'EP3127274B1', 'US9712565B2', 'US20190334950A1', 'US9529990B2', 'US9300693B1', 'US9892265B1', 'US9800606B1', 'US9858428B2', 'US9846772B1', 'US9503433B2', 'US8391494B1', 'US8966249B2', 'JP5985756B2', 'EP2837131B1', 'US9256739B1', 'JP6101408B2']","
The disclosed computer-implemented method for monitoring encrypted data transmission may include (1) detecting a data transmission session between an application running on a first device and an application running on a second device, (2) identifying a shared library loaded by the application running on the first device to establish encryption for the data transmission session, (3) retrieving, from the shared library, a symmetric session key designated for the data transmission session, (4) intercepting data transmitted during the data transmission session, the data having been encrypted using the symmetric session key, and (5) decrypting the data utilizing the symmetric session key retrieved from the shared library. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
the disclosed computer-implemented method for monitoring encrypted data transmission may include (1) detecting a data transmission session between an application running on a first device and an application running on a second device (2) identifying a shared library loaded by the application running on the first device to establish encryption for the data transmission session (3) retrieving from the shared library a symmetric session key designated for the data transmission session (4) intercepting data transmitted during the data transmission session the data having been encrypted using the symmetric session key and (5) decrypting the data utilizing the symmetric session key retrieved from the shared library various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9100440B1,1198,Systems and methods for applying data loss prevention policies to closed-storage portable devices ,2015-08-04,"['US9245123B1', 'US8806625B1', 'JP6689992B2', 'US8943546B1', 'US8726392B1', 'CA2989160C', 'CA2527526C', 'US9838405B1', 'US9529990B2', 'US9300693B1', 'US9852289B1', 'US9800606B1', 'JP6166839B2', 'AU2013371346B2', 'US9166997B1', 'US9223966B1', 'US9148441B1', 'US9418222B1', 'CA2964301C', 'JP6205062B2', 'US9998480B1', 'US9141790B2', 'JP6122555B2', 'US9256739B1', 'US20190199732A1']","
A computer-implemented method for applying data loss prevention policies to closed-storage portable devices may include (1) injecting a data loss prevention component into at least one application process that is running on a computing device, (2) intercepting, via the data loss prevention component, an attempt by the application process to transfer a file to a closed-storage portable device that is connected to the computing device, (3) identifying a data loss prevention policy that applies to the attempt by the application process to transfer the file, (4) determining that the attempt by the application process to transfer the file violates the data loss prevention policy, and (5) performing a security action in response to determining that the attempt by the application process to transfer the file violates the data loss prevention policy. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for applying data loss prevention policies to closed-storage portable devices may include (1) injecting a data loss prevention component into at least one application process that is running on a computing device (2) intercepting via the data loss prevention component an attempt by the application process to transfer a file to a closed-storage portable device that is connected to the computing device (3) identifying a data loss prevention policy that applies to the attempt by the application process to transfer the file (4) determining that the attempt by the application process to transfer the file violates the data loss prevention policy and (5) performing a security action in response to determining that the attempt by the application process to transfer the file violates the data loss prevention policy various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US10140370B1,1259,Systems and methods for maintaining encrypted search indexes on third-party storage systems ,2018-11-27,"['US9881164B1', 'JP6689992B2', 'EP3120291B1', 'US8832427B2', 'US20190036693A1', 'US10372919B1', 'US10025597B2', 'US9407664B1', 'US10348497B2', 'US7908476B2', 'US9137222B2', 'US9608816B2', 'US9571509B1', 'US9455963B1', 'US9852289B1', 'US9509737B2', 'US10841082B2', 'US9077541B2', 'US9336384B2', 'US9397833B2', 'ES2680660T3', 'US9424136B1', 'AU2015256400B2']","
A computer-implemented method for maintaining encrypted search indexes on third party storage systems may include (1) identifying a plurality of encrypted files, (2) identifying a plurality of keywords contained in the plurality of encrypted files, and (3) generating an encrypted search index for searching the plurality of encrypted files by (i) identifying, for each keyword in the plurality of keywords, a list of encrypted files in the plurality of encrypted files that contain the keyword, (ii) encrypting the list of encrypted files, and (iii) storing the encrypted list of encrypted files such that the encrypted list of encrypted files can be identified using a lookup key generated by applying a pseudo-random function to the keyword. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
a computer-implemented method for maintaining encrypted search indexes on third party storage systems may include (1) identifying a plurality of encrypted files (2) identifying a plurality of keywords contained in the plurality of encrypted files and (3) generating an encrypted search index for searching the plurality of encrypted files by (i) identifying for each keyword in the plurality of keywords a list of encrypted files in the plurality of encrypted files that contain the keyword (ii) encrypting the list of encrypted files and (iii) storing the encrypted list of encrypted files such that the encrypted list of encrypted files can be identified using a lookup key generated by applying a pseudo-random function to the keyword various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,3.0,9.0
US9298724B1,1938,Systems and methods for preserving deduplication efforts after backup-job failures ,2016-03-29,"['JP5638126B2', 'US8938643B1', 'US9336224B2', 'US9100440B1', 'US8805788B2', 'JP5669867B2', 'EP3411825B1', 'EP2840495B1', 'US9411821B1', 'US8224875B1', 'US10108652B2', 'US10445518B2', 'US9377964B2', 'US8280854B1', 'US8874508B1', 'ES2653698T3', 'US10545833B1', 'EP2539820B1', 'US10353871B2', 'US9223966B1', 'US9348827B1', 'US8112392B1', 'US20200272549A1', 'JP5642198B2', 'AU2015256400B2']","
A computer-implemented method for preserving deduplication efforts after backup-job failures may include (1) identifying a deduplicated data system that reduces redundant data storage by storing and referencing a plurality of deduplicated data segments and reclaims storage space by deleting unreferenced data segments from the deduplicated data system, (2) identifying a backup job that backs up data to the deduplicated data system, causes the deduplicated data system to store at least one new data segment available to be referenced within the deduplicated data system, and fails after the deduplicated data system stores the new data segment within the deduplicated data system causing the new data segment to be unreferenced within the deduplicated data system, and (3) causing the deduplicated data system to retain the new data segment until the backup job is retried despite the new data segment being unreferenced. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for preserving deduplication efforts after backup-job failures may include (1) identifying a deduplicated data system that reduces redundant data storage by storing and referencing a plurality of deduplicated data segments and reclaims storage space by deleting unreferenced data segments from the deduplicated data system (2) identifying a backup job that backs up data to the deduplicated data system causes the deduplicated data system to store at least one new data segment available to be referenced within the deduplicated data system and fails after the deduplicated data system stores the new data segment within the deduplicated data system causing the new data segment to be unreferenced within the deduplicated data system and (3) causing the deduplicated data system to retain the new data segment until the backup job is retried despite the new data segment being unreferenced various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US8627469B1,2111,Systems and methods for using acquisitional contexts to prevent false-positive malware classifications ,2014-01-07,"['US9652617B1', 'CA2804258C', 'US9940454B2', 'US20190363893A1', 'US10121000B1', 'US9596257B2', 'US10686809B2', 'US9838405B1', 'US9948663B1', 'US9529990B2', 'US9571509B1', 'EP2831798B1', 'US9800606B1', 'US8479296B2', 'US9582668B2', 'US9223966B1', 'CN103679031B', 'US9336384B2', 'US10762206B2', 'US9230099B1', 'US10073864B1', 'US8621233B1', 'US8806641B1']","
A method for using acquisitional contexts to prevent false-positive malware classifications. The method may include (1) receiving, from at least one client-side computing device within a community of users, contextual information associated with a file, (2) determining, based at least in part on the contextual information received from the client-side computing device, a reputation rating for the file, and (3) providing the reputation rating for the file to at least one additional client-side computing device within the community in order to prevent the additional client-side computing device from falsely classifying the file as untrustworthy due to acquiring an additional instance of the file via a context that is insufficient to determine that the additional instance of the file is trustworthy. Various other methods and systems are also disclosed.
",G06,2014,"
a method for using acquisitional contexts to prevent false-positive malware classifications the method may include (1) receiving from at least one client-side computing device within a community of users contextual information associated with a file (2) determining based at least in part on the contextual information received from the client-side computing device a reputation rating for the file and (3) providing the reputation rating for the file to at least one additional client-side computing device within the community in order to prevent the additional client-side computing device from falsely classifying the file as untrustworthy due to acquiring an additional instance of the file via a context that is insufficient to determine that the additional instance of the file is trustworthy various other methods and systems are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9065849B1,2625,Systems and methods for determining trustworthiness of software programs ,2015-06-23,"['US9680849B2', 'JP6689992B2', 'US8806641B1', 'US9596257B2', 'US9407664B1', 'US9386034B2', 'US8719935B2', 'US9948663B1', 'US9529990B2', 'US9852289B1', 'US9160766B2', 'US9800606B1', 'EP3014447B1', 'US8850517B2', 'US9116768B1', 'US9256739B1', 'CA2895265C', 'US10032033B2', 'US9223966B1', 'US9148441B1', 'US9418222B1', 'US9736178B1', 'US8756432B1', 'US9846772B1', 'US9794270B2']","
A computer-implemented method for determining trustworthiness of software programs may include (1) determining, for at least one software program, a prevalence score that indicates a prevalence of the software program within a local network, (2) obtaining, for the software program, a reputation score that indicates a reputation of the software program, (3) determining a trustworthiness of the software program based on both the reputation score of the software program and the prevalence score of the software program, and (4) performing a security action based on the trustworthiness of the software program. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for determining trustworthiness of software programs may include (1) determining for at least one software program a prevalence score that indicates a prevalence of the software program within a local network (2) obtaining for the software program a reputation score that indicates a reputation of the software program (3) determining a trustworthiness of the software program based on both the reputation score of the software program and the prevalence score of the software program and (4) performing a security action based on the trustworthiness of the software program various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9485272B1,2760,Systems and methods for estimating confidence scores of unverified signatures ,2016-11-01,"['JP6689992B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'JP6560368B2', 'US8561193B1', 'JP6335315B2', 'US9729579B1', 'US9852289B1', 'US9800606B1', 'US9298724B1', 'US9166997B1', 'US9116768B1', 'US10331879B1', 'US9223966B1', 'US9336384B2', 'US8225406B1', 'US9736178B1', 'JP6205062B2', 'US8756432B1', 'US9998480B1', 'US9846772B1', 'JP6122555B2', 'US9256739B1', 'JP6101408B2']","
The disclosed computer-implemented method for estimating confidence scores of unverified signatures may include (1) detecting a potentially malicious event that triggers a malware signature whose confidence score is above a certain threshold, (2) detecting another event that triggers another signature whose confidence score is unknown, (3) determining that the potentially malicious event and the other event occurred within a certain time period of one another, and then (4) assigning, to the other signature, a confidence score based at least in part on the potentially malicious event and the other event occurring within the certain time period of one another. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for estimating confidence scores of unverified signatures may include (1) detecting a potentially malicious event that triggers a malware signature whose confidence score is above a certain threshold (2) detecting another event that triggers another signature whose confidence score is unknown (3) determining that the potentially malicious event and the other event occurred within a certain time period of one another and then (4) assigning to the other signature a confidence score based at least in part on the potentially malicious event and the other event occurring within the certain time period of one another various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US9582669B1,2892,Systems and methods for detecting discrepancies in automobile-network data ,2017-02-28,"['US8806625B1', 'US9043922B1', 'JP6689992B2', 'US9100440B1', 'US10248910B2', 'US9838405B1', 'JP6314267B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US8904503B2', 'US9852289B1', 'US9800606B1', 'US9332022B1', 'US10326733B2', 'US8850517B2', 'EP2896169B1', 'EP3207487B1', 'AU2013259469A1', 'US9998480B1', 'EP2316092B1', 'US9141790B2', 'JP6122555B2', 'US8965626B2', 'US20140325664A1']","
The disclosed computer-implemented method for detecting discrepancies in automobile-network data may include (1) receiving data that indicates at least one attribute of an automobile and that was conveyed via an automobile-network message that was purportedly broadcast over an automobile network of the automobile, (2) receiving additional data that indicates the same attribute of the automobile and that was not conveyed via any automobile-network message that was broadcast over the automobile network, (3) detecting a discrepancy between the data and the additional data, and (4) performing a security action in response to detecting the discrepancy between the data and the additional data. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for detecting discrepancies in automobile-network data may include (1) receiving data that indicates at least one attribute of an automobile and that was conveyed via an automobile-network message that was purportedly broadcast over an automobile network of the automobile (2) receiving additional data that indicates the same attribute of the automobile and that was not conveyed via any automobile-network message that was broadcast over the automobile network (3) detecting a discrepancy between the data and the additional data and (4) performing a security action in response to detecting the discrepancy between the data and the additional data various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9483643B1,3161,Systems and methods for creating behavioral signatures used to detect malware ,2016-11-01,"['JP6689992B2', 'US8806641B1', 'US9639693B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9171156B1', 'EP3087531B1', 'US8904503B2', 'US8561193B1', 'US9852289B1', 'US9800606B1', 'US9116768B1', 'US8925037B2', 'US9148441B1', 'US9336384B2', 'US9418222B1', 'US8225406B1', 'US9736178B1', 'US8756432B1', 'CA2964301C', 'US9998480B1', 'US9846772B1', 'JP5978383B2', 'US9256739B1']","
The disclosed computer-implemented method for creating behavioral signatures used to detect malware may include (1) maintaining a database that identifies (A) known malicious files and behaviors exhibited by the known malicious files and (B) known non-malicious files and behaviors exhibited by the known non-malicious files and (2) creating a behavioral signature used to detect malware by (A) determining a combination of behaviors exhibited by at least one of the known malicious files, (B) identifying the number of known malicious files that exhibit each behavior within the combination, (C) identifying the number of known non-malicious files that exhibit each behavior within the combination, and (D) determining that the number of known malicious files that exhibit each behavior within the combination exceeds the number of known non-malicious files that exhibit each behavior within the combination by a certain threshold. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
the disclosed computer-implemented method for creating behavioral signatures used to detect malware may include (1) maintaining a database that identifies (a) known malicious files and behaviors exhibited by the known malicious files and (b) known non-malicious files and behaviors exhibited by the known non-malicious files and (2) creating a behavioral signature used to detect malware by (a) determining a combination of behaviors exhibited by at least one of the known malicious files (b) identifying the number of known malicious files that exhibit each behavior within the combination (c) identifying the number of known non-malicious files that exhibit each behavior within the combination and (d) determining that the number of known malicious files that exhibit each behavior within the combination exceeds the number of known non-malicious files that exhibit each behavior within the combination by a certain threshold various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10546123B1,3167,Systems and methods for identifying malicious computer files ,2020-01-28,"['US8739284B1', 'JP6689992B2', 'US8627469B1', 'US9246944B1', 'US9401925B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9171156B1', 'EP3087531B1', 'US9300693B1', 'JP6335315B2', 'US9160766B2', 'US9800606B1', 'US9116768B1', 'US8943587B2', 'US9223966B1', 'US9148441B1', 'US9336384B2', 'US9736178B1', 'US8756432B1', 'US9998480B1', 'US9514309B1', 'US10073864B1', 'US8806641B1']","
A computer-implemented method for identifying malicious computer files may include (i) receiving, by a computing device, a set of files from a set of client devices, (ii) performing, by the computing device, a machine learning classification of file attributes on the set of files, (iii) determining, based on the machine learning classification, a node pattern of a suspicious file in the set of files, (iv) calculating, by hashing the node pattern, a file prevalence score of the suspicious file, and (v) performing, by the computing device, a security action based on the file prevalence score of the suspicious file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2020,"
a computer-implemented method for identifying malicious computer files may include (i) receiving by a computing device a set of files from a set of client devices (ii) performing by the computing device a machine learning classification of file attributes on the set of files (iii) determining based on the machine learning classification a node pattern of a suspicious file in the set of files (iv) calculating by hashing the node pattern a file prevalence score of the suspicious file and (v) performing by the computing device a security action based on the file prevalence score of the suspicious file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9178904B1,3574,Systems and methods for detecting malicious browser-based scripts ,2015-11-03,"['US9594881B2', 'US8806641B1', 'EP3411825B1', 'US9838405B1', 'EP3262815A1', 'US9009836B1', 'JP5978383B2', 'US9529990B2', 'US8561193B1', 'US9300693B1', 'JP6335315B2', 'US9659175B2', 'US9852289B1', 'US9800606B1', 'US9166997B1', 'US9116768B1', 'US9223966B1', 'US9148441B1', 'US10331879B1', 'US9336384B2', 'US9418222B1', 'US9998480B1', 'US9846772B1', 'US8990948B2', 'US9141790B2']","
A computer-implemented method for detecting malicious browser-based scripts may include (1) identifying an attempt by a web browser to access sensitive information stored on a server, (2) identifying a web browser script installed in the web browser, (3) calculating a signature hash for the web browser script, (4) querying, using the signature hash, a browser script signature database that associates web browser script signature hashes with script security indicators, (5) receiving, in response to querying the browser script signature database, a script security indicator associated with the signature hash, and (6) applying, based on the script security indicator associated with the web browser script, a script security policy associated with the web browser script. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for detecting malicious browser-based scripts may include (1) identifying an attempt by a web browser to access sensitive information stored on a server (2) identifying a web browser script installed in the web browser (3) calculating a signature hash for the web browser script (4) querying using the signature hash a browser script signature database that associates web browser script signature hashes with script security indicators (5) receiving in response to querying the browser script signature database a script security indicator associated with the signature hash and (6) applying based on the script security indicator associated with the web browser script a script security policy associated with the web browser script various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9171178B1,3767,Systems and methods for optimizing security controls for virtual data centers ,2015-10-27,"['JP6689992B2', 'US9838405B1', 'US9185119B1', 'JP6471233B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'US8561193B1', 'US9300693B1', 'US9571509B1', 'US9729579B1', 'US9852289B1', 'AU2013371346B2', 'US9342705B1', 'US8612594B1', 'US8938782B2', 'US9223966B1', 'US9230099B1', 'US8756432B1', 'US8782792B1', 'US9998480B1', 'EP2529328B1', 'US10073864B1', 'JP6122555B2']","
A computer-implemented method for optimizing security controls for virtual data centers may include 1) identifying a security policy that applies to at least one workload configured to store data on a first storage appliance, 2) identifying at least one storage-appliance functionality capable of implementing at least a part of the security policy, 3) identifying a second storage appliance that possesses the storage-appliance functionality, and 4) migrating the data from the first storage appliance to the second storage appliance in response to identifying the security policy and the storage-appliance functionality. Variants include methods, systems, and computer-readable media.
",G06,2015,"
a computer-implemented method for optimizing security controls for virtual data centers may include 1) identifying a security policy that applies to at least one workload configured to store data on a first storage appliance 2) identifying at least one storage-appliance functionality capable of implementing at least a part of the security policy 3) identifying a second storage appliance that possesses the storage-appliance functionality and 4) migrating the data from the first storage appliance to the second storage appliance in response to identifying the security policy and the storage-appliance functionality variants include methods systems and computer-readable media
",4,G06_4,2,10.0,0.0,9.0
US10326772B2,4232,Systems and methods for anonymizing log entries ,2019-06-18,"['US9148441B1', 'US9998480B1', 'US9838405B1', 'US9846772B1', 'US10073864B1', 'US8281399B1', 'US9300693B1', 'US9888032B2', 'US10140370B1', 'US9160766B2', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'JP2017142821A', 'JP6689992B2', 'US9230099B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'US9800606B1', 'US9529990B2', 'EP3207487B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for anonymizing log entries may include (1) detecting a data pattern in a group of log entries documenting events performed by at least one process executing on at least one device, (2) identifying, in the data pattern, at least one data field in the log entries that contains variable data, (3) evaluating the data field containing variable data to determine whether the data field contains sensitive data, and (4) in response to determining whether the data field contains sensitive data, applying a data-anonymization policy to the data field to anonymize the log entries. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for anonymizing log entries may include (1) detecting a data pattern in a group of log entries documenting events performed by at least one process executing on at least one device (2) identifying in the data pattern at least one data field in the log entries that contains variable data (3) evaluating the data field containing variable data to determine whether the data field contains sensitive data and (4) in response to determining whether the data field contains sensitive data applying a data-anonymization policy to the data field to anonymize the log entries various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9208348B1,4425,Systems and methods for managing encrypted files within application packages ,2015-12-08,"['US9116768B1', 'AU2015256400B2', 'US9800560B1', 'US9141790B2', 'US9838405B1', 'US9990512B2', 'US9300693B1', 'US10140370B1', 'US9729579B1', 'US8806625B1', 'US9571509B1', 'JP6689992B2', 'US9154466B2', 'US9223966B1', 'US10104100B1', 'US9852289B1', 'US9298724B1', 'AU2015374078B2', 'US8756432B1', 'JP6166839B2', 'US8429745B1', 'JP6789308B2', 'US8561193B1', 'US10331879B1', 'US9100440B1']","
A computer-implemented method for managing encrypted files within application packages may include (1) identifying an individual component within an application package that requires encryption, (2) creating an encrypted file by encrypting the individual component, (3) decomposing the encrypted file into (a) a primary encrypted file that contains an initial portion of the encrypted file that matches a critical attribute of the individual component and (b) an auxiliary encrypted file that contains the remaining portion of the encrypted file, and (4) replacing, within the application package, the individual component with the primary encrypted file and the auxiliary encrypted file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for managing encrypted files within application packages may include (1) identifying an individual component within an application package that requires encryption (2) creating an encrypted file by encrypting the individual component (3) decomposing the encrypted file into (a) a primary encrypted file that contains an initial portion of the encrypted file that matches a critical attribute of the individual component and (b) an auxiliary encrypted file that contains the remaining portion of the encrypted file and (4) replacing within the application package the individual component with the primary encrypted file and the auxiliary encrypted file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9332025B1,4440,Systems and methods for detecting suspicious files ,2016-05-03,"['CA2955257C', 'US9246944B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9300693B1', 'CA2989160C', 'US9088560B1', 'US9571509B1', 'JP6689992B2', 'US9171156B1', 'EP2831798B1', 'US9223966B1', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US8060596B1', 'AU2013371346B2', 'AU2015374078B2', 'US8756432B1', 'US8561193B1', 'EP3087531B1', 'US8806641B1', 'US9736178B1']","
A computer-implemented method for detecting suspicious files may include (1) detecting a file within incoming file traffic directed to a file recipient, (2) identifying a type of the file within the incoming file traffic directed to the file recipient, (3) determining a frequency with which the type of the file appears within the incoming file traffic directed to the file recipient, and (4) performing a security action on the file in response to the frequency of the type of the file within the incoming file traffic falling below a predetermined threshold. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for detecting suspicious files may include (1) detecting a file within incoming file traffic directed to a file recipient (2) identifying a type of the file within the incoming file traffic directed to the file recipient (3) determining a frequency with which the type of the file appears within the incoming file traffic directed to the file recipient and (4) performing a security action on the file in response to the frequency of the type of the file within the incoming file traffic falling below a predetermined threshold various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9219707B1,4670,Systems and methods for sharing the results of malware scans within networks ,2015-12-22,"['US9116768B1', 'AU2015256400B2', 'US9148441B1', 'US9998480B1', 'US9838405B1', 'US9596257B2', 'EP3404948B1', 'US9300693B1', 'US9342705B1', 'US8225406B1', 'US9088560B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9171156B1', 'EP2529328B1', 'US9852289B1', 'US9256739B1', 'US9800606B1', 'EP2316092B1', 'US9298724B1', 'CA2868752C', 'JP6101408B2', 'US8756432B1', 'US8561193B1']","
A computer-implemented method for sharing the results of malware scans within networks may include (1) identifying a set of files stored on a set of client devices within a network, (2) obtaining a set of copies of the files stored on the client devices within the network, (3) performing a malware scan on the copies of the files, (4) generating a result of the malware scan performed on the copies of the files, and then (5) sharing the result of the malware scan with at least a subset of the client devices within the network to enable the subset of client devices to use the result of the malware scan instead of each performing an additional malware scan that is at least partially redundant to the malware scan performed on the copies of the files. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for sharing the results of malware scans within networks may include (1) identifying a set of files stored on a set of client devices within a network (2) obtaining a set of copies of the files stored on the client devices within the network (3) performing a malware scan on the copies of the files (4) generating a result of the malware scan performed on the copies of the files and then (5) sharing the result of the malware scan with at least a subset of the client devices within the network to enable the subset of client devices to use the result of the malware scan instead of each performing an additional malware scan that is at least partially redundant to the malware scan performed on the copies of the files various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9659176B1,4812,Systems and methods for generating repair scripts that facilitate remediation of malware side-effects ,2017-05-23,"['US9100426B1', 'US9148441B1', 'US9998480B1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9438560B2', 'US9729579B1', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'JP6335315B2', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9582669B1', 'US9800606B1', 'US9529990B2', 'US8756432B1', 'US8561193B1', 'JP6122555B2', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for generating repair scripts that facilitate remediation of malware side-effects may include (1) identifying a potentially malicious file located on a computing system, (2) determining at least one potential side-effect of the potentially malicious file, (3) generating, based at least in part on the potential side-effect of the potentially malicious file, a repair script that facilitates remediation of the potential side-effect, and then (4) remedying the potential side-effect by directing the computing system to execute the repair script. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for generating repair scripts that facilitate remediation of malware side-effects may include (1) identifying a potentially malicious file located on a computing system (2) determining at least one potential side-effect of the potentially malicious file (3) generating based at least in part on the potential side-effect of the potentially malicious file a repair script that facilitates remediation of the potential side-effect and then (4) remedying the potential side-effect by directing the computing system to execute the repair script various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10455085B1,4846,Systems and methods for real-time scam protection on phones ,2019-10-22,"['US9246944B1', 'US8495705B1', 'US9998480B1', 'US10248910B2', 'US9838405B1', 'US10073864B1', 'US9300693B1', 'US9569605B1', 'US10742665B2', 'US9934381B1', 'US9245123B1', 'JP5963966B2', 'JP6335315B2', 'US9294284B1', 'US9336384B2', 'US8914767B2', 'US8756432B1', 'US10032033B2', 'US10331879B1', 'US9100440B1', 'US20200137107A1', 'JP6205062B2', 'US9514309B1', 'US9736178B1', 'JP6364547B2']","
The disclosed computer-implemented method for using electronic text information to automatically determine untrustworthy voice calls, at least a portion of the method being performed by a computing device comprising at least one processor, may include (1) during a voice call, receiving, by the computing device, text information representing contents of the voice call, (2) analyzing, by the computing device, the text information representing the contents of the voice call, (3) determining, by the computing device, that the voice call is untrustworthy based on the analysis of the text information, and (4) during the voice call, advising a recipient of the voice call of the determination that the voice call is untrustworthy. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for using electronic text information to automatically determine untrustworthy voice calls at least a portion of the method being performed by a computing device comprising at least one processor may include (1) during a voice call receiving by the computing device text information representing contents of the voice call (2) analyzing by the computing device the text information representing the contents of the voice call (3) determining by the computing device that the voice call is untrustworthy based on the analysis of the text information and (4) during the voice call advising a recipient of the voice call of the determination that the voice call is untrustworthy various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9756007B1,5066,Systems and methods for detecting compromised messaging accounts ,2017-09-05,"['US9246944B1', 'US8495705B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'JP6560368B2', 'US9330273B2', 'US10073864B1', 'US9223961B1', 'US9160766B2', 'US9166997B1', 'US9571509B1', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'EP2316092B1', 'US9781143B1', 'US8756432B1', 'JP6101408B2', 'EP3411825B1', 'EP3584735A1']","
A computer-implemented method for detecting compromised messaging accounts may include maintaining a behavior database that associates a plurality of messaging accounts with messaging behaviors that typify each of the messaging accounts. The method may also include detecting an attempt by a user to send a message from a messaging account. In addition, the method may include determining that the messaging account has potentially been compromised by comparing features of the message with messaging behaviors associated with the messaging account in the behavior database. Finally, the method may include verifying that the user is an owner of the messaging account in response to the determination that the messaging account has potentially been compromised. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for detecting compromised messaging accounts may include maintaining a behavior database that associates a plurality of messaging accounts with messaging behaviors that typify each of the messaging accounts the method may also include detecting an attempt by a user to send a message from a messaging account in addition the method may include determining that the messaging account has potentially been compromised by comparing features of the message with messaging behaviors associated with the messaging account in the behavior database finally the method may include verifying that the user is an owner of the messaging account in response to the determination that the messaging account has potentially been compromised various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9166995B1,5134,Systems and methods for using user-input information to identify computer security threats ,2015-10-20,"['US9116768B1', 'US9148441B1', 'US9998480B1', 'US9418222B1', 'US9300693B1', 'US9729579B1', 'US8806625B1', 'US9245123B1', 'US9407664B1', 'CN108701188A', 'US9401925B1', 'US9294284B1', 'JP6059812B2', 'US8719935B2', 'US9852289B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'US9781143B1', 'US9529990B2', 'US8060940B2', 'US7409719B2', 'JP6122555B2', 'JP6205062B2', 'US9736178B1']","
A computer-implemented method for using user-input information to identify computer security threats may include (1) detecting activity at a computing system, (2) determining whether a user provided input at the computing system when the activity occurred, (3) determining that the activity indicates a potential security threat based at least in part on whether the user provided input at the computing system when the activity occurred, and (4) performing a security action on the activity in response to the determination that the activity indicates a potential security threat. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for using user-input information to identify computer security threats may include (1) detecting activity at a computing system (2) determining whether a user provided input at the computing system when the activity occurred (3) determining that the activity indicates a potential security threat based at least in part on whether the user provided input at the computing system when the activity occurred and (4) performing a security action on the activity in response to the determination that the activity indicates a potential security threat various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,49.0,9.0
US9104859B1,5138,Systems and methods for scanning data stored on cloud computing platforms ,2015-08-11,"['US9100426B1', 'US9424136B1', 'US9141790B2', 'US9838405B1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9342705B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'US9223966B1', 'US9401925B1', 'JP6335315B2', 'US9852289B1', 'US9800606B1', 'EP2316092B1', 'EP3308313B1', 'US9298724B1', 'AU2015374078B2', 'JP6166839B2', 'US10331879B1', 'US9043922B1', 'JP6205062B2', 'EP3411825B1']","
A computer-implemented method for scanning data stored on cloud computing platforms may include (1) identifying a cloud computing service that hosts a plurality of cloud computing instances and a plurality of data volumes that store data for the plurality of cloud computing instances, (2) determining that a data volume within the plurality of data volumes that stores data for a cloud computing instance within the plurality of cloud computing instances is subject to a security scan, (3) detecting a computing system that is external to the cloud computing instance, and (4) performing the security scan on the data volume from the computing system that is external to the cloud computing instance instead of performing the security scan from within the cloud computing instance. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for scanning data stored on cloud computing platforms may include (1) identifying a cloud computing service that hosts a plurality of cloud computing instances and a plurality of data volumes that store data for the plurality of cloud computing instances (2) determining that a data volume within the plurality of data volumes that stores data for a cloud computing instance within the plurality of cloud computing instances is subject to a security scan (3) detecting a computing system that is external to the cloud computing instance and (4) performing the security scan on the data volume from the computing system that is external to the cloud computing instance instead of performing the security scan from within the cloud computing instance various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US10425435B1,5172,Systems and methods for detecting anomalous behavior in shared data repositories ,2019-09-24,"['US9116768B1', 'US9148441B1', 'US9424136B1', 'US9141790B2', 'US9838405B1', 'US9846772B1', 'US9300693B1', 'JP6336675B2', 'US9729579B1', 'US9166997B1', 'US9223966B1', 'JP6335315B2', 'US9401925B1', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'EP2316092B1', 'EP3308313B1', 'US9529990B2', 'US8904503B2', 'US8561193B1', 'EP3207487B1', 'JP6314267B2', 'EP3087531B1', 'EP3411825B1']","
The disclosed computer-implemented method for detecting anomalous behavior in shared data repositories may include (i) identifying a shared data repository that comprises files, (ii) monitoring access to the files for a predetermined time period in order to determine which files are accessed by each user, (iii) creating a graph of the access to the files, wherein each vertex represents a user and each edge that connects two vertices represents that one or more files were accessed by both users represented by the two vertices, (iv) deriving, from the graph, a set of communities, wherein each community represents a set of users that collaborated on one or more files during the predetermined time period, and (v) determining that a collaboration pattern of a user does not match a collaboration pattern for the user's community observed during the predetermined time period. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for detecting anomalous behavior in shared data repositories may include (i) identifying a shared data repository that comprises files (ii) monitoring access to the files for a predetermined time period in order to determine which files are accessed by each user (iii) creating a graph of the access to the files wherein each vertex represents a user and each edge that connects two vertices represents that one or more files were accessed by both users represented by the two vertices (iv) deriving from the graph a set of communities wherein each community represents a set of users that collaborated on one or more files during the predetermined time period and (v) determining that a collaboration pattern of a user does not match a collaboration pattern for the user's community observed during the predetermined time period various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US10061683B2,5180,Systems and methods for collecting error data to troubleshoot product errors ,2018-08-28,"['US9002972B2', 'US8627469B1', 'US9116768B1', 'US9424136B1', 'US9705855B2', 'US9998480B1', 'US9838405B1', 'US9300693B1', 'US9524389B1', 'US9245123B1', 'US9052935B1', 'JP6689992B2', 'JP6335315B2', 'US9223966B1', 'US9294284B1', 'US9336384B2', 'EP3374922B1', 'US9800606B1', 'US9298724B1', 'US8688642B2', 'US9529990B2', 'US8756432B1', 'JP6101408B2', 'US8904503B2', 'JP6205062B2']","
The disclosed computer-implemented method for collecting error data to troubleshoot product errors may include (1) monitoring Internet searches submitted by a user of a computing device to a search engine executing within a browser installed on the computing device, (2) identifying, while monitoring the Internet searches, a search including a description of an error in a product installed on the computing device, (3) in response to identifying the search, automatically enabling debug logging for the product on the computing device, and (4) maintaining an event log including information collected from the debug logging that may be used to diagnose the error. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for collecting error data to troubleshoot product errors may include (1) monitoring internet searches submitted by a user of a computing device to a search engine executing within a browser installed on the computing device (2) identifying while monitoring the internet searches a search including a description of an error in a product installed on the computing device (3) in response to identifying the search automatically enabling debug logging for the product on the computing device and (4) maintaining an event log including information collected from the debug logging that may be used to diagnose the error various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9501649B2,5198,Systems and methods for determining potential impacts of applications on the security of computing systems ,2016-11-22,"['US8782792B1', 'US9116768B1', 'US9148441B1', 'US8725702B1', 'US9998480B1', 'US9838405B1', 'US9948663B1', 'US9300693B1', 'US9729579B1', 'US9245123B1', 'US9166997B1', 'JP6689992B2', 'JP6335315B2', 'US8181251B2', 'US8719935B2', 'US9852289B1', 'US9256739B1', 'JP5978365B2', 'EP3374922B1', 'US9800606B1', 'EP3308313B1', 'US8756432B1', 'JP6166839B2', 'JP6101408B2', 'EP3087531B1']","
A computer-implemented method for determining potential impacts of applications on the security of computing systems may include (1) identifying an application subject to a security vulnerability assessment, (2) requesting information that identifies a potential impact of the application on a vulnerability of at least one computing system to at least one exploit associated with the application, (3) receiving the information that identifies the potential impact of the application on the vulnerability of the computing system, wherein the information may be derived at least in part from data from at least one additional computing system on which the application has previously been installed and (4) directing a determination about an installation of the application on the computing system based at least in part on the information that identifies the potential impact of the application on the vulnerability of the computing system. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for determining potential impacts of applications on the security of computing systems may include (1) identifying an application subject to a security vulnerability assessment (2) requesting information that identifies a potential impact of the application on a vulnerability of at least one computing system to at least one exploit associated with the application (3) receiving the information that identifies the potential impact of the application on the vulnerability of the computing system wherein the information may be derived at least in part from data from at least one additional computing system on which the application has previously been installed and (4) directing a determination about an installation of the application on the computing system based at least in part on the information that identifies the potential impact of the application on the vulnerability of the computing system various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9800590B1,5213,Systems and methods for threat detection using a software program update profile ,2017-10-24,"['US9100426B1', 'US9116768B1', 'US9141790B2', 'US9998480B1', 'US9838405B1', 'US9330273B2', 'US9948663B1', 'US9300693B1', 'US9185119B1', 'US9009836B1', 'JP2016006670A', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9401925B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US9529990B2', 'US8756432B1', 'JP6166839B2', 'EP3207487B1', 'US9043922B1', 'US9514309B1']","
The disclosed computer-implemented method for threat detection using a software program update profile may include (1) building an update behavioral model that identifies legitimate update behavior for a software application by (a) monitoring client devices for update events associated with the software application and (b) analyzing the update events to identify the legitimate update behavior of the software application, (2) using the update behavioral model to identify suspicious behavior on a computing system by (a) detecting an update instance on the computing system, (b) comparing the update instance with the legitimate update behavior identified in the update behavioral model, and (c) determining, based on the comparison of the update instance with the legitimate update behavior, that the update instance is suspicious, and (3) in response to determining that the update instance is suspicious, performing a security action. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
the disclosed computer-implemented method for threat detection using a software program update profile may include (1) building an update behavioral model that identifies legitimate update behavior for a software application by (a) monitoring client devices for update events associated with the software application and (b) analyzing the update events to identify the legitimate update behavior of the software application (2) using the update behavioral model to identify suspicious behavior on a computing system by (a) detecting an update instance on the computing system (b) comparing the update instance with the legitimate update behavior identified in the update behavioral model and (c) determining based on the comparison of the update instance with the legitimate update behavior that the update instance is suspicious and (3) in response to determining that the update instance is suspicious performing a security action various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10255435B1,5242,Systems and methods for establishing a reputation for related program files ,2019-04-09,"['US9424136B1', 'US8725702B1', 'US9141790B2', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'CA2964301C', 'US9948663B1', 'US8225406B1', 'US8850517B2', 'US9342705B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US9852289B1', 'JP5978365B2', 'EP3374922B1', 'US8667489B2', 'US9298724B1', 'US8756432B1', 'US8561193B1', 'US9043922B1', 'JP6205062B2']","
The disclosed computer-implemented method for establishing a reputation for related program files may include (1) identifying a set of related program files, where each program file includes one or more common metadata field values and the values of the metadata fields are set by a program development tool, (2) identifying one or more of the set of related program files as malicious, (3) determining that a proportion of malicious files in the set of related program files is above a threshold, and (4) in response to determining that the proportion of malicious files is above the threshold, associating a negative reputation with the metadata field values. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for establishing a reputation for related program files may include (1) identifying a set of related program files where each program file includes one or more common metadata field values and the values of the metadata fields are set by a program development tool (2) identifying one or more of the set of related program files as malicious (3) determining that a proportion of malicious files in the set of related program files is above a threshold and (4) in response to determining that the proportion of malicious files is above the threshold associating a negative reputation with the metadata field values various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US9934378B1,5419,Systems and methods for filtering log files ,2018-04-03,"['US9116768B1', 'US9148441B1', 'US9998480B1', 'US9418222B1', 'US9300693B1', 'US8850517B2', 'US9729579B1', 'US8806625B1', 'US9571509B1', 'JP6335315B2', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9582669B1', 'EP3241331B1', 'US9800606B1', 'US9767013B1', 'US9639693B2', 'US9529990B2', 'US10331879B1', 'JP6122555B2', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for filtering log files may include (1) identifying, on the endpoint computing device, log files that recorded events performed by processes executing on the endpoint computing device, (2) prior to sending the log files from the endpoint computing device to a security server for analysis, filtering, based on an analysis of the events recorded by the log files, the log files by excluding log files that recorded non-suspicious events, and (3) forwarding the filtered log files from the endpoint computing device to the security server for analysis. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for filtering log files may include (1) identifying on the endpoint computing device log files that recorded events performed by processes executing on the endpoint computing device (2) prior to sending the log files from the endpoint computing device to a security server for analysis filtering based on an analysis of the events recorded by the log files the log files by excluding log files that recorded non-suspicious events and (3) forwarding the filtered log files from the endpoint computing device to the security server for analysis various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9703956B1,5461,Systems and methods for categorizing virtual-machine-aware applications for further analysis ,2017-07-11,"['US9116768B1', 'US9141790B2', 'US9998480B1', 'US9838405B1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'EP2831798B1', 'US9852289B1', 'JP5978365B2', 'EP3374922B1', 'JP6471233B2', 'US9800606B1', 'US8533831B2', 'US8756432B1', 'US8561193B1', 'EP3207487B1', 'JP6122555B2', 'JP6205062B2', 'US8925037B2']","
The disclosed computer-implemented method for categorizing virtual-machine-aware applications for further analysis may include (1) identifying a plurality of virtual-machine-aware applications, where each of the plurality of virtual-machine-aware applications exhibits different behavior when the virtual-machine-aware application detects that the virtual-machine-aware application is executing in a physical computing environment rather than in a virtual computing environment, (2) identifying a plurality of non-virtual-machine-aware applications that do not exhibit different behavior when executed in the physical computing environment rather than in the virtual computing environment, (3) determining at least one characteristic that differentiates the virtual-machine-aware applications from the non-virtual-machine-aware applications, (4) analyzing an uncategorized application to determine whether the uncategorized application includes the characteristic, and (5) preventing the uncategorized application from evading complete analysis by sending the uncategorized application to the physical computing environment for further analysis. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for categorizing virtual-machine-aware applications for further analysis may include (1) identifying a plurality of virtual-machine-aware applications where each of the plurality of virtual-machine-aware applications exhibits different behavior when the virtual-machine-aware application detects that the virtual-machine-aware application is executing in a physical computing environment rather than in a virtual computing environment (2) identifying a plurality of non-virtual-machine-aware applications that do not exhibit different behavior when executed in the physical computing environment rather than in the virtual computing environment (3) determining at least one characteristic that differentiates the virtual-machine-aware applications from the non-virtual-machine-aware applications (4) analyzing an uncategorized application to determine whether the uncategorized application includes the characteristic and (5) preventing the uncategorized application from evading complete analysis by sending the uncategorized application to the physical computing environment for further analysis various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10089469B1,5463,Systems and methods for whitelisting file clusters in connection with trusted software packages ,2018-10-02,"['US9116768B1', 'US9148441B1', 'US8725702B1', 'US20150278494A1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9166997B1', 'US9571509B1', 'EP2831798B1', 'JP6335315B2', 'US8739284B1', 'JP2019505919A', 'JP5976020B2', 'US9852289B1', 'US9256739B1', 'JP5978365B2', 'EP3374922B1', 'US9800606B1', 'US8756432B1', 'JP6101408B2', 'JP6166839B2', 'US10331879B1', 'US9100440B1', 'US9736178B1']","
The disclosed computer-implemented method for whitelisting file clusters in connection with trusted software packages may include (1) identifying a trusted file cluster that includes a set of clean files, (2) identifying an additional file cluster that includes a set of additional files that typically co-exist with the set of clean files included in the trusted file cluster on computing systems, (3) determining that the trusted file cluster and the additional file cluster represent portions of a single trusted software package, and then, in response to determining that the trusted file cluster and the additional file cluster represent portions of the single trusted software package, (4) merging the trusted file cluster and the additional file cluster into a merged file cluster and (5) whitelisting the merged file cluster. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for whitelisting file clusters in connection with trusted software packages may include (1) identifying a trusted file cluster that includes a set of clean files (2) identifying an additional file cluster that includes a set of additional files that typically co-exist with the set of clean files included in the trusted file cluster on computing systems (3) determining that the trusted file cluster and the additional file cluster represent portions of a single trusted software package and then in response to determining that the trusted file cluster and the additional file cluster represent portions of the single trusted software package (4) merging the trusted file cluster and the additional file cluster into a merged file cluster and (5) whitelisting the merged file cluster various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9208314B1,5480,Systems and methods for distinguishing code of a program obfuscated within a packed program ,2015-12-08,"['US8321560B1', 'CA2804258C', 'US9116768B1', 'US9148441B1', 'JP5978383B2', 'US9424136B1', 'US9998480B1', 'JP6560368B2', 'US10073864B1', 'US9300693B1', 'US10140370B1', 'US9166997B1', 'CA2895265C', 'JP6689992B2', 'US8181251B2', 'US9230099B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'US9298724B1', 'US8756432B1', 'JP6101408B2', 'JP6166839B2', 'EP3207487B1', 'US8806641B1']","
A computer-implemented method for distinguishing code of a program obfuscated within a packed program may include (1) retrieving memory of the packed program that includes the code of the obfuscated program in an unobfuscated state and unpacking code that unpacks the code of the obfuscated program when the packed program is executed, (2) identifying an import address table within the memory of the packed program, (3) determining that the import address table is an import address table of the code of the obfuscated program, (4) determining that a region of code within the memory of the packed program may be the code of the obfuscated program by determining that the region of code uses the import address table, and (5) performing a security operation on the region of code. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for distinguishing code of a program obfuscated within a packed program may include (1) retrieving memory of the packed program that includes the code of the obfuscated program in an unobfuscated state and unpacking code that unpacks the code of the obfuscated program when the packed program is executed (2) identifying an import address table within the memory of the packed program (3) determining that the import address table is an import address table of the code of the obfuscated program (4) determining that a region of code within the memory of the packed program may be the code of the obfuscated program by determining that the region of code uses the import address table and (5) performing a security operation on the region of code various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US9900330B1,5517,Systems and methods for identifying potentially risky data users within organizations ,2018-02-20,"['US9116768B1', 'US9800560B1', 'US9141790B2', 'US9998480B1', 'CN105453102B', 'US9330273B2', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9160766B2', 'US9729579B1', 'US9571509B1', 'US9223966B1', 'JP6335315B2', 'US8739284B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US9529990B2', 'AU2015374078B2', 'US9043922B1', 'JP6314267B2', 'US8776196B1', 'US9736178B1']","
The disclosed computer-implemented method for identifying potentially risky data users within organizations may include (1) monitoring computing activity of a member of an organization with respect to the member's access to data related to the organization, (2) generating, based at least in part on the member's computing activity, a baseline representation of the member's access to the data, (3) detecting at least one attempt by the member to access at least a portion of the data, (4) determining that the member's attempt to access the portion of data represents an anomaly that is suspiciously inconsistent with the baseline representation, and then in response to determining that the member's attempt to access the portion of data represents the anomaly, (5) classifying the member as a potential risk to the security of the data. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2018,"
the disclosed computer-implemented method for identifying potentially risky data users within organizations may include (1) monitoring computing activity of a member of an organization with respect to the member's access to data related to the organization (2) generating based at least in part on the member's computing activity a baseline representation of the member's access to the data (3) detecting at least one attempt by the member to access at least a portion of the data (4) determining that the member's attempt to access the portion of data represents an anomaly that is suspiciously inconsistent with the baseline representation and then in response to determining that the member's attempt to access the portion of data represents the anomaly (5) classifying the member as a potential risk to the security of the data various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10079835B1,5553,Systems and methods for data loss prevention of unidentifiable and unsupported object types ,2018-09-18,"['US9846776B1', 'US8782792B1', 'US9116768B1', 'US9141790B2', 'US9998480B1', 'CN105453102B', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'US9166997B1', 'US9571509B1', 'US9223966B1', 'US8739284B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US20160180087A1', 'US9529990B2', 'EP3207487B1', 'JP6314267B2', 'EP3087531B1', 'EP3411825B1', 'US8806641B1', 'US9736178B1']","
A computer-implemented method for data loss prevention of unidentifiable and unsupported object types may include (1) monitoring, through at least one filter, data input to an application during execution, (2) scanning, through a data loss prevention scanner, the data input to the application to detect whether the data includes sensitive data that is protected by a data loss prevention policy, (3) flagging, based on the scanning, the application as having accessed the sensitive data that is protected by the data loss prevention policy, (4) detecting that the application is requesting to output a data object in a format that obscures underlying content, and (5) performing, by a data loss prevention program, a remedial action to prevent loss of the sensitive data based on both flagging the application and detecting that the application is requesting to output the data object in the format that obscures underlying content.
",H04,2018,"
a computer-implemented method for data loss prevention of unidentifiable and unsupported object types may include (1) monitoring through at least one filter data input to an application during execution (2) scanning through a data loss prevention scanner the data input to the application to detect whether the data includes sensitive data that is protected by a data loss prevention policy (3) flagging based on the scanning the application as having accessed the sensitive data that is protected by the data loss prevention policy (4) detecting that the application is requesting to output a data object in a format that obscures underlying content and (5) performing by a data loss prevention program a remedial action to prevent loss of the sensitive data based on both flagging the application and detecting that the application is requesting to output the data object in the format that obscures underlying content
",4,H04_4,2,10.0,7.0,9.0
US9171152B1,5566,Systems and methods for preventing chronic false positives ,2015-10-27,"['CA2804258C', 'US9148441B1', 'US9141790B2', 'US9998480B1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US8225406B1', 'CA2989160C', 'US9729579B1', 'US9166997B1', 'CA2895265C', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US8060596B1', 'CA2868752C', 'US8561193B1', 'EP3087531B1', 'US8806641B1']","
A computer-implemented method for preventing chronic false positives may include (1) whitelisting a file based on a challenge notification that challenges a classification of the file as insecure, (2) obtaining attribute information about the file, (3) identifying, by analyzing the attribute information, a primitive that identifies a source of origin for the file, (4) determining, based on an analysis of files that originate from the source of origin, that the source of origin identified by the primitive is trustworthy, and (5) adjusting, based on the determination that the source of origin identified by the primitive is trustworthy, a security policy associated with the primitive to prevent future false positives for other files that originate from the source of origin. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for preventing chronic false positives may include (1) whitelisting a file based on a challenge notification that challenges a classification of the file as insecure (2) obtaining attribute information about the file (3) identifying by analyzing the attribute information a primitive that identifies a source of origin for the file (4) determining based on an analysis of files that originate from the source of origin that the source of origin identified by the primitive is trustworthy and (5) adjusting based on the determination that the source of origin identified by the primitive is trustworthy a security policy associated with the primitive to prevent future false positives for other files that originate from the source of origin various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9699171B1,5911,Systems and methods for logging out of cloud-based applications managed by single sign-on services ,2017-07-04,"['US8225401B2', 'US9116768B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'US9330273B2', 'US9300693B1', 'US9569605B1', 'US10339304B2', 'US9245123B1', 'US9401925B1', 'US10104100B1', 'US8689294B1', 'US9730075B1', 'US9800606B1', 'AU2013371346B2', 'US9781143B1', 'JP6101408B2', 'US8904503B2', 'US10331879B1', 'US9100440B1', 'EP3087531B1', 'US8776196B1', 'EP3411825B1', 'US9736178B1']","
The disclosed computer-implemented method for logging out of cloud-based applications managed by single sign-on services may include (1) identifying an attempt by a single sign-on service to log a user out of a set of cloud-based applications, (2) in response to identifying the attempt to log the user out of the set of applications, tracking a logout status of each application within the set of cloud-based applications by, for each application (a) identifying a logout request sent by the single sign-on service to the application and (b) determining whether the application has sent a logout response to the single sign-on service that verifies that the user has been successfully logged out of the application, and (3) determining that the user is still logged into at least one application managed by the single sign-on service by determining that the application did not send a logout response to the single sign-on service.
",H04,2017,"
the disclosed computer-implemented method for logging out of cloud-based applications managed by single sign-on services may include (1) identifying an attempt by a single sign-on service to log a user out of a set of cloud-based applications (2) in response to identifying the attempt to log the user out of the set of applications tracking a logout status of each application within the set of cloud-based applications by for each application (a) identifying a logout request sent by the single sign-on service to the application and (b) determining whether the application has sent a logout response to the single sign-on service that verifies that the user has been successfully logged out of the application and (3) determining that the user is still logged into at least one application managed by the single sign-on service by determining that the application did not send a logout response to the single sign-on service
",4,H04_4,2,10.0,0.0,9.0
US10114944B1,5931,Systems and methods for classifying permissions on mobile devices ,2018-10-30,"['US9116768B1', 'US9998480B1', 'US9330273B2', 'US10073864B1', 'US9185119B1', 'US9300693B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9171154B2', 'JP6689992B2', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'JP6471233B2', 'US9800606B1', 'AU2013371346B2', 'US9767013B1', 'EP3308313B1', 'JP6101408B2', 'US10331879B1', 'EP3207487B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for classifying permissions on mobile devices may include (1) detecting that an application executing on a mobile device is issuing a request for one or more requested permissions to access one or more components of the mobile device, (2) determining an intended use of the application, (3) performing, through a security system distinct from the application and the operating system, an analysis of the request issued by the application at least in part by determining whether the intended use of the application corresponds to an expected use of the requested permission, and (4) providing, via a graphical user interface, a result of the analysis to an end user of the mobile device that indicates a security implication caused by granting the one or more requested permissions to the application. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for classifying permissions on mobile devices may include (1) detecting that an application executing on a mobile device is issuing a request for one or more requested permissions to access one or more components of the mobile device (2) determining an intended use of the application (3) performing through a security system distinct from the application and the operating system an analysis of the request issued by the application at least in part by determining whether the intended use of the application corresponds to an expected use of the requested permission and (4) providing via a graphical user interface a result of the analysis to an end user of the mobile device that indicates a security implication caused by granting the one or more requested permissions to the application various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10182048B1,5968,Systems and methods for automatically populating one-time-password input fields ,2019-01-15,"['US8225401B2', 'US9116768B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'CN105453102B', 'US20140325664A1', 'US10073864B1', 'US9300693B1', 'US8266306B2', 'US9729579B1', 'US9245123B1', 'JP6689992B2', 'US9223966B1', 'US9294284B1', 'EP3374922B1', 'CN108475249B', 'US9730075B1', 'AU2013371346B2', 'JP6101408B2', 'EP3430559B1', 'US8060940B2', 'US9100440B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for automatically populating one-time-password input fields may include (1) detecting, at a first computing device of a user, an input field that requires a one-time password that is included in a message that is sent by a one-time-password provider to a second computing device of the user, (2) identifying, at the second computing device, the message that includes the one-time password, (3) transmitting the one-time password from the second computing device to the first computing device, (4) receiving, at the first computing device, the one-time password, and (5) automatically populating, at the first computing device, the input field with the one-time password. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for automatically populating one-time-password input fields may include (1) detecting at a first computing device of a user an input field that requires a one-time password that is included in a message that is sent by a one-time-password provider to a second computing device of the user (2) identifying at the second computing device the message that includes the one-time password (3) transmitting the one-time password from the second computing device to the first computing device (4) receiving at the first computing device the one-time password and (5) automatically populating at the first computing device the input field with the one-time password various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9398042B1,5994,Systems and methods for capturing input from users to prevent data loss ,2016-07-19,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'US9330273B2', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'US8806625B1', 'US9245123B1', 'US9166997B1', 'EP3039609B1', 'JP6689992B2', 'JP6335315B2', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'JP6101408B2', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for capturing input from users to prevent data loss may include (1) intercepting, as part of a data-loss-prevention application, user input intended for a data-processing application that would, if received by the data-processing application, cause the data-processing application to perform an operation on data that may violate a data-loss-prevention policy, (2) upon intercepting the user input, causing the data-processing application to perform an alternative operation on the data that makes the data accessible to the data-loss-prevention application, (3) scanning, while the data-processing application is prevented from performing the operation, the data for compliance with the data-loss-prevention policy, (4) determining, based on a result of the scanning, that the data complies with the data-loss-prevention policy, and (5) causing, in response to determining that the data complies with the data-loss-prevention policy, the data-processing application to perform the operation. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for capturing input from users to prevent data loss may include (1) intercepting as part of a data-loss-prevention application user input intended for a data-processing application that would if received by the data-processing application cause the data-processing application to perform an operation on data that may violate a data-loss-prevention policy (2) upon intercepting the user input causing the data-processing application to perform an alternative operation on the data that makes the data accessible to the data-loss-prevention application (3) scanning while the data-processing application is prevented from performing the operation the data for compliance with the data-loss-prevention policy (4) determining based on a result of the scanning that the data complies with the data-loss-prevention policy and (5) causing in response to determining that the data complies with the data-loss-prevention policy the data-processing application to perform the operation various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9699140B1,6002,Systems and methods for selecting identifiers for wireless access points ,2017-07-04,"['US9246944B1', 'US9116768B1', 'US9800560B1', 'US10073864B1', 'US9342705B1', 'EP3362938B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP2017142821A', 'US9223966B1', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US8281366B1', 'WO2016160595A1', 'US8756432B1', 'JP6101408B2', 'US9043922B1', 'EP3087531B1', 'EP3411825B1', 'US9736178B1', 'US8370933B1']","
The disclosed computer-implemented method for selecting identifiers for wireless access points may include (1) receiving a request to establish an identifier for a configurable wireless access point, (2) identifying an existing access-point identifier that is used to identify at least one additional wireless access point, (3) determining a physical location of the configurable wireless access point, (4) verifying that the existing access-point identifier is not being used within a predetermined proximity of the physical location of the configurable wireless access point, and (5) assigning the existing access-point identifier to the configurable wireless access point. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
the disclosed computer-implemented method for selecting identifiers for wireless access points may include (1) receiving a request to establish an identifier for a configurable wireless access point (2) identifying an existing access-point identifier that is used to identify at least one additional wireless access point (3) determining a physical location of the configurable wireless access point (4) verifying that the existing access-point identifier is not being used within a predetermined proximity of the physical location of the configurable wireless access point and (5) assigning the existing access-point identifier to the configurable wireless access point various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10193903B1,6005,Systems and methods for detecting suspicious microcontroller messages ,2019-01-29,"['US9116768B1', 'US9148441B1', 'US9800560B1', 'US9998480B1', 'JP6560368B2', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US9401925B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'CN105409164B', 'EP3241331B1', 'US9800606B1', 'US9781143B1', 'US9529990B2', 'JP6101408B2', 'US10032033B2', 'JP6122555B2', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for detecting suspicious microcontroller messages may include (1) observing a typical interval at which messages are sent over a network by a microcontroller, (2) identifying a message sent over the network by the microcontroller, (3) determining that the interval between the message and the previous message sent by the microcontroller does not comprise the typical interval, and (4) categorizing the message as a suspicious message in response to determining that the interval does not comprise the typical interval. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for detecting suspicious microcontroller messages may include (1) observing a typical interval at which messages are sent over a network by a microcontroller (2) identifying a message sent over the network by the microcontroller (3) determining that the interval between the message and the previous message sent by the microcontroller does not comprise the typical interval and (4) categorizing the message as a suspicious message in response to determining that the interval does not comprise the typical interval various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9203850B1,6060,Systems and methods for detecting private browsing mode ,2015-12-01,"['US8726392B1', 'US9116768B1', 'US9148441B1', 'US9141790B2', 'US9998480B1', 'US10073864B1', 'US9185119B1', 'US9300693B1', 'US8806625B1', 'US9166997B1', 'CA2895265C', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'JP6335315B2', 'US9401925B1', 'US9336384B2', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'EP3308313B1', 'EP3207487B1', 'JP6122555B2', 'JP6205062B2', 'US9514309B1']","
A computer-implemented method for detecting private browsing mode may include (1) determining that a browser application is operating as a foreground application on the computing device, (2) detecting computing activity occurring on the computing device while the browser is operating in the foreground, (3) determining that no new entry has been made in the browser's history, (4) in response to determining that no new entry has been made in the browser's history, incrementing a certainty level score that identifies a level of certainty that the browser is executing in private browsing mode, (5) determining that the certainty level score has exceeded a certainty threshold, indicating that the browser is likely to be executing in private browsing mode, and (6) performing a security action in response to determining that the browser is likely to be executing in private browsing mode. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for detecting private browsing mode may include (1) determining that a browser application is operating as a foreground application on the computing device (2) detecting computing activity occurring on the computing device while the browser is operating in the foreground (3) determining that no new entry has been made in the browser's history (4) in response to determining that no new entry has been made in the browser's history incrementing a certainty level score that identifies a level of certainty that the browser is executing in private browsing mode (5) determining that the certainty level score has exceeded a certainty threshold indicating that the browser is likely to be executing in private browsing mode and (6) performing a security action in response to determining that the browser is likely to be executing in private browsing mode various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9569205B1,6100,Systems and methods for remotely configuring applications ,2017-02-14,"['US10032032B2', 'CA2955257C', 'US8627469B1', 'US9116768B1', 'US9246944B1', 'JP5978383B2', 'US9300693B1', 'US10140370B1', 'US10742665B2', 'US8806625B1', 'US9571509B1', 'US9223966B1', 'JP6335315B2', 'US20170255687A1', 'US8973133B1', 'US9852289B1', 'EP3374922B1', 'JP2016528656A', 'JP6471233B2', 'US10261782B2', 'US8756432B1', 'US9509737B2', 'US10002247B2', 'US10073966B2', 'EP3087531B1']","
A computer-implemented method for remotely configuring applications may include (1) identifying a centrally administered application that includes a configuration specification that defines at least one setting available for the centrally administered application and that is prepared to provide the configuration specification, (2) identifying, by extracting the configuration specification for the centrally administered application, a settings field of the configuration specification, (3) creating a settings configuration policy that specifies a value for the settings field, (4) detecting an instance of the centrally administered application that includes the configuration specification, and (5) pushing the value for the settings field to the instance of the centrally administered application in accordance with the settings configuration policy. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for remotely configuring applications may include (1) identifying a centrally administered application that includes a configuration specification that defines at least one setting available for the centrally administered application and that is prepared to provide the configuration specification (2) identifying by extracting the configuration specification for the centrally administered application a settings field of the configuration specification (3) creating a settings configuration policy that specifies a value for the settings field (4) detecting an instance of the centrally administered application that includes the configuration specification and (5) pushing the value for the settings field to the instance of the centrally administered application in accordance with the settings configuration policy various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,3.0,9.0
US10318250B1,6106,Systems and methods for locating functions for later interception ,2019-06-11,"['US8782792B1', 'US9246944B1', 'US9116768B1', 'US8627469B1', 'JP5978383B2', 'US9596257B2', 'US10073864B1', 'US9088560B1', 'US9729579B1', 'US9245123B1', 'JP6335315B2', 'US9230099B1', 'US9852289B1', 'EP3374922B1', 'US9679160B1', 'US9800606B1', 'EP2316092B1', 'JP5586216B2', 'US8756432B1', 'JP6166839B2', 'US8612594B1', 'US9043922B1', 'EP3087531B1', 'EP3411825B1', 'US9736178B1']","
The disclosed computer-implemented method for locating functions for later interception may include (i) identifying a function to be intercepted during an execution of a file that comprises an instance of the function, (ii) procuring, from a description of the function, a string that, when located in any given file within a set of files, indicates a location of the function within the given file, (iii) scanning the file to identify a location of the string within the file, (iv) determining, based on the location of the string within the file, a location of the instance of the function within the file, and (v) intercepting a call made by a process during the execution of the file to the instance of the function based on having located the instance of the function within the file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for locating functions for later interception may include (i) identifying a function to be intercepted during an execution of a file that comprises an instance of the function (ii) procuring from a description of the function a string that when located in any given file within a set of files indicates a location of the function within the given file (iii) scanning the file to identify a location of the string within the file (iv) determining based on the location of the string within the file a location of the instance of the function within the file and (v) intercepting a call made by a process during the execution of the file to the instance of the function based on having located the instance of the function within the file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US20200169570A1,6387,Systems and methods for detecting malware infections associated with domain generation algorithms ,2020-05-28,"['US9246944B1', 'US9116768B1', 'US9998480B1', 'US10073864B1', 'US9300693B1', 'CA2989160C', 'US9729579B1', 'US9166997B1', 'US9171154B2', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US9294284B1', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9529990B2', 'JP6166839B2', 'JP6101408B2', 'US8561193B1', 'JP6122555B2', 'US9100440B1', 'US9043922B1', 'JP6205062B2', 'JP6364547B2']","
The disclosed computer-implemented method for detecting malware infections associated with domain generation algorithms (DGAs) may include (i) receiving one or more domain names in a cluster of failed domain name system (DNS) requests and telemetry data from a client device, (ii) generating a classification model based on multiple unrelated features associated with the DGAs, (iii) performing an analysis of the failed DNS requests and the telemetry data by applying the classification model to identify domain names associated with malicious activity comprising utilization of the DGAs, based on the unrelated features, (iv) identifying the domain names associated with the malicious activity based on the analysis, and (v) performing a security action, based on the domain names, that protects against infection by malware associated with the malicious activity. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2020,"
the disclosed computer-implemented method for detecting malware infections associated with domain generation algorithms (dgas) may include (i) receiving one or more domain names in a cluster of failed domain name system (dns) requests and telemetry data from a client device (ii) generating a classification model based on multiple unrelated features associated with the dgas (iii) performing an analysis of the failed dns requests and the telemetry data by applying the classification model to identify domain names associated with malicious activity comprising utilization of the dgas based on the unrelated features (iv) identifying the domain names associated with the malicious activity based on the analysis and (v) performing a security action based on the domain names that protects against infection by malware associated with the malicious activity various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US20200195683A1,6457,Systems and methods for detecting anomalous behavior within computing sessions ,2020-06-18,"['US8671449B1', 'US8627469B1', 'US9148441B1', 'US9424136B1', 'US9141790B2', 'US9998480B1', 'CN105453102B', 'US10073864B1', 'US9948663B1', 'US9569605B1', 'US9166997B1', 'JP2017142821A', 'US9223966B1', 'EP2831798B1', 'US8739284B1', 'US9336384B2', 'US9852289B1', 'US9800606B1', 'US8060596B1', 'US9009814B1', 'EP3195560B1', 'US9529990B2', 'US10032033B2', 'JP6205062B2', 'EP3411825B1']","
The disclosed computer-implemented method for detecting anomalous behavior within computing sessions may include (i) identifying, by the computing device, a set of execution events that correspond to a computing session, (ii) providing, by the computing device, the set of execution events as input to an autoencoder, (iii) receiving, by the computing device and from the autoencoder, a reconstruction error associated with autoencoding the set of execution events, (iv) detecting, by the computing device and based on the reconstruction error, an anomaly within the computing session, and (v) performing, by the computing device, a security action to address the anomaly within the computing session. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2020,"
the disclosed computer-implemented method for detecting anomalous behavior within computing sessions may include (i) identifying by the computing device a set of execution events that correspond to a computing session (ii) providing by the computing device the set of execution events as input to an autoencoder (iii) receiving by the computing device and from the autoencoder a reconstruction error associated with autoencoding the set of execution events (iv) detecting by the computing device and based on the reconstruction error an anomaly within the computing session and (v) performing by the computing device a security action to address the anomaly within the computing session various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US10771482B1,6730,Systems and methods for detecting geolocation-aware malware ,2020-09-08,"['US9246944B1', 'US9800560B1', 'US9141790B2', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'US9846772B1', 'US9300693B1', 'US8943587B2', 'US9729579B1', 'US8806625B1', 'US9171154B2', 'JP6689992B2', 'US9223966B1', 'US9336384B2', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'US9781143B1', 'US9529990B2', 'US10331879B1', 'EP3207487B1', 'JP6205062B2', 'US9514309B1', 'US9736178B1']","
The disclosed computer-implemented method for detecting geolocation-aware malware may include (1) receiving, by a computing device, trajectory information for network traffic carrying geolocation-aware malware, (2) identifying, from the trajectory information, a target geolocation characteristic required to activate the geolocation-aware malware, (3) establishing, on an image of a user machine, an execution environment having the target geolocation characteristic, (4) running, on the image of the user machine, the geolocation-aware malware, and (5) analyzing functioning of the geolocation-aware malware to identify malicious activity by the geolocation-aware malware. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2020,"
the disclosed computer-implemented method for detecting geolocation-aware malware may include (1) receiving by a computing device trajectory information for network traffic carrying geolocation-aware malware (2) identifying from the trajectory information a target geolocation characteristic required to activate the geolocation-aware malware (3) establishing on an image of a user machine an execution environment having the target geolocation characteristic (4) running on the image of the user machine the geolocation-aware malware and (5) analyzing functioning of the geolocation-aware malware to identify malicious activity by the geolocation-aware malware various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9667575B1,6774,Systems and methods for detecting webpages belonging to spam campaigns ,2017-05-30,"['CA2955257C', 'US9148441B1', 'US9424136B1', 'US9141790B2', 'US9838405B1', 'US9948663B1', 'US8225406B1', 'JP6360927B2', 'US9160766B2', 'US9407664B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'EP2529328B1', 'US8839401B2', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US8281366B1', 'EP3207487B1', 'US8806641B1', 'US10205744B2']","
A computer-implemented method for detecting webpages belonging to spam campaigns may include (1) identifying a web address of a suspicious webpage that potentially hosts a spam message, (2) capturing an image of the suspicious webpage, (3) comparing the image of the suspicious webpage to at least one spam image from a spam database, the spam image being associated with a spam campaign in the spam database, (4) determining, based on the comparison of the image of the suspicious webpage with the spam image, whether the suspicious webpage is associated with the spam campaign, and (5) updating the spam database in response to the determination of whether the suspicious webpage is associated with the spam campaign. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for detecting webpages belonging to spam campaigns may include (1) identifying a web address of a suspicious webpage that potentially hosts a spam message (2) capturing an image of the suspicious webpage (3) comparing the image of the suspicious webpage to at least one spam image from a spam database the spam image being associated with a spam campaign in the spam database (4) determining based on the comparison of the image of the suspicious webpage with the spam image whether the suspicious webpage is associated with the spam campaign and (5) updating the spam database in response to the determination of whether the suspicious webpage is associated with the spam campaign various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9699191B1,6780,Systems and methods for controlling content for child browser users ,2017-07-04,"['US9116768B1', 'US9141790B2', 'US9998480B1', 'CA2964301C', 'US10552644B2', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US8850517B2', 'US9712527B2', 'US9729579B1', 'US8806625B1', 'US9245123B1', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US9852289B1', 'EP3374922B1', 'US9582669B1', 'US9800606B1', 'US8938775B1', 'JP6166839B2', 'US9558081B2', 'US8904503B2', 'US9736178B1']","
The disclosed computer-implemented method for controlling content for child browser users may include (1) identifying one or more indicators that a browser session user is a child, (2) calculating a session score indicating a likelihood that the browser session user is a child, (3) determining, based at least in part on the session score being above a threshold, that the browser session user is a child and therefore content controls should apply to a browser session of the child, and (4) initiating one or more content control actions. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
the disclosed computer-implemented method for controlling content for child browser users may include (1) identifying one or more indicators that a browser session user is a child (2) calculating a session score indicating a likelihood that the browser session user is a child (3) determining based at least in part on the session score being above a threshold that the browser session user is a child and therefore content controls should apply to a browser session of the child and (4) initiating one or more content control actions various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10887339B1,6807,Systems and methods for protecting a cloud storage against suspected malware ,2021-01-05,"['US9002972B2', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9838405B1', 'CA2964301C', 'US9300693B1', 'US10140370B1', 'US9245123B1', 'US9166997B1', 'US9813437B2', 'JP6689992B2', 'US9171156B1', 'US8739284B1', 'US9223966B1', 'US9336384B2', 'US9256739B1', 'US9946877B2', 'US9800606B1', 'US9529990B2', 'AU2015374078B2', 'US8756432B1', 'JP6101408B2', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for protecting a cloud storage against suspected malware may include (1) receiving a backup of one or more encrypted files over a network, (2) determining that the one or more encrypted files match one or more criteria associated with suspected malware, and (3) performing a security action that protects a computing device against the suspected malware. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2021,"
the disclosed computer-implemented method for protecting a cloud storage against suspected malware may include (1) receiving a backup of one or more encrypted files over a network (2) determining that the one or more encrypted files match one or more criteria associated with suspected malware and (3) performing a security action that protects a computing device against the suspected malware various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US9665715B1,6832,Systems and methods for detecting malware-induced crashes ,2017-05-30,"['US9100426B1', 'US8782792B1', 'US9116768B1', 'US9998480B1', 'EP2588983B1', 'US9418222B1', 'RU2645268C2', 'AU2005237120B2', 'US9729579B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9336384B2', 'US8719935B2', 'US9852289B1', 'JP5978365B2', 'EP3374922B1', 'US9800606B1', 'RU2531861C1', 'RU2589862C1', 'CA2868752C', 'EP3207487B1', 'US8806641B1']","
A computer-implemented method for detecting malware-induced crashes may include (1) identifying, by analyzing a health log associated with a previously stable computing device, the occurrence of an unexpected stability problem on the previously stable computing device, (2) identifying, by analyzing an event log associated with the previously stable computing device, an event that is potentially responsible for the occurrence of the unexpected stability problem on the previously stable computing device, (3) determining, due at least in part to the event being potentially responsible for the occurrence of the unexpected stability problem on the previously stable computing device, that the event is potentially malicious, and (4) performing a security action in response to determining that the event is potentially malicious. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for detecting malware-induced crashes may include (1) identifying by analyzing a health log associated with a previously stable computing device the occurrence of an unexpected stability problem on the previously stable computing device (2) identifying by analyzing an event log associated with the previously stable computing device an event that is potentially responsible for the occurrence of the unexpected stability problem on the previously stable computing device (3) determining due at least in part to the event being potentially responsible for the occurrence of the unexpected stability problem on the previously stable computing device that the event is potentially malicious and (4) performing a security action in response to determining that the event is potentially malicious various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10313379B1,6881,Systems and methods for making security-related predictions ,2019-06-04,"['US9116768B1', 'US9418222B1', 'US9300693B1', 'US9838415B2', 'US9438560B2', 'US9178906B1', 'US9407664B1', 'US8806625B1', 'US9245123B1', 'JP6689992B2', 'US9171156B1', 'JP6335315B2', 'US9223966B1', 'US9401925B1', 'US8719935B2', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9769250B2', 'US9529990B2', 'US8060940B2', 'JP6122555B2', 'EP3087531B1', 'US9736178B1', 'JP6364547B2']","
The disclosed computer-implemented method for making security-related predictions may include (i) gathering information that comprises both signatures of events that occurred on computing systems during consecutive time slots and incident labels about incidents on the computing systems during the consecutive time slots, (ii) using the gathered information to train a machine learning model, (iii) predicting, by the machine learning model, at least one of an incident label about an incident and a signature of an event on a computing system during a time slot, wherein the computing system does not comprise at least one of an application capable of generating the signature and information about events occurring during the time slot due to the time slot having not yet occurred, and (iv) performing an action in response to the prediction. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for making security-related predictions may include (i) gathering information that comprises both signatures of events that occurred on computing systems during consecutive time slots and incident labels about incidents on the computing systems during the consecutive time slots (ii) using the gathered information to train a machine learning model (iii) predicting by the machine learning model at least one of an incident label about an incident and a signature of an event on a computing system during a time slot wherein the computing system does not comprise at least one of an application capable of generating the signature and information about events occurring during the time slot due to the time slot having not yet occurred and (iv) performing an action in response to the prediction various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,7.0,9.0
US10482244B1,7152,Systems and methods for efficiently matching files ,2019-11-19,"['US9116768B1', 'US9148441B1', 'JP5978383B2', 'US9998480B1', 'EP2588983B1', 'US9846772B1', 'US8225406B1', 'US20170230389A1', 'US9407664B1', 'JP6689992B2', 'US9223966B1', 'US9401925B1', 'US8181251B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'US8281410B1', 'US8756432B1', 'US8291497B1', 'EP3207487B1', 'US9100440B1', 'JP6122555B2', 'US9736178B1']","
The disclosed computer-implemented method for efficiently matching files may include (i) analyzing a file to identify a set of functions within the file and relationships between functions within the set of functions, (ii) creating a set of representations for the set of functions by, for each function, combining a representation of a size of the function with a representation of a size of each function identified, when analyzing the file, as having a relationship to the function, (iii) comparing the set of representations of the set of functions with a set of representations of an additional set of functions identified within an additional file, and (iv) determining, based on comparing the sets of representations, that the file matches the additional file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for efficiently matching files may include (i) analyzing a file to identify a set of functions within the file and relationships between functions within the set of functions (ii) creating a set of representations for the set of functions by for each function combining a representation of a size of the function with a representation of a size of each function identified when analyzing the file as having a relationship to the function (iii) comparing the set of representations of the set of functions with a set of representations of an additional set of functions identified within an additional file and (iv) determining based on comparing the sets of representations that the file matches the additional file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10803188B1,7214,Systems and methods for preventing sensitive data sharing ,2020-10-13,"['US9246944B1', 'US9116768B1', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'CA2964301C', 'US9846772B1', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'US9166997B1', 'JP2017507414A', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US9294284B1', 'US9852289B1', 'EP2316092B1', 'US8281410B1', 'US9529990B2', 'JP6101408B2', 'US10331879B1', 'US9043922B1', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for preventing sensitive data sharing may include a computing device determining that a content item is to be shared with an application. The content idem may be intercepted before the content item is shared with the application. The data of the content item may be analyzed. In response to analyzing the data of the content item, a security action may be performed to protect the computing device from computer malware or prevent sharing of sensitive data of the computing device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2020,"
the disclosed computer-implemented method for preventing sensitive data sharing may include a computing device determining that a content item is to be shared with an application the content idem may be intercepted before the content item is shared with the application the data of the content item may be analyzed in response to analyzing the data of the content item a security action may be performed to protect the computing device from computer malware or prevent sharing of sensitive data of the computing device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10210330B1,7570,Systems and methods for detecting malicious processes that encrypt files ,2019-02-19,"['US9100426B1', 'US9116768B1', 'US9148441B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'US9846772B1', 'US9185119B1', 'US9088560B1', 'US9729579B1', 'US9166997B1', 'US9223966B1', 'US9294284B1', 'US9336384B2', 'US9256739B1', 'US9781143B1', 'US9298724B1', 'JP6101408B2', 'EP3207487B1', 'JP6122555B2', 'US20180007069A1', 'US9043922B1', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for detecting malicious processes that encrypt files may include (i) identifying a backup file created by a backup process on the computing device, (ii) detecting an attempt to alter the backup file by a process that is not the backup process, (iii) determining, based at least in part on the attempt to alter the backup file being made by the process that is not the backup process, that the process is a malicious process designed to encrypt files on the computing device so that a legitimate owner of the files cannot access the files, and (iv) performing a security action in response to determining that the process is malicious. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for detecting malicious processes that encrypt files may include (i) identifying a backup file created by a backup process on the computing device (ii) detecting an attempt to alter the backup file by a process that is not the backup process (iii) determining based at least in part on the attempt to alter the backup file being made by the process that is not the backup process that the process is a malicious process designed to encrypt files on the computing device so that a legitimate owner of the files cannot access the files and (iv) performing a security action in response to determining that the process is malicious various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10262135B1,7574,Systems and methods for detecting and addressing suspicious file restore activities ,2019-04-16,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9418222B1', 'US9846772B1', 'US10073864B1', 'US9300693B1', 'US9407664B1', 'US9166997B1', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'EP2316092B1', 'US9639693B2', 'US9781143B1', 'US9529990B2', 'AU2015374078B2', 'EP3207487B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for detecting and addressing suspicious file restore activities may include (i) detecting a restore activity during which files are restored to a client device from a previously stored backup of the files, (ii) determining that a total number of the files restored during the restore activity exceeds a threshold number, and (iii) performing, based on the total number of the files exceeding the threshold number, a security action to protect the client device from a malicious threat associated with the restore activity. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for detecting and addressing suspicious file restore activities may include (i) detecting a restore activity during which files are restored to a client device from a previously stored backup of the files (ii) determining that a total number of the files restored during the restore activity exceeds a threshold number and (iii) performing based on the total number of the files exceeding the threshold number a security action to protect the client device from a malicious threat associated with the restore activity various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US9613211B1,7713,Systems and methods for identifying suspicious text-messaging applications on mobile devices ,2017-04-04,"['CA2804258C', 'US8782792B1', 'US8806639B2', 'US9148441B1', 'US9141790B2', 'US9998480B1', 'CA2964301C', 'US9846772B1', 'US10073864B1', 'US9569605B1', 'US9166997B1', 'EP2831798B1', 'US9223966B1', 'US9294284B1', 'US9230099B1', 'US9852289B1', 'EP3374922B1', 'AU2013371346B2', 'US8561193B1', 'JP6122555B2', 'US9100440B1', 'EP3087531B1', 'EP3411825B1', 'US8806641B1', 'US9736178B1']","
A computer-implemented method for identifying suspicious text-messaging applications on mobile devices may include (1) identifying at least one outgoing text message on a mobile device, (2) analyzing at least one attribute of the outgoing text message identified on the mobile device, (3) determining that the outgoing text message is illegitimate based at least in part on analyzing the attribute of the outgoing text message, (4) identifying, in response to the determination, a suspicious text-messaging application that created the illegitimate outgoing text message on the mobile device, and then (5) performing, in response to the determination, at least one security action on the suspicious text-messaging application to prevent the suspicious text-messaging application from creating additional illegitimate text messages on the mobile device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for identifying suspicious text-messaging applications on mobile devices may include (1) identifying at least one outgoing text message on a mobile device (2) analyzing at least one attribute of the outgoing text message identified on the mobile device (3) determining that the outgoing text message is illegitimate based at least in part on analyzing the attribute of the outgoing text message (4) identifying in response to the determination a suspicious text-messaging application that created the illegitimate outgoing text message on the mobile device and then (5) performing in response to the determination at least one security action on the suspicious text-messaging application to prevent the suspicious text-messaging application from creating additional illegitimate text messages on the mobile device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9792431B1,7718,Systems and methods for selectively masking data on virtual storage devices ,2017-10-17,"['US9246944B1', 'US10372919B1', 'US9116768B1', 'US9424136B1', 'CN105453102B', 'US10073864B1', 'US9948663B1', 'US10140370B1', 'US8806625B1', 'US9813437B2', 'CA2895265C', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US9401925B1', 'US9852289B1', 'JP5978365B2', 'EP3241331B1', 'JP2016129071A', 'US8788763B2', 'JP6101408B2', 'US9558081B2', 'US9563457B2', 'US9934407B2', 'EP3087531B1']","
A computer-implemented method for selectively masking data on virtual storage devices may include (1) identifying data stored on a virtual storage device that can be accessed by a virtual machine, (2) intercepting, from a process executing outside the virtual machine, an attempt by a process of the virtual machine to read the data, (3) determining that the virtual machine process is not authorized to read the data, and (4) in response to determining that the virtual machine process is not authorized to read the data, masking the data from the virtual machine process. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for selectively masking data on virtual storage devices may include (1) identifying data stored on a virtual storage device that can be accessed by a virtual machine (2) intercepting from a process executing outside the virtual machine an attempt by a process of the virtual machine to read the data (3) determining that the virtual machine process is not authorized to read the data and (4) in response to determining that the virtual machine process is not authorized to read the data masking the data from the virtual machine process various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,3.0,9.0
US10212602B2,7742,Systems and methods for determining security reputations of wireless network access points ,2019-02-19,"['US9148441B1', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'US9300693B1', 'EP3362938B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'JP6335315B2', 'US8739284B1', 'US9401925B1', 'US8973133B1', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'JP6101408B2', 'EP3207487B1', 'JP6122555B2', 'EP3087531B1', 'US9736178B1']","
A computer-implemented method for determining security reputations of wireless network access points may include (1) receiving a unique identifier for a wireless network access point to which a mobile device has connected and security information that identifies the security posture of the mobile device after connecting to the wireless network access point, (2) adding the unique identifier and the security information to a security database, (3) correlating the security information with an additional set of security information that identifies the security posture of an additional mobile device after connecting to the wireless network access point, (4) assigning a security reputation to the wireless network access point, and (5) enabling a requesting mobile device to determine whether to connect to the wireless network access point by providing the security reputation of the wireless network access point to the requesting mobile device. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
a computer-implemented method for determining security reputations of wireless network access points may include (1) receiving a unique identifier for a wireless network access point to which a mobile device has connected and security information that identifies the security posture of the mobile device after connecting to the wireless network access point (2) adding the unique identifier and the security information to a security database (3) correlating the security information with an additional set of security information that identifies the security posture of an additional mobile device after connecting to the wireless network access point (4) assigning a security reputation to the wireless network access point and (5) enabling a requesting mobile device to determine whether to connect to the wireless network access point by providing the security reputation of the wireless network access point to the requesting mobile device various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10437994B1,7756,Systems and methods for determining the reputations of unknown files ,2019-10-08,"['US8627469B1', 'US9116768B1', 'JP5978383B2', 'US9998480B1', 'US9838405B1', 'CA2964301C', 'US10073864B1', 'US9300693B1', 'CA2989160C', 'US9160766B2', 'US9729579B1', 'US9171154B2', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9529990B2', 'EP3567504B1', 'US8756432B1', 'JP6166839B2', 'US10331879B1', 'US9736178B1']","
The disclosed computer-implemented method for determining the reputations of unknown files may include (1) identifying a file that was downloaded by the computing device from an external file host, (2) creating a node that represents the file in a dynamic file relationship graph, (3) connecting the node in the dynamic file relationship graph with at least one other node that represents an attribute of the external file host, and (4) labeling the node with a reputation score calculated based at least in part on a reputation score of the at least one other node that represents the attribute of the external file host. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for determining the reputations of unknown files may include (1) identifying a file that was downloaded by the computing device from an external file host (2) creating a node that represents the file in a dynamic file relationship graph (3) connecting the node in the dynamic file relationship graph with at least one other node that represents an attribute of the external file host and (4) labeling the node with a reputation score calculated based at least in part on a reputation score of the at least one other node that represents the attribute of the external file host various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10073983B1,7815,Systems and methods for identifying suspicious singleton files using correlational predictors ,2018-09-11,"['US9148441B1', 'US9998480B1', 'US9330273B2', 'EP2588983B1', 'US10073864B1', 'US9948663B1', 'US8225406B1', 'CA2895265C', 'JP6689992B2', 'US9171156B1', 'US9223966B1', 'JP6335315B2', 'US9401925B1', 'US8181251B2', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9767013B1', 'US9230096B2', 'JP6101408B2', 'EP3087531B1', 'US8806641B1', 'US10055582B1', 'US9736178B1']","
The disclosed computer-implemented method for identifying suspicious singleton files using correlational predictors may include (1) identifying a set of known-clean computing devices that include no singleton files, (2) detecting at least one software component that is installed on a threshold number of the known-clean computing devices, (3) identifying an unvindicated computing device whose infection status is unknown, (4) determining that, in addition to being installed on the threshold number of known-clean computing devices, the software component is installed on the unvindicated computing device, (5) determining that the unvindicated computing device includes at least one singleton file, and then (6) classifying the singleton file as suspicious in response to determining that (A) the software component is installed on the unvindicated computing device and (B) the unvindicated computing device includes the singleton file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for identifying suspicious singleton files using correlational predictors may include (1) identifying a set of known-clean computing devices that include no singleton files (2) detecting at least one software component that is installed on a threshold number of the known-clean computing devices (3) identifying an unvindicated computing device whose infection status is unknown (4) determining that in addition to being installed on the threshold number of known-clean computing devices the software component is installed on the unvindicated computing device (5) determining that the unvindicated computing device includes at least one singleton file and then (6) classifying the singleton file as suspicious in response to determining that (a) the software component is installed on the unvindicated computing device and (b) the unvindicated computing device includes the singleton file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10200499B1,8151,Systems and methods for reducing network traffic by using delta transfers ,2019-02-05,"['US9002972B2', 'US10372919B1', 'US9116768B1', 'US9424136B1', 'US9800560B1', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'JP2015517146A', 'US8806625B1', 'JP6689992B2', 'JP5963966B2', 'US9223966B1', 'JP6335315B2', 'US9852289B1', 'EP3374922B1', 'US9582669B1', 'US9679160B1', 'JP2015515690A', 'US8756432B1', 'JP6166839B2', 'US8904503B2', 'US9736178B1', 'US9722873B2', 'EP2479697B1']","
The disclosed computer-implemented method for reducing network traffic by using delta transfers may include (1) receiving, from a client device, an original request message that requests at least one action from a server, (2) storing the original request message to serve as a foundation for a delta transfer that includes the original request message and at least one subsequent request message that builds upon the original request message, (3) receiving, from the client device, a subsequent request message that excludes at least a portion of the original request message to reduce redundancy between the original request message and the subsequent request message, and (4) applying the subsequent request message to the original request message to achieve the delta transfer while reducing the redundancy between the original request message and the subsequent request message. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for reducing network traffic by using delta transfers may include (1) receiving from a client device an original request message that requests at least one action from a server (2) storing the original request message to serve as a foundation for a delta transfer that includes the original request message and at least one subsequent request message that builds upon the original request message (3) receiving from the client device a subsequent request message that excludes at least a portion of the original request message to reduce redundancy between the original request message and the subsequent request message and (4) applying the subsequent request message to the original request message to achieve the delta transfer while reducing the redundancy between the original request message and the subsequent request message various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10162962B1,8155,Systems and methods for detecting credential theft ,2018-12-25,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9838405B1', 'US9846772B1', 'US9160766B2', 'US9407664B1', 'US8806625B1', 'US9166997B1', 'US9680849B2', 'US9794270B2', 'US9154466B2', 'US8739284B1', 'US9852289B1', 'US9256739B1', 'EP3241331B1', 'US9800606B1', 'US9076004B1', 'US9529990B2', 'US8904503B2', 'US10032033B2', 'US9258122B1', 'US9736178B1']","
The disclosed computer-implemented method for detecting credential theft may include (i) monitoring a secured computing system's credential store that may include at least one sensitive credential that may be used to facilitate authentication of a user that is attempting to access the secured computing system, (ii) gathering, while monitoring the credential store, primary evidence of an attempted theft of the sensitive credential from the credential store, (iii) gathering corroborating evidence of the attempted theft of the sensitive credential, and (iv) performing a security action in response to gathering the primary evidence and the corroborating evidence of the attempted theft. The primary evidence of the attempted theft of the sensitive credential may include evidence of any suspicious access of the sensitive credential from the credential store that occurs outside of a procedure of authenticating the user. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for detecting credential theft may include (i) monitoring a secured computing system's credential store that may include at least one sensitive credential that may be used to facilitate authentication of a user that is attempting to access the secured computing system (ii) gathering while monitoring the credential store primary evidence of an attempted theft of the sensitive credential from the credential store (iii) gathering corroborating evidence of the attempted theft of the sensitive credential and (iv) performing a security action in response to gathering the primary evidence and the corroborating evidence of the attempted theft the primary evidence of the attempted theft of the sensitive credential may include evidence of any suspicious access of the sensitive credential from the credential store that occurs outside of a procedure of authenticating the user various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9122869B1,8336,Systems and methods for detecting client types ,2015-09-01,"['US9148441B1', 'US9846772B1', 'US10073864B1', 'EP3362938B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9171154B2', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'JP6471233B2', 'US9800606B1', 'EP2896169B1', 'US9781143B1', 'US9529990B2', 'US8756432B1', 'JP6101408B2', 'EP3087531B1', 'US9736178B1']","
A computer-implemented method for detecting client types may include identifying a communication from a client system transmitted according to a network protocol, analyzing the communication to determine at least one protocol implementation characteristic that describes how the client system implemented the network protocol in the communication, submitting the protocol implementation characteristic to a protocol implementation database that correlates client types with protocol implementation characteristics and receiving, in response to submitting the protocol implementation characteristic, a client type of the client system. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for detecting client types may include identifying a communication from a client system transmitted according to a network protocol analyzing the communication to determine at least one protocol implementation characteristic that describes how the client system implemented the network protocol in the communication submitting the protocol implementation characteristic to a protocol implementation database that correlates client types with protocol implementation characteristics and receiving in response to submitting the protocol implementation characteristic a client type of the client system various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9773108B1,8354,Systems and methods for performing operations on restricted mobile computing platforms ,2017-09-26,"['US9116768B1', 'JP5978383B2', 'US9998480B1', 'US10073864B1', 'US9300693B1', 'US9342705B1', 'US9729579B1', 'US8806625B1', 'US9245123B1', 'US9171154B2', 'JP6689992B2', 'US9223966B1', 'US9294284B1', 'US9336384B2', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'US8281366B1', 'EP2316092B1', 'US9065849B1', 'US8756432B1', 'JP6101408B2', 'JP6122555B2', 'JP6205062B2', 'US8925037B2']","
The disclosed computer-implemented method for performing operations on restricted mobile computing platforms may include (1) receiving a request to perform an operation on a mobile device, (2) requesting access to a synchronization profile of the mobile device that represents the current state of the mobile device, (3) receiving access to the synchronization profile, and (4) performing the operation on the mobile device by performing an analogous operation on the synchronization profile. In some examples, the operation may require access to a current state of the mobile device, and a mobile computing platform of the mobile device may place a limitation on the ability of third-party software to (a) inspect the current state of the mobile device, (b) modify the current state of the mobile device, and/or (c) execute resource-intensive operations via the mobile device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for performing operations on restricted mobile computing platforms may include (1) receiving a request to perform an operation on a mobile device (2) requesting access to a synchronization profile of the mobile device that represents the current state of the mobile device (3) receiving access to the synchronization profile and (4) performing the operation on the mobile device by performing an analogous operation on the synchronization profile in some examples the operation may require access to a current state of the mobile device and a mobile computing platform of the mobile device may place a limitation on the ability of third-party software to (a) inspect the current state of the mobile device (b) modify the current state of the mobile device and/or (c) execute resource-intensive operations via the mobile device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10783261B1,8860,Systems and methods for preventing sensitive information exposure based on a surrounding audience ,2020-09-22,"['CA2955257C', 'US9246944B1', 'US9116768B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'US9330273B2', 'US9300693B1', 'US9569605B1', 'US8806625B1', 'US9245123B1', 'CA2895265C', 'US9223966B1', 'JP6335315B2', 'US9401925B1', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'US9781143B1', 'AU2015374078B2', 'JP6101408B2', 'US8060940B2', 'JP6205062B2', 'EP3411825B1', 'US9736178B1']","
The disclosed computer-implemented method for preventing sensitive information exposure based on a surrounding audience may include (1) detecting, from one or more communication devices, surrounding audience data associated with an audience presentation on a presentation device, the audience presentation including sensitive information and non-sensitive information, (2) determining an audience profile based on the surrounding audience data, the audience profile identifying one or more unintended audience members in the surrounding audience, (3) assigning an information exposure policy to the audience presentation based on the audience profile, and (4) performing a security action to enforce the information exposure policy on the presentation device such that the sensitive information is prevented from being exposed to the surrounding audience during the audience presentation. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2020,"
the disclosed computer-implemented method for preventing sensitive information exposure based on a surrounding audience may include (1) detecting from one or more communication devices surrounding audience data associated with an audience presentation on a presentation device the audience presentation including sensitive information and non-sensitive information (2) determining an audience profile based on the surrounding audience data the audience profile identifying one or more unintended audience members in the surrounding audience (3) assigning an information exposure policy to the audience presentation based on the audience profile and (4) performing a security action to enforce the information exposure policy on the presentation device such that the sensitive information is prevented from being exposed to the surrounding audience during the audience presentation various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9754086B1,9077,Systems and methods for customizing privacy control systems ,2017-09-05,"['US9100426B1', 'US9141790B2', 'US9998480B1', 'US9330273B2', 'CA2964301C', 'US10073864B1', 'US9300693B1', 'US10140370B1', 'US8806625B1', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'JP6335315B2', 'US9294284B1', 'US9230099B1', 'US9336384B2', 'US9852289B1', 'US10268827B2', 'US8423511B1', 'US9800606B1', 'US20190199732A1', 'US9781143B1', 'US10331879B1', 'JP6314267B2', 'US9736178B1']","
The disclosed computer-implemented method for customizing privacy control systems may include (1) identifying a data entry, from within a set of data entries stored on a computing device, that has been selected to be inaccessible by an application installed on the computing device, (2) marking the data with an indication that the data entry has been selected to be inaccessible by the application, (3) intercepting an attempt made by the application to access the data entry, (4) determining that the application is not permitted to access the data entry by identifying the indication that the data entry was selected to be inaccessible by the application, and (5) blocking the application from accessing the data entry in response to determining that the data entry has been marked as inaccessible while allowing at least one additional application to access the data entry. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for customizing privacy control systems may include (1) identifying a data entry from within a set of data entries stored on a computing device that has been selected to be inaccessible by an application installed on the computing device (2) marking the data with an indication that the data entry has been selected to be inaccessible by the application (3) intercepting an attempt made by the application to access the data entry (4) determining that the application is not permitted to access the data entry by identifying the indication that the data entry was selected to be inaccessible by the application and (5) blocking the application from accessing the data entry in response to determining that the data entry has been marked as inaccessible while allowing at least one additional application to access the data entry various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10466924B1,9118,Systems and methods for generating memory images of computing devices ,2019-11-05,"['US9116768B1', 'US9323549B2', 'US9998480B1', 'US9300693B1', 'US8806625B1', 'US9245123B1', 'US9524389B1', 'US9052935B1', 'CN108701188A', 'US9223966B1', 'JP6335315B2', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9372762B2', 'US9065849B1', 'EP3308313B1', 'JP6101408B2', 'US10331879B1', 'JP6122555B2', 'US9043922B1', 'US8862927B2', 'JP6205062B2', 'US9129108B2']","
The disclosed computer-implemented method for generating memory images of computing devices may include (1) monitoring a computing device to detect changes made to data stored within the computing device, (2) maintaining a log that describes the data changes made by recording, in response to detecting a change made to a portion of data, both a state of the portion of data after the data change occurred and a time at which the data change occurred, (3) detecting an event that triggers generation of an image of the computing device that represents a state of the computing device at a particular point in time, and (4) in response to detecting the event, generating the image of the computing device by incorporating at least a portion of the log of data changes into the image of the computing device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for generating memory images of computing devices may include (1) monitoring a computing device to detect changes made to data stored within the computing device (2) maintaining a log that describes the data changes made by recording in response to detecting a change made to a portion of data both a state of the portion of data after the data change occurred and a time at which the data change occurred (3) detecting an event that triggers generation of an image of the computing device that represents a state of the computing device at a particular point in time and (4) in response to detecting the event generating the image of the computing device by incorporating at least a portion of the log of data changes into the image of the computing device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10409979B1,9119,Systems and methods for preventing addictive application usage ,2019-09-10,"['CA2955257C', 'US9116768B1', 'US9141790B2', 'US9998480B1', 'US9330273B2', 'US9185119B1', 'US9948663B1', 'US9300693B1', 'US9569605B1', 'US10742665B2', 'US9729579B1', 'US9245123B1', 'US9171154B2', 'US9223966B1', 'US9401925B1', 'US9852289B1', 'EP3374922B1', 'US9582669B1', 'EP3308313B1', 'US9529990B2', 'US8904503B2', 'US8060940B2', 'JP6122555B2', 'JP6314267B2', 'JP6364547B2']","
A computer-implemented method for preventing addictive application usage may include (i) identifying a user of a software application, (ii) monitoring the user's habits in relation to accessing the software application, (iii) determining that the user's habits indicate potentially addictive behavior relative to a baseline behavior in relation to accessing the software application, and (iv) automatically executing an application control action in response to determining that the user's habits indicate potentially addictive behavior. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
a computer-implemented method for preventing addictive application usage may include (i) identifying a user of a software application (ii) monitoring the user's habits in relation to accessing the software application (iii) determining that the user's habits indicate potentially addictive behavior relative to a baseline behavior in relation to accessing the software application and (iv) automatically executing an application control action in response to determining that the user's habits indicate potentially addictive behavior various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10797870B1,9215,Systems and methods for generating passwords ,2020-10-06,"['US9246944B1', 'US9116768B1', 'US9141790B2', 'US9998480B1', 'CN105453102B', 'US10073864B1', 'US10616210B2', 'US9569605B1', 'US10140370B1', 'US9160766B2', 'US8806625B1', 'US9571509B1', 'US10061928B2', 'US9223966B1', 'JP6335315B2', 'US9401925B1', 'US9852289B1', 'EP3374922B1', 'US10454922B2', 'EP2316092B1', 'US8756432B1', 'EP3029593B1', 'EP3411825B1', 'US8812860B1', 'US9736178B1']","
The disclosed computer-implemented method for generating passwords may include (i) accessing a vault of confidential information describing a user, (ii) extracting, from the vault, a set of multiple items of confidential information describing the user, (iii) executing a programmed heuristic on the set of multiple items of confidential information to generate multiple candidate passwords that each derives from a respective semirandom permutation of the multiple items of confidential information, and (iv) displaying electronically the multiple candidate passwords to the user to enable the user to select a password from the multiple candidate passwords as a specific password for accessing a protected computing resource. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2020,"
the disclosed computer-implemented method for generating passwords may include (i) accessing a vault of confidential information describing a user (ii) extracting from the vault a set of multiple items of confidential information describing the user (iii) executing a programmed heuristic on the set of multiple items of confidential information to generate multiple candidate passwords that each derives from a respective semirandom permutation of the multiple items of confidential information and (iv) displaying electronically the multiple candidate passwords to the user to enable the user to select a password from the multiple candidate passwords as a specific password for accessing a protected computing resource various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,3.0,9.0
US10547637B1,9240,Systems and methods for automatically blocking web proxy auto-discovery protocol (WPAD) attacks ,2020-01-28,"['US9246944B1', 'US10372919B1', 'US9116768B1', 'US9998480B1', 'US9846772B1', 'US9300693B1', 'US9729579B1', 'US9171154B2', 'US9223966B1', 'US8739284B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'US9781143B1', 'US9529990B2', 'JP6101408B2', 'US8904503B2', 'US7970939B1', 'US9043922B1', 'JP6205062B2', 'EP3411825B1', 'US9736178B1', 'US8370933B1']","
A computer-implemented method for automatically blocking Web Proxy Auto-Discovery Protocol (WPAD) attacks may include (i) automatically detecting, by a computing device, a WPAD request for a configuration file, (ii) identifying, by the computing device, a server attempting to fulfill the WPAD request for the configuration file, (iii) determining, by the computing device, that the server is not included in a whitelist of WPAD servers for the configuration file, and (iv) automatically performing, by the computing device and based on the determination that the server is not included in the whitelist, a security action to secure the WPAD request for the configuration file. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2020,"
a computer-implemented method for automatically blocking web proxy auto-discovery protocol (wpad) attacks may include (i) automatically detecting by a computing device a wpad request for a configuration file (ii) identifying by the computing device a server attempting to fulfill the wpad request for the configuration file (iii) determining by the computing device that the server is not included in a whitelist of wpad servers for the configuration file and (iv) automatically performing by the computing device and based on the determination that the server is not included in the whitelist a security action to secure the wpad request for the configuration file various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9734312B1,9281,Systems and methods for detecting when users are uninstalling applications ,2017-08-15,"['US9100426B1', 'US9836603B2', 'US8806639B2', 'US9116768B1', 'US9800560B1', 'US9838405B1', 'US9330273B2', 'US9846772B1', 'US9300693B1', 'US8850517B2', 'US9729579B1', 'JP6689992B2', 'US9223966B1', 'JP6335315B2', 'US9294284B1', 'US9852289B1', 'EP3374922B1', 'US9158915B1', 'US9800606B1', 'US9065849B1', 'US9529990B2', 'JP6101408B2', 'JP6166839B2', 'US8904503B2', 'JP6205062B2']","
The disclosed computer-implemented method for detecting when users are uninstalling applications may include (1) monitoring, as part of an application installed on a computing device via an accessibility API provided by an operating system of the computing device, accessibility events that indicate state transitions in user interfaces of applications running on the computing device, (2) detecting, based on an analysis of at least one accessibility event, an attempt by a user to uninstall an application from the computing device, and (3) in response to detecting the attempt to uninstall the application, prompting the user to perform at least one action before allowing the application to be uninstalled. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for detecting when users are uninstalling applications may include (1) monitoring as part of an application installed on a computing device via an accessibility api provided by an operating system of the computing device accessibility events that indicate state transitions in user interfaces of applications running on the computing device (2) detecting based on an analysis of at least one accessibility event an attempt by a user to uninstall an application from the computing device and (3) in response to detecting the attempt to uninstall the application prompting the user to perform at least one action before allowing the application to be uninstalled various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10292047B1,9288,Systems and methods for preventing tracking of mobile devices ,2019-05-14,"['US9246944B1', 'US9116768B1', 'AU2015256400B2', 'US9424136B1', 'US9743251B2', 'US9460296B2', 'US9846772B1', 'US9185119B1', 'US10140370B1', 'US10742665B2', 'US9407664B1', 'US9578445B2', 'EP3039609B1', 'US9436819B2', 'US9401925B1', 'US8413130B2', 'US9336384B2', 'JP2016528656A', 'EP3241331B1', 'US9800606B1', 'US9781143B1', 'US9253210B2', 'AU2016375909C1', 'US20190215157A1', 'JP6205062B2']","
A computer-implemented method for preventing tracking of mobile devices may include (1) identifying, from a first device with wireless networking capability, an initial service set identifier used by the first device as identification for a wireless network, where a second device with wireless networking capability also uses the initial service set identifier, (2) determining, based at least in part on a time indicator at the first device, that the initial service set identifier is to be changed, (3) generating a new service set identifier for use by the first device instead of the initial service set identifier, where the new service set identifier is generated with an identifier generation algorithm that is also used by the second device, and (4) replacing use of the initial service set identifier by the first device with use of the new service set identifier. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
a computer-implemented method for preventing tracking of mobile devices may include (1) identifying from a first device with wireless networking capability an initial service set identifier used by the first device as identification for a wireless network where a second device with wireless networking capability also uses the initial service set identifier (2) determining based at least in part on a time indicator at the first device that the initial service set identifier is to be changed (3) generating a new service set identifier for use by the first device instead of the initial service set identifier where the new service set identifier is generated with an identifier generation algorithm that is also used by the second device and (4) replacing use of the initial service set identifier by the first device with use of the new service set identifier various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,3.0,9.0
US10282557B1,9293,Systems and methods for protecting sensitive data against data loss ,2019-05-07,"['US9148441B1', 'US9141790B2', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'US9330273B2', 'US9185119B1', 'US9300693B1', 'JP6336675B2', 'US8806625B1', 'US9166997B1', 'US9571509B1', 'JP2017142821A', 'US9223966B1', 'JP6689992B2', 'JP6335315B2', 'US9336384B2', 'US9852289B1', 'EP3241331B1', 'US9298724B1', 'US9529990B2', 'US8904503B2', 'EP3207487B1', 'US9043922B1', 'EP3087531B1']","
The disclosed computer-implemented method for protecting sensitive data against data loss may include (1) identifying a resource comprising sensitive data, (2) establishing, for the resource, an accessibility threshold that indicates a limit on permissions to access the resource, (3) monitoring how the permissions to access the resource drift over time by tracking changes in users' permissions to access the resource, (4) detecting, while tracking the changes in users' permissions to access the resource, that access to the resource has surpassed the accessibility threshold, and (5) in response to detecting that the access to the resource has surpassed the accessibility threshold, performing a security action to protect the sensitive data from potentially being exposed. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for protecting sensitive data against data loss may include (1) identifying a resource comprising sensitive data (2) establishing for the resource an accessibility threshold that indicates a limit on permissions to access the resource (3) monitoring how the permissions to access the resource drift over time by tracking changes in users' permissions to access the resource (4) detecting while tracking the changes in users' permissions to access the resource that access to the resource has surpassed the accessibility threshold and (5) in response to detecting that the access to the resource has surpassed the accessibility threshold performing a security action to protect the sensitive data from potentially being exposed various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10270744B2,9,Behavior analysis based DNS tunneling detection and classification framework for network security ,2019-04-23,"['US20190385167A1', 'US9560072B1', 'JP6006788B2', 'US10218740B1', 'US9369479B2', 'US10728263B1', 'US10200384B1', 'US10721243B2', 'US9531738B2', 'US9838407B1', 'US10469514B2', 'US20200287925A1']","
New and improved techniques for a behavior analysis based DNS tunneling detection and classification framework for network security are disclosed. In some embodiments, a platform implementing an analytics framework for DNS security is provided for facilitating DNS tunneling detection. For example, an online platform can implement an analytics framework for DNS security based on passive DNS traffic analysis.
",H04,2019,"
new and improved techniques for a behavior analysis based dns tunneling detection and classification framework for network security are disclosed in some embodiments a platform implementing an analytics framework for dns security is provided for facilitating dns tunneling detection for example an online platform can implement an analytics framework for dns security based on passive dns traffic analysis
",5,H04_5,2,2.0,4.0,4.0
US9779236B2,52,Risk assessment modeling ,2017-10-03,"['CN105378790B', 'US9680868B2', 'US20180160309A1', 'US9160766B2', 'US20190364019A1', 'US10862901B2', 'US9703962B2', 'US10735432B2', 'US10042999B2', 'EP3195560B1', 'US10440016B2', 'US9529990B2', 'EP3065367B1', 'US10587631B2', 'US20200327212A1', 'US10701094B2', 'US10742676B2', 'US10063584B1']","
One or more techniques and/or systems are provided for risk assessment. Historical authentication data and/or compromised user account data may be evaluated to identify a set of authentication context properties associated with user authentication sessions and/or a set of malicious account context properties associated with compromised user accounts (e.g., properties indicative of whether a user recently visited a malicious site, created a fake social network profile, logged in from unknown locations, etc.). The set of authentication context properties and/or the set of malicious account context properties may be annotated to create an annotated context property training set that may be used to train a risk assessment machine learning model to generate a risk assessment model. The risk assessment model may be used to evaluate user context properties of a user account event to generate a risk analysis metric indicative of a likelihood the user account event is malicious or safe.
",G06,2017,"
one or more techniques and/or systems are provided for risk assessment historical authentication data and/or compromised user account data may be evaluated to identify a set of authentication context properties associated with user authentication sessions and/or a set of malicious account context properties associated with compromised user accounts (eg properties indicative of whether a user recently visited a malicious site created a fake social network profile logged in from unknown locations etc) the set of authentication context properties and/or the set of malicious account context properties may be annotated to create an annotated context property training set that may be used to train a risk assessment machine learning model to generate a risk assessment model the risk assessment model may be used to evaluate user context properties of a user account event to generate a risk analysis metric indicative of a likelihood the user account event is malicious or safe
",5,G06_5,2,5.0,21.0,4.0
US20160065594A1,54,Intrusion detection platform ,2016-03-03,"['US10454955B2', 'US10587640B2', 'US10728263B1', 'US10248910B2', 'US9940454B2', 'US10749887B2', 'KR101721032B1', 'US10567386B2', 'US10623435B2', 'US9853983B2', 'US20180041537A1', 'US10419222B2', 'US10063654B2', 'US10911468B2', 'US9800606B1', 'US10805321B2', 'US10762206B2', 'EP3195560B1', 'US10102372B2', 'US9838407B1', 'US10742676B2']","
A device receives user information associated with a user of a user device that is associated with a network, and creates a user profile, associated with the user, based on the user information. The device determines threats to the network, by the user, based on the user profile. The threats to the network include insider threats, advanced persistent threats, bring your own device (BYOD) threats, cloud security threats, malware threats, and/or denial of service (DoS) threats. The device stores or presents, for display, information associated with the determined threats to the network by the user.
",H04,2016,"
a device receives user information associated with a user of a user device that is associated with a network and creates a user profile associated with the user based on the user information the device determines threats to the network by the user based on the user profile the threats to the network include insider threats advanced persistent threats bring your own device (byod) threats cloud security threats malware threats and/or denial of service (dos) threats the device stores or presents for display information associated with the determined threats to the network by the user
",5,H04_5,2,10.0,28.0,4.0
US9213990B2,80,Method of reducing financial fraud by user devices patronizing commercial websites ,2015-12-15,"['CN106575327B', 'US8087088B1', 'US10069852B2', 'US20130198203A1', 'US10091180B1', 'US9848009B2', 'US9973519B2', 'CN105590055B', 'US9954841B2', 'US7908645B2', 'US10621585B2', 'EP2691848B1', 'US8788407B1', 'CN105516113B', 'US10749884B2', 'US20190364019A1', 'EP3195560B1', 'US20170118241A1', 'US20190245858A1']","
A real-time fraud prevention system enables merchants and commercial organizations on-line to assess and protect themselves from high-risk users. A centralized database is configured to build and store dossiers of user devices and behaviors collected from subscriber websites in real-time. Real, low-risk users have webpage click navigation behaviors that are assumed to be very different than those of fraudsters. Individual user devices are distinguished from others by hundreds of points of user-device configuration data each independently maintains. A client agent provokes user devices to volunteer configuration data when a user visits respective webpages at independent websites. A collection of comprehensive dossiers of user devices is organized by their identifying information, and used calculating a fraud score in real-time. Each corresponding website is thereby assisted in deciding whether to allow a proposed transaction to be concluded with the particular user and their device.
",G06,2015,"
a real-time fraud prevention system enables merchants and commercial organizations on-line to assess and protect themselves from high-risk users a centralized database is configured to build and store dossiers of user devices and behaviors collected from subscriber websites in real-time real low-risk users have webpage click navigation behaviors that are assumed to be very different than those of fraudsters individual user devices are distinguished from others by hundreds of points of user-device configuration data each independently maintains a client agent provokes user devices to volunteer configuration data when a user visits respective webpages at independent websites a collection of comprehensive dossiers of user devices is organized by their identifying information and used calculating a fraud score in real-time each corresponding website is thereby assisted in deciding whether to allow a proposed transaction to be concluded with the particular user and their device
",5,G06_5,2,0.0,0.0,4.0
US20190364019A1,85,Evaluating and modifying countermeasures based on aggregate transaction status ,2019-11-28,"['US10454955B2', 'US10412111B2', 'US10042999B2', 'US20180191754A1', 'US9832213B2', 'US10567419B2', 'US9703953B2', 'US7934253B2', 'US10628582B2', 'US10530796B2', 'US10848517B1', 'US10708287B2', 'US10701094B2', 'CN106716958B', 'US9536071B2', 'US10333924B2', 'US9942250B2', 'US20190260784A1', 'US20190140835A1', 'EP2892197B1', 'US9015846B2']","
Techniques are provided for evaluating and modifying countermeasures based on aggregate transaction status. A first expression pattern is determined that occurs in each of first response messages served by the web server system in response to successful transactions of the transaction type. A second expression pattern is determined that occurs in each of second response messages served by the web server system in response to non-successful transactions of the transaction type requested. Aa status is determined for each of a plurality of transactions of the transaction type based on matching the first expression pattern or the second expression pattern to response messages served by the web server system. Aggregate status information for the transaction type based on the status for the set of operations is updated. Based on a change in the aggregate status information, a set of one or more security countermeasures is updated.
",H04,2019,"
techniques are provided for evaluating and modifying countermeasures based on aggregate transaction status a first expression pattern is determined that occurs in each of first response messages served by the web server system in response to successful transactions of the transaction type a second expression pattern is determined that occurs in each of second response messages served by the web server system in response to non-successful transactions of the transaction type requested aa status is determined for each of a plurality of transactions of the transaction type based on matching the first expression pattern or the second expression pattern to response messages served by the web server system aggregate status information for the transaction type based on the status for the set of operations is updated based on a change in the aggregate status information a set of one or more security countermeasures is updated
",5,H04_5,2,0.0,21.0,4.0
US20170214701A1,128,Computer security based on artificial intelligence ,2017-07-27,"['US10079859B2', 'US9015812B2', 'US20200404019A1', 'US10417432B2', 'US20140380478A1', 'US10509907B2', 'US9043905B1', 'US20180041537A1']","
COMPUTER SECURITY SYSTEM BASED ON ARTIFICIAL INTELLIGENCE includes Critical Infrastructure Protection & Retribution (CIPR) through Cloud & Tiered Information Security (CTIS), Machine Clandestine Intelligence (MACINT) & Retribution through Covert Operations in Cyberspace, Logically Inferred Zero-database A-priori Realtime Defense (LIZARD), Critical Thinking Memory & Perception (CTMP), Lexical Objectivity Mining (LOM), Linear Atomic Quantum Information Transfer (LAQT) and Universal BCHAIN Everything Connections (UBEC) system with Base Connection Harmonization Attaching Integrated Nodes.
",G06,2017,"
computer security system based on artificial intelligence includes critical infrastructure protection & retribution (cipr) through cloud & tiered information security (ctis) machine clandestine intelligence (macint) & retribution through covert operations in cyberspace logically inferred zero-database a-priori realtime defense (lizard) critical thinking memory & perception (ctmp) lexical objectivity mining (lom) linear atomic quantum information transfer (laqt) and universal bchain everything connections (ubec) system with base connection harmonization attaching integrated nodes
",5,G06_5,2,2.0,19.0,4.0
US10019744B2,138,Multi-dimensional behavior device ID ,2018-07-10,"['US10069852B2', 'US9680868B2', 'US10230718B2', 'US10091180B1', 'US9848009B2', 'US9973519B2', 'US10498756B2', 'US9705902B1', 'US20170161520A1', 'US9954841B2', 'US10298614B2', 'US10621585B2', 'US8739278B2', 'US10721268B2', 'US20160261618A1', 'US20190364019A1', 'EP3195560B1', 'US20170118241A1', 'US10193909B2', 'CN104077396B']","
A real-time fraud prevention system enables merchants and commercial organizations on-line to assess and protect themselves from high-risk users. A centralized database is configured to build and store dossiers of user devices and behaviors collected from subscriber websites in real-time. Real, low-risk users have webpage click navigation behaviors that are assumed to be very different than those of fraudsters. Individual user devices are distinguished from others by hundreds of points of user-device configuration data each independently maintains. A client agent provokes user devices to volunteer configuration data when a user visits respective webpages at independent websites. A collection of comprehensive dossiers of user devices is organized by their identifying information, and used calculating a fraud score in real-time. Each corresponding website is thereby assisted in deciding whether to allow a proposed transaction to be concluded with the particular user and their device.
",G06,2018,"
a real-time fraud prevention system enables merchants and commercial organizations on-line to assess and protect themselves from high-risk users a centralized database is configured to build and store dossiers of user devices and behaviors collected from subscriber websites in real-time real low-risk users have webpage click navigation behaviors that are assumed to be very different than those of fraudsters individual user devices are distinguished from others by hundreds of points of user-device configuration data each independently maintains a client agent provokes user devices to volunteer configuration data when a user visits respective webpages at independent websites a collection of comprehensive dossiers of user devices is organized by their identifying information and used calculating a fraud score in real-time each corresponding website is thereby assisted in deciding whether to allow a proposed transaction to be concluded with the particular user and their device
",5,G06_5,2,0.0,0.0,4.0
US9043905B1,153,System and method for insider threat detection ,2015-05-26,"['EP3107026B1', 'EP2882159B1', 'US10419466B2', 'AU2017254815B2', 'US10728263B1', 'US10268821B2', 'US9336388B2', 'US20190260780A1', 'US10789367B2']","
Described is a system for detecting insider threats in a network. In detecting the insider threat, the system receives data from the network relevant to network activity and extracts observable actions from the data relevant to a mission. The observable actions are combined to provide contextual cues and reasoning results. Based on the observable actions and reasoning results, proposed security policy updates are proposed to force insiders into using more observable actions. Finally, the system detects potential insider threats through analyzing the observable actions and reasoning results.
",H04,2015,"
described is a system for detecting insider threats in a network in detecting the insider threat the system receives data from the network relevant to network activity and extracts observable actions from the data relevant to a mission the observable actions are combined to provide contextual cues and reasoning results based on the observable actions and reasoning results proposed security policy updates are proposed to force insiders into using more observable actions finally the system detects potential insider threats through analyzing the observable actions and reasoning results
",5,H04_5,2,11.0,21.0,4.0
US20180041537A1,154,Identifying and remediating phishing security weaknesses ,2018-02-08,"['US10447708B2', 'US20190068649A1', 'US9940454B2', 'US10778725B2', 'US10516682B2', 'US10516531B2', 'US10298609B2', 'US20180278649A1', 'US9642008B2', 'US10623435B2', 'US9501666B2', 'GB2564589B', 'US10382459B2', 'US10673873B2', 'US10558800B2', 'US10270769B2', 'US9740859B2', 'US10122747B2', 'US9753796B2', 'US9516062B2', 'US10817602B2', 'US10515211B2']","
A threat management facility generates a simulated phishing threat based on one or more characteristics of a network user. Based on whether the user fails to respond appropriately to the simulated phishing threat, the threat management facility may implement one or more prophylactic measures to remediate the security weakness exposed by the user's failure to respond appropriately to the simulated phishing threat. For example, a security policy for an endpoint associated with the user may be adjusted to address the security weakness. Additionally, or alternatively, the user may be enrolled in training directed at reducing the likelihood that the user will be the victim of an actual phishing attack in the future.
",H04,2018,"
a threat management facility generates a simulated phishing threat based on one or more characteristics of a network user based on whether the user fails to respond appropriately to the simulated phishing threat the threat management facility may implement one or more prophylactic measures to remediate the security weakness exposed by the user's failure to respond appropriately to the simulated phishing threat for example a security policy for an endpoint associated with the user may be adjusted to address the security weakness additionally or alternatively the user may be enrolled in training directed at reducing the likelihood that the user will be the victim of an actual phishing attack in the future
",5,H04_5,2,9.0,29.0,4.0
US8793790B2,171,System and method for insider threat detection ,2014-07-29,"['US10587640B2', 'EP3107026B1', 'US9807109B2', 'EP3343868B1', 'EP3528458B1']","
A system and method include obtaining data related to accessing cyber assets and accessing physical assets from a combined cyber access and physical access control system that protects cyber and physical assets of an organization from both authorized and unauthorized access with malicious intent. The system and method compare the data to known patterns of expected behavior, and identify patterns of suspicious behavior as a function of comparing the data to the patterns of expected behavior. The comparison is utilized to identify potentially malicious insider behavior toward the cyber and physical assets.
",G06,2014,"
a system and method include obtaining data related to accessing cyber assets and accessing physical assets from a combined cyber access and physical access control system that protects cyber and physical assets of an organization from both authorized and unauthorized access with malicious intent the system and method compare the data to known patterns of expected behavior and identify patterns of suspicious behavior as a function of comparing the data to the patterns of expected behavior the comparison is utilized to identify potentially malicious insider behavior toward the cyber and physical assets
",5,G06_5,2,11.0,19.0,4.0
US9807109B2,172,Profiling cyber threats detected in a target environment and automatically generating one or more rule bases for an expert system usable to profile cyber threats detected in a target environment ,2017-10-31,"['US7784099B2', 'US8997236B2', 'US9043905B1', 'EP3528458B1']","
A computer implemented method of profiling cyber threats detected in a target environment, comprising: receiving, from a Security Information and Event Manager (SIEM) monitoring the target environment, alerts triggered by a detected potential cyber threat, and, for each alert: retrieving captured packet data related to the alert; extracting data pertaining to a set of attributes from captured packet data triggering the alert; applying fuzzy logic to data pertaining to one or more of the attributes to determine values for one or more output variables indicative of a level of an aspect of risk attributable to the cyber threat.
",H04,2017,"
a computer implemented method of profiling cyber threats detected in a target environment comprising: receiving from a security information and event manager (siem) monitoring the target environment alerts triggered by a detected potential cyber threat and for each alert: retrieving captured packet data related to the alert; extracting data pertaining to a set of attributes from captured packet data triggering the alert; applying fuzzy logic to data pertaining to one or more of the attributes to determine values for one or more output variables indicative of a level of an aspect of risk attributable to the cyber threat
",5,H04_5,2,11.0,19.0,4.0
US9888024B2,178,Detection of security incidents with low confidence security events ,2018-02-06,"['US10587640B2', 'US9832217B2', 'US9912638B2', 'US10121000B1', 'US10902117B1', 'CA2926579C', 'US9832214B2', 'US20190260779A1', 'EP3009949B1', 'US10554687B1', 'US9178906B1', 'US20190215335A1', 'US9800606B1', 'US9401924B2', 'US8701190B1', 'US10264104B2', 'US10148685B2', 'US10326778B2', 'US10735458B1', 'US10467411B1', 'US9311476B2', 'EP2892197B1', 'US20160308910A1', 'US9021595B2', 'US10176321B2']","
Techniques are disclosed for detecting security incidents based on low confidence security events. A security management server aggregates a collection of security events received from logs from one or more devices. The security management server evaluates the collection of security events based on a confidence score assigned to each distinct type of security event. Each confidence score indicates a likelihood that a security incident has occurred. The security management server determines, based on the confidence scores, at least one threshold for determining when to report an occurrence of a security incident from the collection of security events. Upon determining that at least one security event of the collection has crossed the at least one threshold, the security management server reports the occurrence of the security incident to an analyst.
",H04,2018,"
techniques are disclosed for detecting security incidents based on low confidence security events a security management server aggregates a collection of security events received from logs from one or more devices the security management server evaluates the collection of security events based on a confidence score assigned to each distinct type of security event each confidence score indicates a likelihood that a security incident has occurred the security management server determines based on the confidence scores at least one threshold for determining when to report an occurrence of a security incident from the collection of security events upon determining that at least one security event of the collection has crossed the at least one threshold the security management server reports the occurrence of the security incident to an analyst
",5,H04_5,2,2.0,36.0,4.0
US10581894B2,229,Assessing effectiveness of cybersecurity technologies ,2020-03-03,"['US20190245894A1', 'US10482260B1', 'US9473522B1', 'US20190260793A1', 'US20180025157A1', 'EP3021546B1', 'US9306964B2', 'US9800606B1', 'US9092616B2', 'US10313389B2', 'US10021127B2', 'AU2015203088B2', 'EP2756437B1', 'US9258321B2', 'US10817602B2', 'US10162970B2', 'US10735458B1', 'US9824216B1', 'US10812516B2', 'US10534906B1']","
A method for assessing effectiveness of one or more cybersecurity technologies in a computer network includes testing each of two or more component stages of an attack model at a first computer network element twice. A first one of the tests is conducted with a first one of the cybersecurity technologies operable to protect the first computer network element, and a second one of the tests is conducted with the first cybersecurity technology not operable to protect the first computer network element. For each one of the twice-tested component stages, comparing results from the first test and the second test, wherein the comparison yields or leads to information helpful in assessing effectiveness of the first cybersecurity technology on each respective one of the twice-tested component stages at the computer network element.
",H04,2020,"
a method for assessing effectiveness of one or more cybersecurity technologies in a computer network includes testing each of two or more component stages of an attack model at a first computer network element twice a first one of the tests is conducted with a first one of the cybersecurity technologies operable to protect the first computer network element and a second one of the tests is conducted with the first cybersecurity technology not operable to protect the first computer network element for each one of the twice-tested component stages comparing results from the first test and the second test wherein the comparison yields or leads to information helpful in assessing effectiveness of the first cybersecurity technology on each respective one of the twice-tested component stages at the computer network element
",5,H04_5,2,9.0,19.0,4.0
US8549643B1,297,Using decoys by a data loss prevention system to protect against unscripted activity ,2013-10-01,"['US20190245894A1', 'JP2018521430A', 'US10567432B2', 'JP2017503222A', 'US9438614B2', 'US9311476B2', 'US9686293B2', 'US9503470B2', 'US8327442B2']","
A computing device executing a data loss prevention (DLP) system tracks bait data on at least one of the computing device or a network. The DLP system identifies a potential security threat in response to detecting unscripted activity associated with the bait data. The DLP system performs an action in response to identifying the potential security threat.
",G06,2013,"
a computing device executing a data loss prevention (dlp) system tracks bait data on at least one of the computing device or a network the dlp system identifies a potential security threat in response to detecting unscripted activity associated with the bait data the dlp system performs an action in response to identifying the potential security threat
",5,G06_5,2,2.0,0.0,4.0
US20190245894A1,298,Processing network traffic based on assessed security weaknesses ,2019-08-08,"['US10367815B2', 'US9294500B2', 'US9438631B2', 'US9344431B2', 'US10482260B1', 'US9940454B2', 'US9210182B2', 'US10516682B2', 'US10652273B2', 'CN103180862B', 'US9860263B2', 'US10333990B2', 'US9740852B2', 'US10341321B2', 'US8850588B2', 'US10673873B2', 'US10218697B2', 'US10803005B2', 'US9467465B2', 'US10817602B2', 'US10515211B2', 'US9846776B1']","
A threat management facility generates a simulated phishing threat based on one or more characteristics of users of an enterprise network and transmits the simulated phishing threat to the users of the enterprise network. Based on whether a user fails to respond appropriately to the simulated phishing threat, the threat management facility may adjust a profile of the user. Network traffic to and from an endpoint associated with the user may be processed according to the adjusted profile.
",H04,2019,"
a threat management facility generates a simulated phishing threat based on one or more characteristics of users of an enterprise network and transmits the simulated phishing threat to the users of the enterprise network based on whether a user fails to respond appropriately to the simulated phishing threat the threat management facility may adjust a profile of the user network traffic to and from an endpoint associated with the user may be processed according to the adjusted profile
",5,H04_5,2,9.0,29.0,4.0
US9686293B2,299,Systems and methods for malware detection and mitigation ,2017-06-20,"['US10587640B2', 'US9769204B2', 'US10445502B1', 'US10728263B1', 'US9294442B1', 'US10652273B2', 'US10701036B2', 'US9165142B1', 'EP3014813B1', 'US9594912B1', 'US10657251B1', 'US9954872B2', 'US9609019B2', 'US9800606B1', 'US10467414B1', 'US10515210B2', 'US10581894B2', 'US10230689B2', 'US10467411B1', 'US9942250B2', 'US10534906B1']","
Systems and methods for monitoring malware events in a computer networking environment are described. The systems and methods including the steps of identifying suspect objects; transmitting the suspect objects to an inspection service, wherein the inspection service inspects the suspect objects using a plurality of inspection methods to create digital information about the nature of the potential threat posed by the suspect objects; transmitting said digital information to an analytical service operating, wherein the analytical service performs a plurality of analytical algorithms to categorize the suspect objects with one or more scores for each suspect object based on their security threat; transmitting said one or more scores to a correlation facility which aggregates a plurality of scores; and generating an infection verification pack comprising routines which, when run on an end-point machine within the computer networking environment, will mitigate a suspected security threat.
",H04,2017,"
systems and methods for monitoring malware events in a computer networking environment are described the systems and methods including the steps of identifying suspect objects; transmitting the suspect objects to an inspection service wherein the inspection service inspects the suspect objects using a plurality of inspection methods to create digital information about the nature of the potential threat posed by the suspect objects; transmitting said digital information to an analytical service operating wherein the analytical service performs a plurality of analytical algorithms to categorize the suspect objects with one or more scores for each suspect object based on their security threat; transmitting said one or more scores to a correlation facility which aggregates a plurality of scores; and generating an infection verification pack comprising routines which when run on an end-point machine within the computer networking environment will mitigate a suspected security threat
",5,H04_5,2,9.0,0.0,4.0
US9503470B2,300,Distributed agent based model for security monitoring and response ,2016-11-22,"['US20190245894A1', 'US20080037791A1', 'US20150047032A1', 'US20140259095A1', 'US10616269B2', 'US9654489B2', 'US8069471B2', 'US9774616B2', 'US10673873B2']","
An architecture is provided for a widely distributed security system (SDI-SCAM) that protects computers at individual client locations, but which constantly pools and analyzes information gathered from machines across a network in order to quickly detect patterns consistent with intrusion or attack, singular or coordinated. When a novel method of attack has been detected, the system distributes warnings and potential countermeasures to each individual machine on the network. Such a warning may potentially include a probability distribution of the likelihood of an intrusion or attack as well as the relative probabilistic likelihood that such potential intrusion possesses certain characteristics or typologies or even strategic objectives in order to best recommend and/or distribute to each machine the most befitting countermeasure(s) given all presently known particular data and associated predicted probabilistic information regarding the prospective intrusion or attack. If any systems are adversely affected, methods for repairing the damage are shared and redistributed throughout the network.
",H04,2016,"
an architecture is provided for a widely distributed security system (sdi-scam) that protects computers at individual client locations but which constantly pools and analyzes information gathered from machines across a network in order to quickly detect patterns consistent with intrusion or attack singular or coordinated when a novel method of attack has been detected the system distributes warnings and potential countermeasures to each individual machine on the network such a warning may potentially include a probability distribution of the likelihood of an intrusion or attack as well as the relative probabilistic likelihood that such potential intrusion possesses certain characteristics or typologies or even strategic objectives in order to best recommend and/or distribute to each machine the most befitting countermeasure(s) given all presently known particular data and associated predicted probabilistic information regarding the prospective intrusion or attack if any systems are adversely affected methods for repairing the damage are shared and redistributed throughout the network
",5,H04_5,2,2.0,25.0,4.0
US9369479B2,325,Detection of malware beaconing activities ,2016-06-14,"['US10587640B2', 'US10193929B2', 'US10193920B2', 'US10728263B1', 'US9832213B2', 'US9503468B1', 'US10505900B2', 'US10270744B2', 'US9762543B2', 'US10348771B2', 'US10530796B2', 'US10237283B2', 'US10469514B2', 'US10848517B1', 'US9306964B2', 'US10326778B2', 'AU2014244137B2', 'US9942250B2', 'US9838407B1', 'US20190087495A1', 'US20200287925A1']","
Malware beaconing activity detection is disclosed, including: monitoring a plurality of conversations between an internal device and one or more external destinations; extracting feature sets based at least in part on the plurality of conversations; and determining that a conversation of the plurality of conversations is anomalous based at least in part on the extracted feature sets.
",H04,2016,"
malware beaconing activity detection is disclosed including: monitoring a plurality of conversations between an internal device and one or more external destinations; extracting feature sets based at least in part on the plurality of conversations; and determining that a conversation of the plurality of conversations is anomalous based at least in part on the extracted feature sets
",5,H04_5,2,2.0,4.0,4.0
US10419458B2,334,Distributed techniques for detecting atypical or malicious wireless communications activity ,2019-09-17,"['US9369476B2', 'US10419465B2', 'US10540264B2', 'US9330257B2', 'US9769749B2', 'US20190260770A1', 'US10609059B2']","
Distributed techniques for detecting atypical or malicious wireless communications activity are disclosed. A server can iteratively generate sets of filters based at least in part upon observation data received from one or more Protects. The filters can be used by the Protect(s) to distinguish between sniffed wireless messages that are to be discarded and those that are to be reported to the server. The server can provide the generated sets of filters to the Protect(s) to cause the Protect(s) to process additional sniffed wireless messages utilizing the one or more sets of filters. Updated filters can cause fewer subsequent sniffed wireless messages to be reported than would have been reported by use of previous filters. Limited activity reporting by the Protect(s) enables a reduced communication load compared to full activity reporting without degrading the ability of the server to detect the atypical or malicious wireless communications activity.
",H04,2019,"
distributed techniques for detecting atypical or malicious wireless communications activity are disclosed a server can iteratively generate sets of filters based at least in part upon observation data received from one or more protects the filters can be used by the protect(s) to distinguish between sniffed wireless messages that are to be discarded and those that are to be reported to the server the server can provide the generated sets of filters to the protect(s) to cause the protect(s) to process additional sniffed wireless messages utilizing the one or more sets of filters updated filters can cause fewer subsequent sniffed wireless messages to be reported than would have been reported by use of previous filters limited activity reporting by the protect(s) enables a reduced communication load compared to full activity reporting without degrading the ability of the server to detect the atypical or malicious wireless communications activity
",5,H04_5,2,5.0,87.0,4.0
US20170093910A1,395,Dynamic security mechanisms ,2017-03-30,"['US20190251260A1', 'US9769204B2', 'US9609019B2', 'US20200344257A1', 'US8949931B2', 'US9838426B2', 'US10574685B2', 'US10462188B2', 'EP3528458B1']","
Provided are systems, methods, and computer-program products for a network device configured to dynamically deploy deception mechanisms to detect threats to a network. In various implementations, the network device can be configured to collect network data from a network, and determine a selection of deceptions mechanisms. The deception mechanisms can represent resources available on the network, and are separate from normal operation of the network. The network device can further determine locations within the network to deploy the deception mechanisms. The network device can further identifying a potential threat to the network. The potential threat may be identified by a deception mechanism. The network device can further determine additional deception mechanisms, and use the additional deception mechanisms to facilitate an action on the network.
",H04,2017,"
provided are systems methods and computer-program products for a network device configured to dynamically deploy deception mechanisms to detect threats to a network in various implementations the network device can be configured to collect network data from a network and determine a selection of deceptions mechanisms the deception mechanisms can represent resources available on the network and are separate from normal operation of the network the network device can further determine locations within the network to deploy the deception mechanisms the network device can further identifying a potential threat to the network the potential threat may be identified by a deception mechanism the network device can further determine additional deception mechanisms and use the additional deception mechanisms to facilitate an action on the network
",5,H04_5,2,11.0,25.0,4.0
US20170289191A1,396,Infiltration Detection and Network Rerouting ,2017-10-05,"['US20190260794A1', 'US9769204B2', 'US9832227B2', 'US10326778B2', 'US20190245829A1', 'US9503470B2', 'US10574685B2', 'US10462188B2', 'US10621344B2']","
Provided are methods, network devices, and computer-program products for detecting infiltration of an endpoint, and rerouting network traffic to and from the endpoint when infiltration is detected. In various implementations, a network device on a network can be configured to monitor access to the network device. The network device can further be configured to determine that a condition has occurred. The condition can indicate a suspect access to the network device has occurred. The network device can further be configured to determine a new access protocol for the network device. The network device can further be configured to use the new access protocol to cause communication between the network device and the network to be redirected to a high-interaction network. Redirecting the communication can disable communication between the network device and the network and enables communication between the network device and the high-interaction network.
",H04,2017,"
provided are methods network devices and computer-program products for detecting infiltration of an endpoint and rerouting network traffic to and from the endpoint when infiltration is detected in various implementations a network device on a network can be configured to monitor access to the network device the network device can further be configured to determine that a condition has occurred the condition can indicate a suspect access to the network device has occurred the network device can further be configured to determine a new access protocol for the network device the network device can further be configured to use the new access protocol to cause communication between the network device and the network to be redirected to a high-interaction network redirecting the communication can disable communication between the network device and the network and enables communication between the network device and the high-interaction network
",5,H04_5,2,11.0,25.0,4.0
US10095866B2,410,System and method for threat risk scoring of security threats ,2018-10-09,"['US9769204B2', 'US9680849B2', 'US9973531B1', 'US10728263B1', 'US10015198B2', 'US9473528B2', 'US10230761B1', 'JP6147309B2', 'US9380072B2', 'US10348771B2', 'US9178906B1', 'US20190245829A1', 'US9594912B1', 'US10657251B1', 'US9542556B2', 'US9954872B2', 'US9306964B2', 'US9609019B2', 'US10079852B2', 'US10515210B2', 'US10530810B2', 'US10872151B1', 'US10467411B1', 'US20160366160A1', 'US10230750B2']","
A system configured to generate a risk score for a threat activity including a digital device. The digital device configured to extract one or more threat events on a network based on metadata for one or more targeted digital devices on the network. Further, the digital device is configured to detect one or more incidents based on a correlation between at least a first threat event of the one or more threat events and a second threat event of the one or more threat events. And, the digital device is configured to generate a risk score for each of said one or more incidents.
",G06,2018,"
a system configured to generate a risk score for a threat activity including a digital device the digital device configured to extract one or more threat events on a network based on metadata for one or more targeted digital devices on the network further the digital device is configured to detect one or more incidents based on a correlation between at least a first threat event of the one or more threat events and a second threat event of the one or more threat events and the digital device is configured to generate a risk score for each of said one or more incidents
",5,G06_5,2,2.0,17.0,4.0
US10326778B2,412,System and method for detecting lateral movement and data exfiltration ,2019-06-18,"['US9762596B2', 'US9769204B2', 'JP6086968B2', 'US10230689B2', 'US10404661B2', 'US9954872B2', 'US10812497B2', 'US9609019B2', 'EP2774039B1', 'EP3272096B1', 'US10467411B1', 'KR101737726B1', 'US9848016B2', 'US9473528B2', 'US10721243B2', 'US10003608B2', 'US10237283B2', 'US10230761B1']","
A system configured to detect a threat activity on a network. The system including a digital device configured to detect a first order indicator of compromise on a network, detect a second order indicator of compromise on the network, generate a risk score based on correlating said first order indicator of compromise on the network with the second order indicator of compromise on said network, and generate at least one incident alert based on comparing the risk score to a threshold.
",H04,2019,"
a system configured to detect a threat activity on a network the system including a digital device configured to detect a first order indicator of compromise on a network detect a second order indicator of compromise on the network generate a risk score based on correlating said first order indicator of compromise on the network with the second order indicator of compromise on said network and generate at least one incident alert based on comparing the risk score to a threshold
",5,H04_5,2,2.0,36.0,4.0
US20160366160A1,413,Systems and Methods for Processing Data Flows ,2016-12-15,"['JP2016136735A', 'US9762596B2', 'US10243975B2', 'US10095866B2', 'US9094372B2', 'US10623434B1', 'US10785191B2', 'US10284574B1', 'US10757134B1', 'US9148442B2', 'US9832213B2', 'US20160330224A1', 'US20150373044A1', 'US8997236B2', 'US10819726B2', 'US10505900B2', 'US10511614B1']","
A flow processing facility, which uses a set of artificial neurons for pattern recognition, such as a self-organizing map, in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems, including computer networks. Flow processing for switching, security, and other network applications, including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security, virtualization, and web connection security. A flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the IP-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps. Exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources. Intrusion Detection and Protection (IDP) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems, including computer networks.
",H04,2016,"
a flow processing facility which uses a set of artificial neurons for pattern recognition such as a self-organizing map in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems including computer networks flow processing for switching security and other network applications including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security virtualization and web connection security a flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the ip-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources intrusion detection and protection (idp) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems including computer networks
",5,H04_5,2,2.0,17.0,4.0
US10050868B2,417,Multimodal help agent for network administrator ,2018-08-14,"['EP2979425B1', 'US10666670B2', 'US20180332074A1', 'US9680867B2', 'US10855706B2', 'US20180302421A1', 'JP6378395B2', 'US20170134423A1', 'US9602372B2', 'US10356007B2', 'US9369479B2', 'US10419465B2', 'CN105684391B', 'US10609059B2', 'US10404741B2', 'US9942250B2', 'US10382467B2', 'JP2020520616A', 'EP3528458B1']","
Network management technology as disclosed herein generates and dynamically updates an intuitive, interactive visualization of a computer network in live operation. The network management technology interprets human user interactions, such as gestures, conversational natural language dialog, and combinations of gestures and natural language dialog, as network directives. The technology can implement the network directives to, for example, facilitate analysis of network activity or to respond to network security events.
",H04,2018,"
network management technology as disclosed herein generates and dynamically updates an intuitive interactive visualization of a computer network in live operation the network management technology interprets human user interactions such as gestures conversational natural language dialog and combinations of gestures and natural language dialog as network directives the technology can implement the network directives to for example facilitate analysis of network activity or to respond to network security events
",5,H04_5,2,2.0,0.0,4.0
US10609059B2,418,Graph-based network anomaly detection across time and entities ,2020-03-31,"['US10606856B2', 'US10560471B2', 'US10412111B2', 'US10061807B2', 'US10121000B1', 'US10735456B2', 'US10270788B2', 'US10860460B2', 'US8601537B2', 'US9262519B1', 'US10372904B2', 'US9313232B2', 'US10200390B2', 'US10791141B2', 'CA2933423C', 'EP3262815B1', 'US20190372868A1', 'US9602530B2', 'US20190138718A1', 'US10367786B2', 'US10542015B2', 'US10762206B2', 'US8577829B2', 'US20200014593A1', 'EP3528458B1']","
The disclosed techniques relate to a graph-based network security analytic framework to combine multiple sources of information and security knowledge in order to detect risky behaviors and potential threats. In some examples, the input can be anomaly events or simply regular events. The entities associated with the activities can be grouped into smaller time units, e.g., per day. The riskiest days of activity can be found by computing a risk score for each day and according to the features in the day. A graph can be built with links between the time units. The links can also receive scoring based on a number of factors. The resulting graph can be compared with known security knowledge for adjustments. Threats can be detected based on the adjusted risk score for a component (i.e., a group of linked entities) as well as a number of other factors.
",H04,2020,"
the disclosed techniques relate to a graph-based network security analytic framework to combine multiple sources of information and security knowledge in order to detect risky behaviors and potential threats in some examples the input can be anomaly events or simply regular events the entities associated with the activities can be grouped into smaller time units eg per day the riskiest days of activity can be found by computing a risk score for each day and according to the features in the day a graph can be built with links between the time units the links can also receive scoring based on a number of factors the resulting graph can be compared with known security knowledge for adjustments threats can be detected based on the adjusted risk score for a component (ie a group of linked entities) as well as a number of other factors
",5,H04_5,2,8.0,2.0,4.0
US9942250B2,419,Network appliance for dynamic protection from risky network activities ,2018-04-10,"['US10848517B1', 'US9609019B2', 'CA2966408C', 'US20160308898A1', 'US9106680B2', 'US10205742B2', 'EP2859494B1']","
Electronic appliances, computer-implemented systems, non-transitory media, and methods are provided to identify risky network activities using intelligent algorithms. The appliances, systems, media, and methods enable rapid detection of risky activities.
",H04,2018,"
electronic appliances computer-implemented systems non-transitory media and methods are provided to identify risky network activities using intelligent algorithms the appliances systems media and methods enable rapid detection of risky activities
",5,H04_5,2,2.0,0.0,4.0
US9553888B2,421,Systems and methods for dynamic protection from electronic attacks ,2017-01-24,"['US8135657B2', 'US8402540B2', 'US8260961B1', 'US9123027B2', 'US9143522B2', 'US20160366160A1', 'US8327442B2']","
Systems and methods for gathering, classifying, and evaluating real time security intelligence data concerning security threats presented by an IP address, and reporting in real time the degree and character of such security threats.
",H04,2017,"
systems and methods for gathering classifying and evaluating real time security intelligence data concerning security threats presented by an ip address and reporting in real time the degree and character of such security threats
",5,H04_5,2,2.0,17.0,4.0
US8135657B2,422,Systems and methods for processing data flows ,2012-03-13,"['US9553888B2', 'US9762596B2', 'US10243975B2', 'US10095866B2', 'US9094372B2', 'US10623434B1', 'US10785191B2', 'US10284574B1', 'US10757134B1', 'JP5886422B2', 'US9148442B2', 'US9832213B2', 'US20160330224A1', 'EP2410452B1', 'US8997236B2', 'US10819726B2', 'US10505900B2', 'US10511614B1']","
A flow processing facility, which uses a set of artificial neurons for pattern recognition, such as a self-organizing map, in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems, including computer networks. Flow processing for switching, security, and other network applications, including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security, virtualization, and web connection security. A flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the IP-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps. Exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources. Intrusion Detection and Protection (IDP) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems, including computer networks.
",H04,2012,"
a flow processing facility which uses a set of artificial neurons for pattern recognition such as a self-organizing map in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems including computer networks flow processing for switching security and other network applications including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security virtualization and web connection security a flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the ip-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources intrusion detection and protection (idp) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems including computer networks
",5,H04_5,2,2.0,17.0,4.0
US8402540B2,423,Systems and methods for processing data flows ,2013-03-19,"['US9553888B2', 'US20190190937A1', 'US9756017B2', 'US9762596B2', 'US10243975B2', 'US10095866B2', 'JP2016136735A', 'US9094372B2', 'US10623434B1', 'US10785191B2', 'US10284574B1', 'US9832213B2', 'EP2410452B1', 'US8806650B2', 'US8997236B2', 'US10819726B2', 'US10511614B1']","
A flow processing facility, which uses a set of artificial neurons for pattern recognition, such as a self-organizing map, in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems, including computer networks. Flow processing for switching, security, and other network applications, including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security, virtualization, and web connection security. A flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the IP-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps. Exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources. Intrusion Detection and Protection (IDP) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems, including computer networks.
",G06,2013,"
a flow processing facility which uses a set of artificial neurons for pattern recognition such as a self-organizing map in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems including computer networks flow processing for switching security and other network applications including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security virtualization and web connection security a flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the ip-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources intrusion detection and protection (idp) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems including computer networks
",5,G06_5,2,2.0,17.0,4.0
US10230750B2,438,Secure computing environment ,2019-03-12,"['US20170310703A1', 'US20190245894A1', 'EP3225010B1', 'US7398389B2', 'US20160057166A1', 'US9680849B2', 'US9954872B2', 'US9609019B2', 'US10462169B2', 'US10326778B2', 'US10616269B2', 'US9654489B2', 'EP3295359B1', 'EP2837131B1', 'US9774616B2', 'US10673873B2']","
Methods and systems for providing secure computing environments. Features of the present invention use a plurality of integrated security controls to ensure security of a computing environment. More specifically, features of the present invention detect discrepancies between a node's behavior and a defined policy to identify and remedy malicious behavior.
",H04,2019,"
methods and systems for providing secure computing environments features of the present invention use a plurality of integrated security controls to ensure security of a computing environment more specifically features of the present invention detect discrepancies between a node's behavior and a defined policy to identify and remedy malicious behavior
",5,H04_5,2,9.0,25.0,4.0
US10284570B2,441,System and method to detect threats to computer based devices and systems ,2019-05-07,"['US20180025157A1', 'US10270744B2', 'US10218740B1', 'RU2607229C2', 'US9282117B2', 'US10735458B1', 'US10102372B2', 'US9723016B2', 'US9621570B2']","
Aspects of the present disclosure relate to systems and methods for detecting a threat of a computing system. In one aspect, a plurality of instances of input data may be received from at least one sensor. A feature vector based upon at least one instance of the plurality of instances of input data may be generated. The feature vector may be sent to a classifier component, where a threat assessment score is determined for the feature vector. The threat assessment score may be determined by combining information associated with the plurality of instances of input data. A threat assignment may be assigned to the at least one instance of data based on the determined threat assessment score. The threat assignment and threat assessment score may be disseminated.
",G06,2019,"
aspects of the present disclosure relate to systems and methods for detecting a threat of a computing system in one aspect a plurality of instances of input data may be received from at least one sensor a feature vector based upon at least one instance of the plurality of instances of input data may be generated the feature vector may be sent to a classifier component where a threat assessment score is determined for the feature vector the threat assessment score may be determined by combining information associated with the plurality of instances of input data a threat assignment may be assigned to the at least one instance of data based on the determined threat assessment score the threat assignment and threat assessment score may be disseminated
",5,G06_5,2,2.0,0.0,4.0
US10051010B2,447,Method and system for automated incident response ,2018-08-14,"['US9769204B2', 'US10193929B2', 'US10601853B2', 'CA2926579C', 'US9888024B2', 'US9332028B2', 'US9686293B2', 'JP6334069B2', 'US20190260786A1', 'US9654485B1', 'US10673873B2', 'EP2828752B1', 'US9609019B2', 'US9306964B2', 'US9800606B1', 'US10044746B2', 'US9225730B1', 'US9712555B2', 'US9392001B2', 'AU2016269514B2', 'JP2017538376A', 'US10873603B2', 'US10534906B1']","
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for implementing a response to one or more security incidents in a computing network. One of the methods includes identifying a security incident based on detecting one or more indicators of compromise associated with the security incident, comparing the security incident with a predefined ontology that maps the security incident to one or more courses of action, selecting a response strategy that includes one or more of the courses of action, and implementing the response strategy as an automated response.
",H04,2018,"
methods systems and apparatus including computer programs encoded on computer storage media for implementing a response to one or more security incidents in a computing network one of the methods includes identifying a security incident based on detecting one or more indicators of compromise associated with the security incident comparing the security incident with a predefined ontology that maps the security incident to one or more courses of action selecting a response strategy that includes one or more of the courses of action and implementing the response strategy as an automated response
",5,H04_5,2,2.0,0.0,4.0
US10021127B2,451,Threat indicator analytics system ,2018-07-10,"['US9769204B2', 'US10412111B2', 'US10193929B2', 'EP2985974B1', 'CA2926579C', 'US9888024B2', 'US9332028B2', 'US10200384B1', 'US9654485B1', 'CA2968201C', 'US9609019B2', 'US9306964B2', 'US9800606B1', 'EP2828752B1', 'AU2018203374B2', 'EP3461103B1', 'US9712555B2', 'US10574685B2', 'US9392001B2', 'AU2016269514B2', 'US10873603B2', 'US20190260804A1', 'US10534906B1']","
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for analyzing threat intelligence information. One of the methods includes receiving by a threat information server, threat intelligence information from one or more intelligence feeds and generating one or more identified security threats, identifying a compromise by a management process orchestration server and retrieving information from the threat information server and identifying one or more actions to be performed, determining by an indicator analytics processor, a composite credibility based on the actions, and determining one or more components for profiling and determining indicators of compromise for each component, and communicating the indicators of compromise to the management process orchestration server.
",H04,2018,"
methods systems and apparatus including computer programs encoded on computer storage media for analyzing threat intelligence information one of the methods includes receiving by a threat information server threat intelligence information from one or more intelligence feeds and generating one or more identified security threats identifying a compromise by a management process orchestration server and retrieving information from the threat information server and identifying one or more actions to be performed determining by an indicator analytics processor a composite credibility based on the actions and determining one or more components for profiling and determining indicators of compromise for each component and communicating the indicators of compromise to the management process orchestration server
",5,H04_5,2,2.0,2.0,4.0
US10848517B1,457,Cybersecurity risk assessment on an industry basis ,2020-11-24,"['EP2529321B1', 'US10853443B2', 'JP6736657B2', 'US9503468B1', 'US10608983B2', 'JP6527590B2', 'US9762543B2', 'US9973519B2', 'US10628582B2', 'US10348771B2', 'US9853983B2', 'US10469514B2', 'US10205742B2', 'US8990933B1', 'US10805314B2', 'US9497216B2', 'US10375026B2', 'US10855798B2', 'US10193909B2']","
Determining an entity's cybersecurity risk and benchmarking that risk includes non-intrusively collecting one or more types of data associated with an entity. Embodiments further include calculating a security score for at least one of the one or more types of data based, at least in part, on processing of security information extracted from the at least one type of data, wherein the security information is indicative of a level of cybersecurity. Some embodiments also comprise assigning a weight to the calculated security score based on a correlation between the extracted security information and an overall security risk determined from analysis of one or more previously-breached entities in the same industry as the entity. Additional embodiments include calculating an overall cybersecurity risk score for the entity based, at least in part, on the calculated security score and the weight assigned to the calculated security score.
",H04,2020,"
determining an entity's cybersecurity risk and benchmarking that risk includes non-intrusively collecting one or more types of data associated with an entity embodiments further include calculating a security score for at least one of the one or more types of data based at least in part on processing of security information extracted from the at least one type of data wherein the security information is indicative of a level of cybersecurity some embodiments also comprise assigning a weight to the calculated security score based on a correlation between the extracted security information and an overall security risk determined from analysis of one or more previously-breached entities in the same industry as the entity additional embodiments include calculating an overall cybersecurity risk score for the entity based at least in part on the calculated security score and the weight assigned to the calculated security score
",5,H04_5,2,2.0,0.0,4.0
US10805343B2,460,Network security using artificial intelligence and high speed computing ,2020-10-13,"['US8402540B2', 'US9386034B2', 'US9954872B2', 'US7979368B2', 'US10728263B1', 'US9648029B2', 'US20160366160A1', 'US20190260770A1', 'US20190166147A1', 'US10003608B2']","
A method for securing a network by applying one or more artificial intelligence (AI) models in a computing environment with a computing speed selected as a function of a bandwidth of the network. The method includes receiving data at a node associated with the network, and identifying a suspected cyber adversarial event at the network. The method includes applying an AI model on the data in real-time to enrich the data with information that indicates behavior associated with an exploitation of the network, and analyzing the enriched data as part of a cyber workflow for an indication of a compromise associated with the exploitation of the network.
",G06,2020,"
a method for securing a network by applying one or more artificial intelligence (ai) models in a computing environment with a computing speed selected as a function of a bandwidth of the network the method includes receiving data at a node associated with the network and identifying a suspected cyber adversarial event at the network the method includes applying an ai model on the data in real-time to enrich the data with information that indicates behavior associated with an exploitation of the network and analyzing the enriched data as part of a cyber workflow for an indication of a compromise associated with the exploitation of the network
",5,G06_5,2,2.0,17.0,4.0
US7979368B2,461,Systems and methods for processing data flows ,2011-07-12,"['US9553888B2', 'JP2016136735A', 'US9762596B2', 'US10243975B2', 'US10095866B2', 'US9094372B2', 'US7222366B2', 'US10623434B1', 'US10785191B2', 'US10284574B1', 'US9148442B2', 'US9832213B2', 'US20160330224A1', 'EP2410452B1', 'US8997236B2', 'US10819726B2', 'US10505900B2', 'US10511614B1']","
A flow processing facility, which uses a set of artificial neurons for pattern recognition, such as a self-organizing map, in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems, including computer networks. Flow processing for switching, security, and other network applications, including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security, virtualization, and web connection security. A flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the IP-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps. Exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources. Intrusion Detection and Protection (IDP) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems, including computer networks.
",H04,2011,"
a flow processing facility which uses a set of artificial neurons for pattern recognition such as a self-organizing map in order to provide security and protection to a computer or computer system supports unified threat management based at least in part on patterns relevant to a variety of types of threats that relate to computer systems including computer networks flow processing for switching security and other network applications including a facility that processes a data flow to address patterns relevant to a variety of conditions are directed at internal network security virtualization and web connection security a flow processing facility for inspecting payloads of network traffic packets detects security threats and intrusions across accessible layers of the ip-stack by applying content matching and behavioral anomaly detection techniques based on regular expression matching and self-organizing maps exposing threats and intrusions within packet payload at or near real-time rates enhances network security from both external and internal sources while ensuring security policy is rigorously applied to data and system resources intrusion detection and protection (idp) is provided by a flow processing facility that processes a data flow to address patterns relevant to a variety of types of network and data integrity threats that relate to computer systems including computer networks
",5,H04_5,2,2.0,17.0,4.0
US10003608B2,462,Automated insider threat prevention ,2018-06-19,"['EP3127301B1', 'US20200296127A1', 'US9832227B2', 'US10193919B2', 'EP2756439B1', 'US9848016B2', 'US9979753B2', 'EP2678991B1', 'US10805265B2', 'US20200374299A1', 'US10673873B2', 'US9609015B2', 'US10003616B2', 'US20180285797A1', 'US10360062B2', 'US9152789B2', 'JP6106780B2', 'US10757134B1', 'US20180352004A1', 'US9467470B2', 'US10148697B2', 'US10462188B2']","
Techniques for automated insider threat prevention are disclosed. In some embodiments, a system, process, and/or computer program product for automated insider threat prevention includes monitoring network communications at a network device; detecting an anomalous activity based on the monitored network communications associated with a user based on a behavior profile for the user; and performing an action in response to the detected anomalous activity based on a policy.
",H04,2018,"
techniques for automated insider threat prevention are disclosed in some embodiments a system process and/or computer program product for automated insider threat prevention includes monitoring network communications at a network device; detecting an anomalous activity based on the monitored network communications associated with a user based on a behavior profile for the user; and performing an action in response to the detected anomalous activity based on a policy
",5,H04_5,2,2.0,4.0,4.0
US10749887B2,474,Assessing security risks of users in a computing network ,2020-08-18,"['US10848517B1', 'US10135836B2', 'US20180041537A1', 'US9906539B2', 'US20190364019A1', 'US20170149795A1', 'US10719625B2', 'US9813454B2', 'US10798116B2', 'US9635052B2', 'US10891371B2', 'US9553918B1', 'US10182031B2', 'US10623441B2', 'US9965937B2', 'US10257199B2', 'US10432656B2', 'US10778626B2']","
Various embodiments assess security risks of users in computing networks. In some embodiments, an interaction item is sent to an end user electronic device. When the end user interacts with the interaction item, the system collects feedback data that includes information about the user's interaction with the interaction item, as well as technical information about the electronic device. The feedback is compared to a plurality of security risk scoring metrics. Based on this comparison, a security risk score for the user with respect to a computing network.
",H04,2020,"
various embodiments assess security risks of users in computing networks in some embodiments an interaction item is sent to an end user electronic device when the end user interacts with the interaction item the system collects feedback data that includes information about the user's interaction with the interaction item as well as technical information about the electronic device the feedback is compared to a plurality of security risk scoring metrics based on this comparison a security risk score for the user with respect to a computing network
",5,H04_5,2,0.0,0.0,4.0
US9258321B2,488,Automated internet threat detection and mitigation system and associated methods ,2016-02-09,"['US8997236B2', 'US10681060B2', 'US20200228563A1', 'US10587640B2', 'US10412111B2', 'EP3262815B1', 'US10051010B2', 'US10762206B2', 'US10873603B2', 'US10728263B1', 'US20190260779A1', 'AU2018201008B2', 'US8793790B2', 'KR20180015640A', 'US20160182545A1', 'US10534906B1']","
A risk assessment and managed security system for network users provides security services for dealing with formidable cyber threats, malware creations and phishing techniques. Automated solutions in combination with human-driven solutions establish an always-alert positioning for incident anticipation, mitigation, discovery and response. A proactive, intelligence-driven and customized approach is taken to protect network users. Assessments of threats are made before and after a breach. Cyber threats are identified in advance of a resulting network problem, and automated analysis locates the threats and stops them from having an adverse effect. Humans can focus on the high-level view, instead of looking at every single potential problem area. Troubling patterns may be reviewed within the network environment to identify issues. Cyber analysis is conducted to provide a baseline over time via statistically proven, predictive models that anticipate vulnerabilities brought on by social-media usage, Web surfing and other behaviors that invite risk.
",H04,2016,"
a risk assessment and managed security system for network users provides security services for dealing with formidable cyber threats malware creations and phishing techniques automated solutions in combination with human-driven solutions establish an always-alert positioning for incident anticipation mitigation discovery and response a proactive intelligence-driven and customized approach is taken to protect network users assessments of threats are made before and after a breach cyber threats are identified in advance of a resulting network problem and automated analysis locates the threats and stops them from having an adverse effect humans can focus on the high-level view instead of looking at every single potential problem area troubling patterns may be reviewed within the network environment to identify issues cyber analysis is conducted to provide a baseline over time via statistically proven predictive models that anticipate vulnerabilities brought on by social-media usage web surfing and other behaviors that invite risk
",5,H04_5,2,2.0,19.0,4.0
US20160308898A1,496,"Systems and methods for tracking, analyzing and mitigating security threats in networks via a network traffic analysis platform ",2016-10-20,"['US10454894B2', 'US10728263B1', 'US9667651B2', 'US20180302421A1', 'AU2016234999B2', 'US10469514B2', 'US10721243B2', 'US9609015B2', 'US9152789B2', 'US9860265B2', 'US20200358808A1', 'US9516062B2', 'US9392001B2', 'US9967279B2', 'US9690932B2', 'US9015839B2', 'US10630706B2', 'US20190260795A1', 'US20200287925A1']","
A network traffic analysis method for tracking, analyzing, and mitigating security threats in a network includes receiving information based on monitoring traffic at a plurality of layers at one or more monitors deployed in the network utilizing deep packet inspection; receiving information based on monitoring the traffic at an endpoint of the network; analyzing the monitored traffic from the endpoint and the one or more monitors to determine network infrastructure and cyber security posture of the network infrastructure; and providing visualizations based on the network infrastructure and the cyber security posture, continuously to track threats, watch lateral movement in the network of the traffic, and determine security event history in the network.
",H04,2016,"
a network traffic analysis method for tracking analyzing and mitigating security threats in a network includes receiving information based on monitoring traffic at a plurality of layers at one or more monitors deployed in the network utilizing deep packet inspection; receiving information based on monitoring the traffic at an endpoint of the network; analyzing the monitored traffic from the endpoint and the one or more monitors to determine network infrastructure and cyber security posture of the network infrastructure; and providing visualizations based on the network infrastructure and the cyber security posture continuously to track threats watch lateral movement in the network of the traffic and determine security event history in the network
",5,H04_5,2,2.0,4.0,4.0
US10721243B2,497,"Apparatus, system and method for identifying and mitigating malicious network threats ",2020-07-21,"['US10587580B2', 'US9769204B2', 'US9860265B2', 'US10270744B2', 'US10601853B2', 'US9609019B2', 'US9369479B2', 'US10243984B2', 'US10728263B1', 'US10200384B1', 'EP2779574B1', 'US9848016B2', 'US10686804B2', 'US10469514B2', 'US10425383B2', 'US20200287925A1']","
Implementations of the present disclosure involve a system and/or method for identifying and mitigating malicious network threats. Network data associated is retrieved from various sources across a network and analyzed to identify a malicious network threat. When a threat is found, the system performs a mitigating action to neutralize the malicious network threat.
",H04,2020,"
implementations of the present disclosure involve a system and/or method for identifying and mitigating malicious network threats network data associated is retrieved from various sources across a network and analyzed to identify a malicious network threat when a threat is found the system performs a mitigating action to neutralize the malicious network threat
",5,H04_5,2,2.0,4.0,4.0
US10341363B1,525,Dynamically remote tuning of a malware content detection system ,2019-07-02,"['US10243975B2', 'US10104107B2', 'US10868818B1', 'US9178852B2', 'US10447708B2', 'US9838408B1', 'US10728263B1', 'US10015198B2', 'US10121000B1', 'JP6702983B2', 'US10043001B2', 'US10469514B2', 'US10417031B2', 'US9306964B2', 'US10467414B1', 'US9740859B2', 'US9571512B2', 'US10817602B2', 'US10230689B2', 'US20190260783A1', 'US20200287925A1', 'US10505956B1', 'US9846776B1', 'US10270798B2']","
According to one embodiment, an apparatus comprises a processor and memory. Communicatively coupled to the processor, the memory includes a detection module that, when executed, conducts an analysis of a received object to determine if the received object is associated with a malicious attack. The detection module is configurable, and thus, certain capabilities can be enabled, disabled or modified. The analysis is to be altered upon receipt of a configuration file that includes information to alter one or more rules controlling the analysis conducted by the detection module.
",H04,2019,"
according to one embodiment an apparatus comprises a processor and memory communicatively coupled to the processor the memory includes a detection module that when executed conducts an analysis of a received object to determine if the received object is associated with a malicious attack the detection module is configurable and thus certain capabilities can be enabled disabled or modified the analysis is to be altered upon receipt of a configuration file that includes information to alter one or more rules controlling the analysis conducted by the detection module
",5,H04_5,2,9.0,4.0,4.0
US9332028B2,527,"System, method, and apparatus for providing network security ",2016-05-03,"['US20190306181A1', 'US20170310703A1', 'US9769204B2', 'US10051010B2', 'US10484409B2', 'US10326778B2', 'US10021127B2', 'US20190260795A1', 'US9210182B2', 'US9800608B2', 'US10462188B2', 'US10673873B2']","
Methods, systems, and apparatuses for proactively protecting a computing network are disclosed. A proactive security mechanism is disclosed, among other things, with the ability to monitor a protected domain in real-time and safely identify inoculation procedures for responding to threats introduced to the protected domain via malware. The proactive security mechanism includes an Artificial Neural Network Interface (ANNI) configured to execute at least some features of the proactive security mechanism.
",H04,2016,"
methods systems and apparatuses for proactively protecting a computing network are disclosed a proactive security mechanism is disclosed among other things with the ability to monitor a protected domain in real-time and safely identify inoculation procedures for responding to threats introduced to the protected domain via malware the proactive security mechanism includes an artificial neural network interface (anni) configured to execute at least some features of the proactive security mechanism
",5,H04_5,2,2.0,36.0,4.0
US20180285797A1,529,Cognitive scoring of asset risk based on predictive propagation of security-related events ,2018-10-04,"['US20170310703A1', 'US10587640B2', 'US10243984B2', 'US10728263B1', 'US9848016B2', 'US9473522B1', 'US10652273B2', 'US20180302421A1', 'US10348771B2', 'US10462188B2', 'US10673873B2', 'US10848517B1', 'US10623442B2', 'US9740859B2', 'US10574685B2', 'US9338143B2', 'US9942250B2', 'US10003608B2', 'US20190260795A1']","
A method (and system) of scoring asset risk including modeling an interdependence of risks of a plurality of entities within a network by modeling the network as a graph connecting different entities, the different entities are selected from a group of a user, a device, a credential, a high-value asset, and an external server, the graph being defined as a set of vertices comprising the user, the device, the credential, the high-value asset, and the external server and a set of edges represented by an N-by-N adjacency matrix with each pair of the entities sharing a relationship and applying a Belief Propagation (BP) algorithm for solving the inference problem over the graph by inferring the risk from the entities own properties and surrounding entities with the shared relationship in the adjacency matrix, the Belief Propagation algorithm obtains risk information related to each entity of the plurality of entities.
",G06,2018,"
a method (and system) of scoring asset risk including modeling an interdependence of risks of a plurality of entities within a network by modeling the network as a graph connecting different entities the different entities are selected from a group of a user a device a credential a high-value asset and an external server the graph being defined as a set of vertices comprising the user the device the credential the high-value asset and the external server and a set of edges represented by an n-by-n adjacency matrix with each pair of the entities sharing a relationship and applying a belief propagation (bp) algorithm for solving the inference problem over the graph by inferring the risk from the entities own properties and surrounding entities with the shared relationship in the adjacency matrix the belief propagation algorithm obtains risk information related to each entity of the plurality of entities
",5,G06_5,2,2.0,36.0,4.0
US20170310703A1,565,Detecting triggering events for distributed denial of service attacks ,2017-10-26,"['US10367815B2', 'US9438631B2', 'US10482260B1', 'US9680849B2', 'US9832227B2', 'US9210182B2', 'US9866528B2', 'US10701036B2', 'US10333990B2', 'GB2506237B', 'US10341321B2', 'US20180041537A1', 'US9609015B2', 'US9152789B2', 'US9609019B2', 'JP6106780B2', 'US20200076837A1', 'US9467465B2', 'US9967271B2', 'US10515211B2', 'US9846776B1', 'US10230750B2', 'US10462188B2']","
An endpoint in an enterprise network is monitored, and when a potential trigger for a distributed denial of service (DDoS) attack is followed by an increase in network traffic from the endpoint to a high reputation network address, the endpoint is treated as a DDoS service bot and isolated from the network until remediation can be performed.
",H04,2017,"
an endpoint in an enterprise network is monitored and when a potential trigger for a distributed denial of service (ddos) attack is followed by an increase in network traffic from the endpoint to a high reputation network address the endpoint is treated as a ddos service bot and isolated from the network until remediation can be performed
",5,H04_5,2,9.0,29.0,4.0
US20160127417A1,605,"Systems, methods, and devices for improved cybersecurity ",2016-05-05,"['EP3127301B1', 'US10454935B2', 'EP3272100B1', 'JP6553524B2', 'US9848016B2', 'US10116687B2', 'US20190251260A1', 'US9762543B2', 'US10348771B2', 'US10038711B1', 'US8997236B2', 'US9894036B2', 'US10673873B2', 'KR20200007931A', 'US7478420B2', 'US20200012769A1', 'CA2846414C', 'US8763071B2', 'US20190327273A1', 'US9069954B2', 'US10230750B2', 'US20160057166A1', 'US9854057B2', 'US10264104B2']","
Embodiments relate to systems, devices, and computing-implemented methods for initiating a secure network communication system using a response to a risk assessment template and one or more computer knowledge bases to determine a network security policy, network security controls, hardware and software devices, and commands for the hardware and software devices. Embodiments also relate to systems, devices, and computing-implemented methods for monitoring the secure network communication system by monitoring communications from user devices, determining to hold communications based on the network security policy, notifying users of held communications, and allowing the users, via their user devices, to adjust the network security policy for overridable controls to authorize held communications.
",H04,2016,"
embodiments relate to systems devices and computing-implemented methods for initiating a secure network communication system using a response to a risk assessment template and one or more computer knowledge bases to determine a network security policy network security controls hardware and software devices and commands for the hardware and software devices embodiments also relate to systems devices and computing-implemented methods for monitoring the secure network communication system by monitoring communications from user devices determining to hold communications based on the network security policy notifying users of held communications and allowing the users via their user devices to adjust the network security policy for overridable controls to authorize held communications
",5,H04_5,2,9.0,25.0,4.0
US10397246B2,637,System and methods for malware detection using log based crowdsourcing analysis ,2019-08-27,"['US10587640B2', 'US10326790B2', 'US8650647B1', 'US10454894B2', 'US10762206B2', 'US10728263B1', 'US10735458B1', 'US20180124081A1', 'US9015846B2', 'US10348771B2', 'US8931099B2', 'US10805321B2', 'US10498756B2', 'US10721243B2']","
A crowdsourcing log analysis system and methods for protecting computers and networks from malware attacks by analyzing data log information obtained from a plurality of client network. The client networks are associated with a set of network entities representing a plurality of business units or customers. The system may further comprise a plurality of server machines, each operable to execute a security product associated with a security product vendor and log associated information of at the network entities into at least one log file. The log files may be uploaded onto a breach detection platform for analysis based upon crowdsourcing principles and is operable to generate a risk factor attribute for at least one suspect entity.
",H04,2019,"
a crowdsourcing log analysis system and methods for protecting computers and networks from malware attacks by analyzing data log information obtained from a plurality of client network the client networks are associated with a set of network entities representing a plurality of business units or customers the system may further comprise a plurality of server machines each operable to execute a security product associated with a security product vendor and log associated information of at the network entities into at least one log file the log files may be uploaded onto a breach detection platform for analysis based upon crowdsourcing principles and is operable to generate a risk factor attribute for at least one suspect entity
",5,H04_5,2,2.0,36.0,4.0
US10505900B2,652,Data leak protection in upper layer protocols ,2019-12-10,"['US9015090B2', 'US20200296127A1', 'US9674145B2', 'US10616258B2', 'US7984493B2', 'JP6080910B2', 'CA2787933C', 'US10230761B1', 'US10009386B2', 'US9762596B2', 'US7454499B2', 'US20190007430A1', 'US20190354709A1', 'US9762543B2', 'US9838426B2', 'KR20200007931A', 'US9009828B1', 'US10785191B2', 'US20180352004A1', 'RU2514138C1', 'US9917857B2', 'US20160366160A1', 'US10587636B1', 'US8516575B2']","
Methods and systems for Data Leak Prevention (DLP) in a private network are provided. According to one embodiment, a packet is received by a network security device. An upper layer protocol associated with the packet is identified. It is determined whether the identified upper layer protocol is one of multiple candidate upper layer protocols having a potential to carry sensitive information with reference to a database identifying the candidate upper layer protocols, corresponding commands of interest and a corresponding suspect field within each of the commands that is to be subjected to DLP scanning. Responsive to an affirmative determination and when a command represented by the packet is one of the corresponding commands of interest for the identified upper layer protocol, then a DLP scan is performed on content contained within the corresponding suspect field of the packet. Otherwise, performance of the DLP scan for the received packet is skipped.
",H04,2019,"
methods and systems for data leak prevention (dlp) in a private network are provided according to one embodiment a packet is received by a network security device an upper layer protocol associated with the packet is identified it is determined whether the identified upper layer protocol is one of multiple candidate upper layer protocols having a potential to carry sensitive information with reference to a database identifying the candidate upper layer protocols corresponding commands of interest and a corresponding suspect field within each of the commands that is to be subjected to dlp scanning responsive to an affirmative determination and when a command represented by the packet is one of the corresponding commands of interest for the identified upper layer protocol then a dlp scan is performed on content contained within the corresponding suspect field of the packet otherwise performance of the dlp scan for the received packet is skipped
",5,H04_5,2,2.0,4.0,4.0
US9292695B1,687,System and method for cyber security analysis and human behavior prediction ,2016-03-22,"['US10079859B2', 'US9276951B2', 'US10757127B2', 'US9973519B2', 'US8392997B2', 'US10313382B2', 'US20190260784A1', 'KR101691853B1', 'US9306962B1', 'US9043905B1', 'CN104040550B']","
A method for analyzing computer network security has been developed. The method first establishes multiple nodes, where each node represents an actor, an event, a condition, or an attribute related to the network security. Next, an estimate is created for each node that reflects the case of realizing the event, condition, or attribute of the node. Attack paths are identified that represent a linkage of nodes that reach a condition of compromise of network security. Next, edge probabilities are calculated for the attack paths. The edge probabilities are based on the estimates for each node along the attack path. Finally, an attack graph is generated that identifies the easiest conditions of compromise of network security and the attack paths to achieving those conditions.
",G06,2016,"
a method for analyzing computer network security has been developed the method first establishes multiple nodes where each node represents an actor an event a condition or an attribute related to the network security next an estimate is created for each node that reflects the case of realizing the event condition or attribute of the node attack paths are identified that represent a linkage of nodes that reach a condition of compromise of network security next edge probabilities are calculated for the attack paths the edge probabilities are based on the estimates for each node along the attack path finally an attack graph is generated that identifies the easiest conditions of compromise of network security and the attack paths to achieving those conditions
",5,G06_5,2,1.0,21.0,4.0
US20200137097A1,749,System and method for securing an enterprise computing environment ,2020-04-30,"['US10482260B1', 'US9832217B2', 'US10516682B2', 'US10516531B2', 'US10686809B2', 'US10270788B2', 'US20180278649A1', 'JP6476339B6', 'US10382459B2', 'US10063654B2', 'US10558800B2', 'AU2016204068B2', 'GB2563340B', 'US10348759B2', 'JP2019510304A', 'JP6687799B2', 'US10609059B2', 'JP6518844B1', 'US10719625B2', 'US10476907B2', 'US10073864B1', 'US10033766B2', 'US10742676B2']","
Methods and systems provided herein include a cyber intelligence system, a unified application firewall, and a cloud security fabric that has enterprise APIs for connecting to the information technology infrastructure of an enterprise, developer APIs 102 for enabling developers to access capabilities of the fabric and connector APIs by which the fabric may discover information about entities relevant to the information security of the enterprise (such as events involving users, applications, and data of the enterprise occurring on a plurality of cloud-enabled platforms, including PaaS/IaaS platforms), with various modules that comprise services deployed in the cloud security fabric, such as a selective encryption module, a policy creation and automation module, a content classification as a service module, and user and entity behavior analytics modules.
",H04,2020,"
methods and systems provided herein include a cyber intelligence system a unified application firewall and a cloud security fabric that has enterprise apis for connecting to the information technology infrastructure of an enterprise developer apis 102 for enabling developers to access capabilities of the fabric and connector apis by which the fabric may discover information about entities relevant to the information security of the enterprise (such as events involving users applications and data of the enterprise occurring on a plurality of cloud-enabled platforms including paas/iaas platforms) with various modules that comprise services deployed in the cloud security fabric such as a selective encryption module a policy creation and automation module a content classification as a service module and user and entity behavior analytics modules
",5,H04_5,2,9.0,2.0,4.0
US20170214708A1,767,Detecting security threats by combining deception mechanisms and data science ,2017-07-27,"['US10297128B2', 'US10122760B2', 'US20190251260A1', 'US9043868B2', 'US20160014078A1', 'US9742794B2', 'JP2017525055A', 'US10862902B2', 'RU2694022C2', 'EP3528458B1']","
Provided are systems, methods, and computer-program products for a network device, configured to use data science techniques to manage the deployment of deception mechanisms in a network, where the deception mechanisms can attract and detect threats to the network. In various implementations, the network device can receive network data. The network data can include data produced by an interaction with a deception mechanism. The deception mechanism can be part of the security of the network. An interaction can include a potential threat to the network. The network device can further be configured to analyze the network data using a data science engine, including identifying a pattern of network behavior. The network device can further generate an attack pattern that includes the behavior of the potential threat. The network device can further use the attack pattern to modify deception mechanisms on the network.
",H04,2017,"
provided are systems methods and computer-program products for a network device configured to use data science techniques to manage the deployment of deception mechanisms in a network where the deception mechanisms can attract and detect threats to the network in various implementations the network device can receive network data the network data can include data produced by an interaction with a deception mechanism the deception mechanism can be part of the security of the network an interaction can include a potential threat to the network the network device can further be configured to analyze the network data using a data science engine including identifying a pattern of network behavior the network device can further generate an attack pattern that includes the behavior of the potential threat the network device can further use the attack pattern to modify deception mechanisms on the network
",5,H04_5,2,11.0,25.0,4.0
JP2018508071A,789,Model protection level on-device determination based on malware detection in similar devices ,2018-03-22,"['US20190245894A1', 'CN104303538B', 'US10447708B2', 'US9311480B2', 'US20170134405A1', 'CN105830080B', 'US20180131624A1', 'US10097561B2', 'US9544798B1', 'US10341363B1', 'US8584242B2', 'US20180041537A1', 'US9779236B2', 'US9438613B1', 'US9740859B2', 'US9571512B2', 'US10783254B2', 'US9824216B1', 'US20190182247A1', 'US10742676B2']","
Methods, systems, and devices for identifying, classifying, modeling, and responding to mobile device behavior are light processes for monitoring and analyzing various conditions and device behavior for detecting instances of non-benign behavior Increased security or scrutiny to identify other instances of non-benign behavior and increased security so that the selected computing device can also increase its security / scrutiny level Informing the selected computing device about the level. For example, the computing device performs a first type of analysis operation (e.g., a light analysis operation) to determine if there is an increased security risk, and is detected by performing the first type of analysis operation A second type of analysis action (e.g., robust analysis action) in response to a determination that there is an increased security risk to determine whether there is an additional security risk that is different from the reported security risk May be configured to perform.
",G06,2018,"
methods systems and devices for identifying classifying modeling and responding to mobile device behavior are light processes for monitoring and analyzing various conditions and device behavior for detecting instances of non-benign behavior increased security or scrutiny to identify other instances of non-benign behavior and increased security so that the selected computing device can also increase its security / scrutiny level informing the selected computing device about the level for example the computing device performs a first type of analysis operation (eg a light analysis operation) to determine if there is an increased security risk and is detected by performing the first type of analysis operation a second type of analysis action (eg robust analysis action) in response to a determination that there is an increased security risk to determine whether there is an additional security risk that is different from the reported security risk may be configured to perform
",5,G06_5,2,5.0,21.0,4.0
US8695091B2,824,Systems and methods for enforcing policies for proxy website detection using advertising account ID ,2014-04-08,"['US20190245894A1', 'US10671694B2', 'US10164993B2', 'US10482260B1', 'US9900346B2', 'US10516682B2', 'US9710644B2', 'US10516531B2', 'US10673902B2', 'US10348771B2', 'US10382459B2', 'US20180041537A1', 'US10673873B2', 'US10848517B1', 'US10558800B2', 'US10218697B2', 'US20180041527A1', 'US10509911B2', 'US10657277B2', 'US10817602B2', 'US20200228490A1', 'US9942250B2', 'US10812531B2']","
In embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications.
",H04,2014,"
in embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications
",5,H04_5,2,9.0,29.0,4.0
US9369476B2,842,System for detection of mobile applications network behavior-netwise ,2016-06-14,"['AU2017200969B2', 'US20190245894A1', 'US10454955B2', 'US9369479B2', 'US9178852B2', 'US9462009B1', 'US9740859B2', 'US10397246B2', 'KR101837923B1', 'US10348771B2', 'US20190363893A1', 'US9609456B2', 'US9838407B1', 'US10721243B2', 'US10609059B2']","
The invention is a system for protecting mobile devices in cellular networks from unauthorized harmful applications and for protecting cellular network infrastructure from targeted or benign overloads. The system comprises mobile cellular devices and a cellular network infrastructure. Some of the mobile devices comprise an application manager, which is adapted to manage the aggregation and learning processes, and a detection manager, which is adapted to analyze network behavior and detect deviations. The application manager and the detection manager are adapted to monitor the applications running on a device, learn the patterns of mobile applications network behavior and detect meaningful deviations from the application's observed normal behavior. The cellular network infrastructure comprises a services module, a logic module, and a database access unit adapted for aggregation and analysis of an application's network traffic patterns for numerous users.
",G06,2016,"
the invention is a system for protecting mobile devices in cellular networks from unauthorized harmful applications and for protecting cellular network infrastructure from targeted or benign overloads the system comprises mobile cellular devices and a cellular network infrastructure some of the mobile devices comprise an application manager which is adapted to manage the aggregation and learning processes and a detection manager which is adapted to analyze network behavior and detect deviations the application manager and the detection manager are adapted to monitor the applications running on a device learn the patterns of mobile applications network behavior and detect meaningful deviations from the application's observed normal behavior the cellular network infrastructure comprises a services module a logic module and a database access unit adapted for aggregation and analysis of an application's network traffic patterns for numerous users
",5,G06_5,2,5.0,87.0,4.0
US10367815B2,862,Protecting sensitive information from a secure data store ,2019-07-30,"['US9294500B2', 'US20190245894A1', 'US9344431B2', 'US10482260B1', 'US10447708B2', 'US10402546B1', 'US10516531B2', 'US9235704B2', 'US9860263B2', 'US9589129B2', 'US9740852B2', 'US10673902B2', 'US20190245829A1', 'US10382459B2', 'US20180041537A1', 'US20160373486A1', 'US10558800B2', 'US20200012769A1', 'US9740859B2', 'US9753796B2', 'US9467465B2', 'EP2609538B1', 'US9344457B2', 'US10742676B2', 'US10462188B2']","
In embodiments of the present invention improved capabilities are described for the steps of receiving an indication that a computer facility has access to a secure data store, causing a security parameter of a storage medium local to the computer facility to be assessed, determining if the security parameter is compliant with a security policy relating to computer access of the remote secure data store, and in response to an indication that the security parameter is non-compliant, cause the computer facility to implement an action to prevent further dissemination of information, to disable access to network communications, to implement an action to prevent further dissemination of information, and the like.
",H04,2019,"
in embodiments of the present invention improved capabilities are described for the steps of receiving an indication that a computer facility has access to a secure data store causing a security parameter of a storage medium local to the computer facility to be assessed determining if the security parameter is compliant with a security policy relating to computer access of the remote secure data store and in response to an indication that the security parameter is non-compliant cause the computer facility to implement an action to prevent further dissemination of information to disable access to network communications to implement an action to prevent further dissemination of information and the like
",5,H04_5,2,9.0,29.0,4.0
US9985984B1,875,Dynamic defense and network randomization for computer systems ,2018-05-29,"['US20150381646A1', 'US20170195197A1', 'US10270744B2', 'US9369479B2', 'US10148685B2', 'US20170093910A1', 'US10735458B1', 'US20160105462A1', 'US20190124101A1', 'US10467411B1', 'US9832213B2', 'US8528088B2', 'US20200304470A1', 'EP3528458B1', 'US10341363B1', 'US10902117B1', 'EP3079336B1']","
The various technologies presented herein relate to determining a network attack is taking place, and further to adjust one or more network parameters such that the network becomes dynamically configured. A plurality of machine learning algorithms are configured to recognize an active attack pattern. Notification of the attack can be generated, and knowledge gained from the detected attack pattern can be utilized to improve the knowledge of the algorithms to detect a subsequent attack vector(s). Further, network settings and application communications can be dynamically randomized, wherein artificial diversity converts control systems into moving targets that help mitigate the early reconnaissance stages of an attack. An attack(s) based upon a known static address(es) of a critical infrastructure network device(s) can be mitigated by the dynamic randomization. Network parameters that can be randomized include IP addresses, application port numbers, paths data packets navigate through the network, application randomization, etc.
",H04,2018,"
the various technologies presented herein relate to determining a network attack is taking place and further to adjust one or more network parameters such that the network becomes dynamically configured a plurality of machine learning algorithms are configured to recognize an active attack pattern notification of the attack can be generated and knowledge gained from the detected attack pattern can be utilized to improve the knowledge of the algorithms to detect a subsequent attack vector(s) further network settings and application communications can be dynamically randomized wherein artificial diversity converts control systems into moving targets that help mitigate the early reconnaissance stages of an attack an attack(s) based upon a known static address(es) of a critical infrastructure network device(s) can be mitigated by the dynamic randomization network parameters that can be randomized include ip addresses application port numbers paths data packets navigate through the network application randomization etc
",5,H04_5,2,2.0,4.0,4.0
US20190132214A1,902,Impact analyzer for a computer network ,2019-05-02,"['US10454955B2', 'US10511619B2', 'US9742805B2', 'EP3528458B1', 'US20180219888A1', 'US9819561B2', 'US10257199B2', 'US20190020689A1', 'US10425441B2', 'US8973096B1', 'US10313382B2', 'US9602530B2', 'US20200396119A1', 'US10771432B2', 'US20200287925A1', 'US9571523B2', 'KR20180095798A', 'US10637880B1', 'US9531738B2', 'US20160308898A1', 'US10476762B2', 'US9503472B2']","
Network management technology as disclosed herein performs an impact analysis of actual or hypothetical network commands, and presents the impact analysis results to facilitate the user's understanding of the predicted consequences of the actual or hypothetical commands on network operations, management, or security.
",H04,2019,"
network management technology as disclosed herein performs an impact analysis of actual or hypothetical network commands and presents the impact analysis results to facilitate the user's understanding of the predicted consequences of the actual or hypothetical commands on network operations management or security
",5,H04_5,2,0.0,0.0,4.0
US10205637B2,903,Impact analyzer for a computer network ,2019-02-12,"['US10454955B2', 'US10511619B2', 'US9742805B2', 'US20200403971A1', 'US9430646B1', 'US10797976B2', 'EP3528458B1', 'US10257199B2', 'US20190020689A1', 'US10425441B2', 'US10205735B2', 'US8973096B1', 'US9602530B2', 'US20200396119A1', 'US20200287925A1', 'US9571523B2', 'KR20180095798A', 'US10637880B1', 'US9531738B2', 'US20160308898A1', 'US10476762B2', 'US9503472B2']","
Network management technology as disclosed herein performs an impact analysis of actual or hypothetical network commands, and presents the impact analysis results to facilitate the user's understanding of the predicted consequences of the actual or hypothetical commands on network operations, management, or security.
",H04,2019,"
network management technology as disclosed herein performs an impact analysis of actual or hypothetical network commands and presents the impact analysis results to facilitate the user's understanding of the predicted consequences of the actual or hypothetical commands on network operations management or security
",5,H04_5,2,0.0,0.0,4.0
US10044751B2,924,Using recurrent neural networks to defeat DNS denial of service attacks ,2018-08-07,"['US10587640B2', 'JP6139656B2', 'US20170063917A1', 'US10728263B1', 'US20190297096A1', 'US10270744B2', 'US20160182542A1', 'US10200384B1', 'US10721243B2', 'CN106576099B', 'US9369479B2', 'US9954872B2', 'US9690933B1', 'EP2774039B1', 'US10326778B2', 'US8966625B1', 'US10637880B1', 'EP3272096B1', 'EP3528462A1']","
A system for mitigating network attacks is provided. The system includes a protected network including a plurality of devices. The system further includes one or more attack mitigation devices communicatively coupled to the protected network. The attack mitigation devices are configured and operable to employ a recurrent neural network (RNN) to obtain probability information related to a request stream. The request stream may include a plurality of at least one of: HTTP, RTSP and/or DNS messages. The attack mitigation devices are further configured to analyze the obtained probability information to detect one or more atypical requests in the request stream. The attack mitigation services are also configured and operable to perform, in response to detecting one or more atypical requests, mitigation actions on the one or more atypical requests in order to block an attack.
",H04,2018,"
a system for mitigating network attacks is provided the system includes a protected network including a plurality of devices the system further includes one or more attack mitigation devices communicatively coupled to the protected network the attack mitigation devices are configured and operable to employ a recurrent neural network (rnn) to obtain probability information related to a request stream the request stream may include a plurality of at least one of: http rtsp and/or dns messages the attack mitigation devices are further configured to analyze the obtained probability information to detect one or more atypical requests in the request stream the attack mitigation services are also configured and operable to perform in response to detecting one or more atypical requests mitigation actions on the one or more atypical requests in order to block an attack
",5,H04_5,2,2.0,4.0,4.0
US10803005B2,926,Systems and methods for enforcing policies in the discovery of anonymizing proxy communications ,2020-10-13,"['US20190245894A1', 'US10671694B2', 'US10164993B2', 'US10482260B1', 'US9900346B2', 'US10516682B2', 'US10516531B2', 'US9762543B2', 'US10628582B2', 'US10348771B2', 'US10382459B2', 'US20180041537A1', 'US10673873B2', 'US10848517B1', 'US10558800B2', 'US9794276B2', 'US10218697B2', 'US9753796B2', 'US10509911B2', 'US10657277B2', 'US20200228490A1', 'US9942250B2', 'US20180218167A1', 'US10812531B2']","
In embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications.
",G06,2020,"
in embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications
",5,G06_5,2,9.0,29.0,4.0
US10469514B2,931,Collaborative and adaptive threat intelligence for computer security ,2019-11-05,"['US10257221B2', 'US9495188B1', 'US9838408B1', 'US9705922B2', 'US10853443B2', 'US10313475B2', 'US10666686B1', 'US9848016B2', 'US9667651B2', 'US20200228563A1', 'US10270744B2', 'US9917864B2', 'US10608983B2', 'US20200099700A1', 'US10454953B1', 'US9369479B2', 'US20180352004A1', 'US10757134B1', 'US10425383B2', 'US9392001B2', 'US10230689B2', 'US10812497B2', 'US10637880B1', 'US20200177548A1']","
Collaborative and adaptive threat intelligence. Data collected on a first customer network is received. One or more local models are trained with at least the received data, where the one or more local models are related to security. An amount of data to transmit to a centralized controller is determined based at least on a result of the training one or more local models and the determined amount of data is transmitted to the centralized controller. Result data is received from the centralized controller that is a result of one or more global models trained on the centralized controller using data collected on multiple customer networks including the first customer network. The one or more local models are adjusted using the received result data and the one or more adjusted local models are trained.
",H04,2019,"
collaborative and adaptive threat intelligence data collected on a first customer network is received one or more local models are trained with at least the received data where the one or more local models are related to security an amount of data to transmit to a centralized controller is determined based at least on a result of the training one or more local models and the determined amount of data is transmitted to the centralized controller result data is received from the centralized controller that is a result of one or more global models trained on the centralized controller using data collected on multiple customer networks including the first customer network the one or more local models are adjusted using the received result data and the one or more adjusted local models are trained
",5,H04_5,2,2.0,4.0,4.0
US20200287925A1,932,Entity Group Behavior Profiling ,2020-09-10,"['US10257221B2', 'US10447708B2', 'US9838408B1', 'US9495188B1', 'US9705922B2', 'US10853443B2', 'US10313475B2', 'US10666686B1', 'US9848016B2', 'US9667651B2', 'US20200228563A1', 'US10270744B2', 'US9917864B2', 'US10608983B2', 'US10454953B1', 'US9369479B2', 'US20180352004A1', 'US10757134B1', 'US10425383B2', 'US9392001B2', 'US10230689B2', 'US10637880B1', 'US9838407B1', 'US20200177548A1']","
Entity group behavior profiling. An entity group is created that includes multiple entities, where each entity represents one of a user, a machine, and a service. A behavior profile is created for each one of the entities of the entity group. The behavior of each of one of the entities of the entity group is monitored to detect behavior change. An indicator of compromise is detected based on multiple ones of the entities experiencing substantially a same behavior change.
",H04,2020,"
entity group behavior profiling an entity group is created that includes multiple entities where each entity represents one of a user a machine and a service a behavior profile is created for each one of the entities of the entity group the behavior of each of one of the entities of the entity group is monitored to detect behavior change an indicator of compromise is detected based on multiple ones of the entities experiencing substantially a same behavior change
",5,H04_5,2,2.0,4.0,4.0
US9774616B2,1002,Threat evaluation system and method ,2017-09-26,"['US9467465B2', 'JP6086968B2', 'US20160057166A1', 'US20200012769A1', 'EP2608481B1', 'US10230750B2', 'US20180285797A1', 'JP2015222961A', 'US10616269B2', 'US10348771B2', 'US20190245829A1', 'US9503470B2', 'US8997236B2', 'US9473522B1', 'US9516062B2', 'US10673873B2']","
Systems and methods of evaluation of threats to elements of a client computer application having a cyber reference library, an opponent catalog and a network model. The systems and methods produce a set of analyst reports evaluating the threats to the client computer application. One embodiment of the system for evaluating at least one threat to a client computer application has a threat evaluation engine which performs a plurality of algorithms, where each algorithm of has implementation specific needs for input into the individual algorithm, a threat evaluation results data store, a statistical analysis engine, and an analysis results data store.
",H04,2017,"
systems and methods of evaluation of threats to elements of a client computer application having a cyber reference library an opponent catalog and a network model the systems and methods produce a set of analyst reports evaluating the threats to the client computer application one embodiment of the system for evaluating at least one threat to a client computer application has a threat evaluation engine which performs a plurality of algorithms where each algorithm of has implementation specific needs for input into the individual algorithm a threat evaluation results data store a statistical analysis engine and an analysis results data store
",5,H04_5,2,2.0,25.0,4.0
US10454955B2,1013,Real-time contextual monitoring intrusion detection and prevention ,2019-10-22,"['US20170310703A1', 'US10445502B1', 'US10728263B1', 'AU2018203393B2', 'US10516531B2', 'US9112896B2', 'US10051010B2', 'US10038702B2', 'US10609046B2', 'EP3014813B1', 'US10382459B2', 'US9392007B2', 'US10375101B2', 'US10558800B2', 'CA2968201C', 'US9306964B2', 'US9740859B2', 'US10044746B2', 'US9319425B2', 'EP3528458A1', 'US10817602B2', 'US9942250B2', 'US10742676B2', 'US10462188B2']","
A configuration is received for an agent associated with an application to monitor application transactions. The agent monitors incoming and outgoing application transactions using the agent and transmits monitored transaction data to a monitoring server for anomalous transaction detection. The agent receives instructions from the monitoring server to perform an action based on the transmitted monitored transaction data and reports the status of the performed action to the monitoring server.
",H04,2019,"
a configuration is received for an agent associated with an application to monitor application transactions the agent monitors incoming and outgoing application transactions using the agent and transmits monitored transaction data to a monitoring server for anomalous transaction detection the agent receives instructions from the monitoring server to perform an action based on the transmitted monitored transaction data and reports the status of the performed action to the monitoring server
",5,H04_5,2,9.0,0.0,4.0
US20170277873A1,1020,Characterizing user behavior via intelligent identity analytics ,2017-09-28,"['US9338161B2', 'US8732472B2', 'US9609010B2', 'US9027134B2', 'US20190260786A1', 'US10735454B2', 'JP2018530066A', 'US10848517B1', 'EP3262815B1', 'US8793790B2', 'US9336388B2', 'US10681060B2', 'US10645096B2', 'US10339306B1', 'JP2020510926A', 'US10375026B2', 'US20170295199A1', 'JP6396623B2', 'KR101621128B1', 'US9311476B2', 'US10033766B2', 'US10742676B2']","
Methods, devices, and systems are provided to rapidly detect and prevent cyber-attacks that are enabled by either misuse of identity credentials or weaknesses within the identity credential lifecycle. An Identity Analytics and Intelligence Engine provides an automated process for the collection, exchange, analysis, correlation, and reporting of identity credential lifecycle data. The Identity Analytics and Intelligence Engine may be implemented as a Software as a Service (SaaS) capability. The Identity Analytics and Intelligence Engine applies Semantic Web concepts/technologies and graph databases to automatically capture the identity credential lifecycle data along with the associated data exchanges within one or more Trust Frameworks.
",G06,2017,"
methods devices and systems are provided to rapidly detect and prevent cyber-attacks that are enabled by either misuse of identity credentials or weaknesses within the identity credential lifecycle an identity analytics and intelligence engine provides an automated process for the collection exchange analysis correlation and reporting of identity credential lifecycle data the identity analytics and intelligence engine may be implemented as a software as a service (saas) capability the identity analytics and intelligence engine applies semantic web concepts/technologies and graph databases to automatically capture the identity credential lifecycle data along with the associated data exchanges within one or more trust frameworks
",5,G06_5,2,11.0,21.0,4.0
US10536478B2,1034,Techniques for discovering and managing security of applications ,2020-01-14,"['US10129282B2', 'US10834075B2', 'US20170012983A1', 'US10009335B2', 'EP3198825B1', 'US9571506B2', 'US9923905B2', 'US10541988B2', 'US9668137B2', 'US9038015B1', 'US20190014153A1', 'US10503911B2', 'US9449182B1', 'US9935959B2', 'US9495533B2', 'US10129109B2', 'JP2016181265A', 'US9912609B2', 'JP6661620B2', 'EP3365824B1', 'US9667661B2', 'JP6518844B1', 'US10719625B2', 'JP6364496B2', 'EP3183666B1']","
Techniques for discovery and management of applications in a computing environment of an organization are disclosed. A security management system discovers use of applications within a computing environment to manage access to applications for minimizing security threats and risks in a computing environment of the organization. The security management system can obtain network data about network traffic to identify unique applications. The security management system can perform analysis and correlation, including use of one or more data sources, to determine information about an application. The system can compute a measure of security for an application (an application risk score) and a user (a user risk score). The score may be analyzed to determine a threat of security posed by the application based on use of the application. The security system can perform one or more instructions to configure access permitted by an application, whether access is denied or restricted.
",H04,2020,"
techniques for discovery and management of applications in a computing environment of an organization are disclosed a security management system discovers use of applications within a computing environment to manage access to applications for minimizing security threats and risks in a computing environment of the organization the security management system can obtain network data about network traffic to identify unique applications the security management system can perform analysis and correlation including use of one or more data sources to determine information about an application the system can compute a measure of security for an application (an application risk score) and a user (a user risk score) the score may be analyzed to determine a threat of security posed by the application based on use of the application the security system can perform one or more instructions to configure access permitted by an application whether access is denied or restricted
",5,H04_5,2,8.0,21.0,4.0
US9813454B2,1035,Cybersecurity training system with automated application of branded content ,2017-11-07,"['US10176503B2', 'US10565161B2', 'US9973585B2', 'US10805354B2', 'US10453082B2', 'US9898769B2', 'US10445526B2', 'US9230257B2', 'US10169789B2', 'US20170287034A1', 'US10735432B2', 'US20180089764A1', 'US10032172B2', 'US20180048634A1', 'US10305925B2', 'US10152199B2', 'US9892441B2', 'US10289867B2', 'US20170048170A1', 'US9990635B2', 'US9892442B2', 'US10719625B2', 'US20180212904A1', 'US20190045058A1']","
A cybersecurity training system uses lures and training actions to help train a user of an electronic device to recognize and act appropriately in situations that could compromise electronic device security. The system includes a library of cybersecurity training actions and a library of brand items. The system retrieves a template for a cybersecurity training action from the first library, automatically modifies the retrieved template to include a brand or branded content from the second library, and causes the cybersecurity training action according to the modified template instantiated with the branded content to be sent to the user's electronic device.
",H04,2017,"
a cybersecurity training system uses lures and training actions to help train a user of an electronic device to recognize and act appropriately in situations that could compromise electronic device security the system includes a library of cybersecurity training actions and a library of brand items the system retrieves a template for a cybersecurity training action from the first library automatically modifies the retrieved template to include a brand or branded content from the second library and causes the cybersecurity training action according to the modified template instantiated with the branded content to be sent to the user's electronic device
",5,H04_5,2,0.0,29.0,4.0
US10778703B2,1071,Method and system for generating an interactive kill chain view for training a machine learning model for identifying threats ,2020-09-15,"['US10177998B2', 'US10496816B2', 'US10121000B1', 'US10678805B2', 'US10735456B2', 'US20200250184A1', 'US10693743B2', 'US10270788B2', 'US10305922B2', 'US10200390B2', 'US9582585B2', 'US10374883B2', 'US20190260770A1', 'US10599308B2', 'CA2933423C', 'EP3262815B1', 'US20190372868A1', 'US9225730B1', 'JP2020039137A', 'US10348583B2', 'JP6518844B1', 'EP3152869B1', 'US10698777B2', 'US10686804B2', 'US20200026634A1']","
A security platform employs a variety techniques and mechanisms to detect security related anomalies and threats in a computer network environment. The security platform is big data driven and employs machine learning to perform security analytics. The security platform performs user/entity behavioral analytics (UEBA) to detect the security related anomalies and threats, regardless of whether such anomalies/threats were previously known. The security platform can include both real-time and batch paths/modes for detecting anomalies and threats. By visually presenting analytical results scored with risk ratings and supporting evidence, the security platform enables network security administrators to respond to a detected anomaly or threat, and to take action promptly.
",G06,2020,"
a security platform employs a variety techniques and mechanisms to detect security related anomalies and threats in a computer network environment the security platform is big data driven and employs machine learning to perform security analytics the security platform performs user/entity behavioral analytics (ueba) to detect the security related anomalies and threats regardless of whether such anomalies/threats were previously known the security platform can include both real-time and batch paths/modes for detecting anomalies and threats by visually presenting analytical results scored with risk ratings and supporting evidence the security platform enables network security administrators to respond to a detected anomaly or threat and to take action promptly
",5,G06_5,2,8.0,2.0,4.0
US10496816B2,1072,Supplementary activity monitoring of a selected subset of network entities ,2019-12-03,"['US10331720B2', 'US20200287807A1', 'US10866991B1', 'US10719525B2', 'US10678805B2', 'US10693743B2', 'US10713314B2', 'US10673870B2', 'US10911470B2', 'US20170139996A1', 'US10700950B2', 'US20170142143A1', 'US9202249B1', 'US20190372868A1', 'US10848510B2', 'US10855712B2', 'US10609059B2', 'US10387448B2', 'US20190163350A1', 'US10855793B2', 'US10778712B2', 'US10606857B2', 'US20200014593A1', 'US10592694B2', 'US20200026634A1']","
Systems and methods are disclosed for associating an entity with a risk score that may indicate a security threat associated with the entity's activity. An exemplary method may involve monitoring the activity of a subset of the set of entities (e.g., entities included in a watch list) by executing a search query against events indicating the activity of the subset of entities. The events may be associated with timestamps and may include machine data. Executing the search query may produce search results that pertain to activity of a particular entity from the subset. The search results may be evaluated based on a triggering condition corresponding to the statistical baseline. When the triggering condition is met, a risk score for the particular entity may be updated. The updated risk score may be displayed to a user via a graphical user interface (GUI).
",G06,2019,"
systems and methods are disclosed for associating an entity with a risk score that may indicate a security threat associated with the entity's activity an exemplary method may involve monitoring the activity of a subset of the set of entities (eg entities included in a watch list) by executing a search query against events indicating the activity of the subset of entities the events may be associated with timestamps and may include machine data executing the search query may produce search results that pertain to activity of a particular entity from the subset the search results may be evaluated based on a triggering condition corresponding to the statistical baseline when the triggering condition is met a risk score for the particular entity may be updated the updated risk score may be displayed to a user via a graphical user interface (gui)
",5,G06_5,2,8.0,2.0,4.0
US10693743B2,1075,Displaying interactive topology maps of cloud computing resources ,2020-06-23,"['US20200336390A1', 'US10372722B2', 'US10305758B1', 'US10866991B1', 'US10515469B2', 'US10193775B2', 'US10205643B2', 'US20190250799A1', 'US10673870B2', 'US10185740B2', 'US20180024901A1', 'US20200364279A1', 'US20200125534A1', 'US10700950B2', 'US10547695B2', 'US20190372868A1', 'US20150026167A1', 'US10855712B2', 'US10243818B2', 'US10209956B2', 'US10417108B2', 'US20200242139A1', 'US20180081935A1', 'US10592694B2', 'US20190377463A1']","
Techniques and mechanisms are disclosed that enable collection of various types of data from cloud computing services and the generation of various dashboards and visualizations to view information about collections of cloud computing resources. A user can configure collection of data from one or more cloud computing services and view visualizations using an application platform referred to herein as a cloud computing management application. A cloud computing management application further may be configured to generate and cause display of interactive topology map representations of cloud computing resources based on the collected data, where an interactive topology map enables users to view an intuitive visualization of a collection of computing resources, efficiently cause performance of actions with respect to various resources displayed in the topology map, and analyze the collection of resources in ways that are not possible using conventional cloud computing service management consoles.
",H04,2020,"
techniques and mechanisms are disclosed that enable collection of various types of data from cloud computing services and the generation of various dashboards and visualizations to view information about collections of cloud computing resources a user can configure collection of data from one or more cloud computing services and view visualizations using an application platform referred to herein as a cloud computing management application a cloud computing management application further may be configured to generate and cause display of interactive topology map representations of cloud computing resources based on the collected data where an interactive topology map enables users to view an intuitive visualization of a collection of computing resources efficiently cause performance of actions with respect to various resources displayed in the topology map and analyze the collection of resources in ways that are not possible using conventional cloud computing service management consoles
",5,H04_5,2,8.0,2.0,4.0
US10305922B2,1076,Detecting security threats in a local network ,2019-05-28,"['US20200356666A1', 'US10356106B2', 'CA2926579C', 'US9888024B2', 'US10009366B2', 'US10911470B2', 'US10721243B2', 'US10469514B2', 'JP6585131B2', 'US9306964B2', 'US9503469B2', 'US20200358808A1', 'US10587646B2', 'US20190173904A1', 'US10609059B2', 'US9832219B2', 'US9516062B2', 'JP2020039137A', 'US10326672B2', 'US10333971B2', 'US10148685B2', 'US10476905B2', 'US9838407B1']","
Disclosed is a system for detecting security threats in a local network. A security analytics system collects data about entities in the local network. The security analytics system identifies the entities in the raw data and determines a set of properties about each of the identified entities. The entity properties contain information about the entity and can be temporary or permanent properties about the entity. The security analytics system determines relationships between the identified entities and can be determined based on the entity properties for the identified properties. An entity graph is generated that describes the entity relationships, wherein the nodes of the entity graph represent entities and the edges of the entity graph represent entity relationships. The security analytics system provides a user interface to a user that contains the entity graph and the relationships described therein.
",H04,2019,"
disclosed is a system for detecting security threats in a local network a security analytics system collects data about entities in the local network the security analytics system identifies the entities in the raw data and determines a set of properties about each of the identified entities the entity properties contain information about the entity and can be temporary or permanent properties about the entity the security analytics system determines relationships between the identified entities and can be determined based on the entity properties for the identified properties an entity graph is generated that describes the entity relationships wherein the nodes of the entity graph represent entities and the edges of the entity graph represent entity relationships the security analytics system provides a user interface to a user that contains the entity graph and the relationships described therein
",5,H04_5,2,2.0,4.0,4.0
US10616249B2,1107,Adaptive internet of things edge device security ,2020-04-07,"['US20170310703A1', 'US20190245894A1', 'US9438631B2', 'US10482260B1', 'US20180124064A1', 'US9680849B2', 'US20170289191A1', 'US10652273B2', 'US10701036B2', 'US10095866B2', 'US10348771B2', 'US10681078B2', 'US20190014154A1', 'US9483644B1', 'US10225280B2', 'US10657277B2', 'US10872151B1', 'US10192052B1', 'US10230745B2']","
In an example, there is disclosed an apparatus, including: a network interface to communicatively couple to an internet of thing (IoT) having at least one edge device; a gateway engine to provide gateway services to one or more edge devices via the network interface; and one or more logic devices, including at least one hardware logic device, providing an adaptive security engine to: compile a periodic device interaction summary (DIS) for the edge device; send the DIS to a cloud service; receive from the cloud service a DIS signature for the edge device; determine that one or more interactions from the edge device are suspicious; and act on the determining.
",H04,2020,"
in an example there is disclosed an apparatus including: a network interface to communicatively couple to an internet of thing (iot) having at least one edge device; a gateway engine to provide gateway services to one or more edge devices via the network interface; and one or more logic devices including at least one hardware logic device providing an adaptive security engine to: compile a periodic device interaction summary (dis) for the edge device; send the dis to a cloud service; receive from the cloud service a dis signature for the edge device; determine that one or more interactions from the edge device are suspicious; and act on the determining
",5,H04_5,2,9.0,29.0,4.0
US20170142143A1,1251,Identifying notable events based on execution of correlation searches ,2017-05-18,"['US10139997B2', 'US9940373B2', 'US10606856B2', 'US10382472B2', 'EP3262538B1', 'US10599723B2', 'US10678805B2', 'US10205643B2', 'US10713314B2', 'US20190163675A1', 'US10761687B2', 'US9582585B2', 'US20180157719A1', 'US10250628B2', 'EP3107026B1', 'US10848510B2', 'US10587633B2', 'US10185821B2', 'US20180024702A1', 'US20200242139A1', 'US20180081935A1', 'US9633106B1', 'US10469344B2', 'US10592694B2', 'US20200026634A1']","
Systems and methods are provided for identifying network addresses and/or IDs of a deduplicated list among network data, machine data, and/or events derived from network data and/or machine data, and for identifying notable events by searching for the presence of network addresses and/or network IDs that are deduplicated across lists received from multiple external sources. One method includes receiving a plurality of lists of network locations, wherein each list is received from over a network, wherein each of the network locations includes a domain name or an IP address, and wherein at least two of the plurality of lists each include a same network location; aggregating the plurality of lists of network locations into a deduplicated list of unique network locations; and searching network data or machine data for a network location included in the deduplicated list of unique network locations.
",H04,2017,"
systems and methods are provided for identifying network addresses and/or ids of a deduplicated list among network data machine data and/or events derived from network data and/or machine data and for identifying notable events by searching for the presence of network addresses and/or network ids that are deduplicated across lists received from multiple external sources one method includes receiving a plurality of lists of network locations wherein each list is received from over a network wherein each of the network locations includes a domain name or an ip address and wherein at least two of the plurality of lists each include a same network location; aggregating the plurality of lists of network locations into a deduplicated list of unique network locations; and searching network data or machine data for a network location included in the deduplicated list of unique network locations
",5,H04_5,2,8.0,2.0,4.0
US20160330219A1,1258,Method and device for managing security in a computer network ,2016-11-10,"['EP2498198B1', 'US7325252B2', 'US9077746B2', 'EP2566130B1', 'US8544099B2', 'US9672355B2', 'US10798116B2', 'US8091065B2', 'US8478708B1', 'US9930061B2', 'US6907430B2', 'US9965937B2', 'US10230750B2', 'US9774616B2', 'EP3528458B1']","
Method and device for managing security in a computer network include algorithms of iterative intelligence growth, iterative evolution, and evolution pathways; sub-algorithms of information type identifier, conspiracy detection, media scanner, privilege isolation analysis, user risk management and foreign entities management; and modules of security behavior, creativity, artificial threat, automated growth guidance, response/generic parser, security review module and monitoring interaction system. Applications include malware predictive tracking, clandestine machine intelligence retribution through covert operations in cyberspace, logically inferred zero-database a-priori realtime defense, critical infrastructure protection & retribution through cloud & tiered information security, and critical thinking memory & perception.
",H04,2016,"
method and device for managing security in a computer network include algorithms of iterative intelligence growth iterative evolution and evolution pathways; sub-algorithms of information type identifier conspiracy detection media scanner privilege isolation analysis user risk management and foreign entities management; and modules of security behavior creativity artificial threat automated growth guidance response/generic parser security review module and monitoring interaction system applications include malware predictive tracking clandestine machine intelligence retribution through covert operations in cyberspace logically inferred zero-database a-priori realtime defense critical infrastructure protection & retribution through cloud & tiered information security and critical thinking memory & perception
",5,H04_5,2,9.0,25.0,4.0
US10425383B2,1299,Platforms for implementing an analytics framework for DNS security ,2019-09-24,"['US10257221B2', 'US9106693B2', 'US10666621B2', 'US9762596B2', 'US10681012B2', 'US20180337941A1', 'US9762543B2', 'US10200384B1', 'EP3171568B1', 'US10841324B2', 'US9860265B2', 'US10079852B2', 'US20190173904A1', 'US20170272469A1', 'US20190385167A1', 'US10044748B2', 'US9967279B2', 'US9344445B2', 'US9531738B2']","
Flux domain is generally an active threat vector, and flux domain behaviors are continually changing in an attempt to evade existing detection measures. Accordingly, new and improved techniques are disclosed for flux domain detection. In some embodiments, an online platform implementing an analytics framework for DNS security is provided for facilitating flux domain detection. For example, the online platform can implement an analytics framework for DNS security based on passive DNS traffic analysis, disclosed herein with respect to various embodiments.
",H04,2019,"
flux domain is generally an active threat vector and flux domain behaviors are continually changing in an attempt to evade existing detection measures accordingly new and improved techniques are disclosed for flux domain detection in some embodiments an online platform implementing an analytics framework for dns security is provided for facilitating flux domain detection for example the online platform can implement an analytics framework for dns security based on passive dns traffic analysis disclosed herein with respect to various embodiments
",5,H04_5,2,2.0,4.0,4.0
US10063654B2,1320,Systems and methods for contextual and cross application threat detection and prediction in cloud applications ,2018-08-28,"['US10454935B2', 'AU2019204090B2', 'US10447708B2', 'EP3272100B1', 'US10574540B2', 'US10270788B2', 'US9785795B2', 'US10798116B2', 'US10742676B2', 'US10911470B2', 'US10079859B2', 'US10348759B2', 'US10063585B2', 'US10805321B2', 'US9965937B2', 'US10721268B2', 'JP6518844B1', 'AU2014201598B2', 'US20190364019A1', 'US9380052B2', 'US10719625B2', 'US9628500B1', 'US10032020B2', 'US9672379B2', 'EP3528458B1']","
Systems and methods for contextual and cross application threat detection in cloud applications in accordance with embodiments of the invention are disclosed. In one embodiment, a method for detecting threat activity in a cloud application using past activity data from cloud applications includes receiving activity data concerning actions performed by a user account associated with a user within a monitored cloud application, receiving external contextual data about the user that does not concern actions performed using the user account within the monitored cloud application, where the external contextual data is retrieved from outside of the monitored cloud application, deriving a baseline user profile using the activity data and external contextual data and associating the baseline user profile with the user account, and determining the likelihood of anomalous activity using the baseline user profile.
",H04,2018,"
systems and methods for contextual and cross application threat detection in cloud applications in accordance with embodiments of the invention are disclosed in one embodiment a method for detecting threat activity in a cloud application using past activity data from cloud applications includes receiving activity data concerning actions performed by a user account associated with a user within a monitored cloud application receiving external contextual data about the user that does not concern actions performed using the user account within the monitored cloud application where the external contextual data is retrieved from outside of the monitored cloud application deriving a baseline user profile using the activity data and external contextual data and associating the baseline user profile with the user account and determining the likelihood of anomalous activity using the baseline user profile
",5,H04_5,2,9.0,21.0,4.0
US10454935B2,1321,Method and system to detect discrepancy in infrastructure security configurations from translated security best practice configurations in heterogeneous environments ,2019-10-22,"['US20190245894A1', 'US20180026943A1', 'US10536478B2', 'US10778725B2', 'US20170323107A1', 'US10516531B2', 'US20170272472A1', 'CN107563203B', 'US10841339B2', 'US20180278649A1', 'GB2506237B', 'US8832784B2', 'US10382459B2', 'GB2564589B', 'US20180041537A1', 'US10063654B2', 'US10558800B2', 'US9413786B1', 'US9516062B2', 'US10581924B2', 'US10657277B2', 'US20190349377A1', 'US20170295199A1', 'KR101691853B1']","
A method, system and/or an apparatus to detect discrepancy in infrastructure security configurations from translated security best practice configurations in heterogeneous environments is disclosed. A method of an infrastructure security server communicatively coupled with a set of heterogeneous infrastructures translates a set of security best practice configurations of the heterogeneous infrastructures and/or a set of common vulnerabilities and exposures (CVE) of the heterogeneous infrastructures to programmatic execution. The method monitors the infrastructure security configurations associated with the heterogeneous infrastructures using a processor and a memory. The method analyzes the infrastructure security configurations based on the translated security best practice configurations and/or the translated common vulnerabilities and exposures (CVE). The method detects any discrepancy of the infrastructure security configurations from the translated security best practice configurations, and/or any translated CVE. The method alerts a set of devices and a user through one communication channel about any discrepancy.
",H04,2019,"
a method system and/or an apparatus to detect discrepancy in infrastructure security configurations from translated security best practice configurations in heterogeneous environments is disclosed a method of an infrastructure security server communicatively coupled with a set of heterogeneous infrastructures translates a set of security best practice configurations of the heterogeneous infrastructures and/or a set of common vulnerabilities and exposures (cve) of the heterogeneous infrastructures to programmatic execution the method monitors the infrastructure security configurations associated with the heterogeneous infrastructures using a processor and a memory the method analyzes the infrastructure security configurations based on the translated security best practice configurations and/or the translated common vulnerabilities and exposures (cve) the method detects any discrepancy of the infrastructure security configurations from the translated security best practice configurations and/or any translated cve the method alerts a set of devices and a user through one communication channel about any discrepancy
",5,H04_5,2,9.0,21.0,4.0
US10230745B2,1343,Using high-interaction networks for targeted threat intelligence ,2019-03-12,"['US9769204B2', 'US10326778B2', 'US9942250B2', 'US9832213B2', 'EP3111330B1', 'US10587636B1', 'US9838426B2', 'US20190260770A1', 'US9473528B2', 'US9747446B1', 'US10462188B2', 'US10621344B2']","
Provided are methods, network devices, and computer-program products for targeted threat intelligence using a high-interaction network. In some implementations, a network device in a network may receive suspect network traffic. The suspect network traffic may include network traffic identified as potentially causing harm to the network. The network device may determine that the suspect traffic is associated with an unknown threat. The network device may further analyze the suspect network traffic using a high-interaction network. In various implementations, the high-interaction network may be configured to emulate at least a part of the network. In various implementations, analyzing the suspect network traffic may include determining a behavior of the suspect network traffic in the high-interaction network. The network device may further generate indicators, where the indicators may describe the suspect network traffic. In various implementations, the indicators facilitate analysis of a network's susceptibility to the unknown threat.
",H04,2019,"
provided are methods network devices and computer-program products for targeted threat intelligence using a high-interaction network in some implementations a network device in a network may receive suspect network traffic the suspect network traffic may include network traffic identified as potentially causing harm to the network the network device may determine that the suspect traffic is associated with an unknown threat the network device may further analyze the suspect network traffic using a high-interaction network in various implementations the high-interaction network may be configured to emulate at least a part of the network in various implementations analyzing the suspect network traffic may include determining a behavior of the suspect network traffic in the high-interaction network the network device may further generate indicators where the indicators may describe the suspect network traffic in various implementations the indicators facilitate analysis of a network's susceptibility to the unknown threat
",5,H04_5,2,2.0,25.0,4.0
US10673870B2,1346,Security monitoring of network connections using metrics data ,2020-06-02,"['US20180089312A1', 'US20200336390A1', 'US10257059B2', 'US10678805B2', 'US10270788B2', 'US10693743B2', 'US10585851B2', 'US10374883B2', 'US20200364279A1', 'US10250628B2', 'US20180089278A1', 'US10360196B2', 'US10700950B2', 'US10599308B2', 'US20170142143A1', 'US10419465B2', 'US20190372868A1', 'US10848510B2', 'US10609059B2', 'US10185821B2', 'US20190163350A1', 'US10127258B2', 'US10606857B2', 'US20200014593A1', 'US10592694B2']","
Various embodiments of the present invention set forth techniques for security monitoring of a network connection, including analyzing network traffic data for a network connection associated with a computing device, identifying one or more network traffic metrics for the network connection based on the network traffic data, determining that the network connection corresponds to at least one network connection profile based on the one or more network traffic metrics, detecting a potential security threat for the network connection based on the one or more network traffic metrics and the at least one network connection profile, and initiating a mitigation action with respect to the network connection in response to detecting the potential security threat. Advantageously, the techniques allow detecting potential security threats based on network traffic metrics and categorizations, without requiring monitoring of the content or the total volume of all traffic exchanged via the connection.
",H04,2020,"
various embodiments of the present invention set forth techniques for security monitoring of a network connection including analyzing network traffic data for a network connection associated with a computing device identifying one or more network traffic metrics for the network connection based on the network traffic data determining that the network connection corresponds to at least one network connection profile based on the one or more network traffic metrics detecting a potential security threat for the network connection based on the one or more network traffic metrics and the at least one network connection profile and initiating a mitigation action with respect to the network connection in response to detecting the potential security threat advantageously the techniques allow detecting potential security threats based on network traffic metrics and categorizations without requiring monitoring of the content or the total volume of all traffic exchanged via the connection
",5,H04_5,2,8.0,2.0,4.0
US20150026809A1,1350,Systems and methods for identifying malicious hosts ,2015-01-22,"['EP3127301B1', 'US20190068649A1', 'US9473528B2', 'JP6147309B2', 'US9762596B2', 'US10095866B2', 'US10291654B2', 'US9979726B2', 'US9197628B1', 'US9628498B1', 'US10200384B1', 'US10469514B2', 'US9392007B2', 'CA2968201C', 'US9369479B2', 'US9609019B2', 'JP5991901B2', 'EP2779574B1', 'US9319425B2', 'EP2774039B1', 'JP6097849B2', 'US9641544B1', 'US20200287925A1']","
A malware detection system analyzes communication traffic to and/or from a certain host. The malware detection system uses the mismatch between host name and IP address to assign a quantitative score, which is indicative of the probability that the host is malicious. The system may use this score, for example, in combination with other indications, to decide whether the host in question is malicious or innocent. The overall decision may use, for example, a rule engine, machine learning techniques or any other suitable means. The malware detection system may also analyze alerts regarding hosts that are suspected of being malicious. The alerts may originate, for example, from Command & Control (C&C) detection, from an Intrusion Detection System (IDS), or from any other suitable source. A given alert typically reports a name of the suspected host and an IP address that allegedly belongs to that host.
",H04,2015,"
a malware detection system analyzes communication traffic to and/or from a certain host the malware detection system uses the mismatch between host name and ip address to assign a quantitative score which is indicative of the probability that the host is malicious the system may use this score for example in combination with other indications to decide whether the host in question is malicious or innocent the overall decision may use for example a rule engine machine learning techniques or any other suitable means the malware detection system may also analyze alerts regarding hosts that are suspected of being malicious the alerts may originate for example from command & control (c&c) detection from an intrusion detection system (ids) or from any other suitable source a given alert typically reports a name of the suspected host and an ip address that allegedly belongs to that host
",5,H04_5,2,2.0,4.0,4.0
US8813235B2,1368,Expert system for detecting software security threats ,2014-08-19,"['US10367815B2', 'US20180227320A1', 'US10686827B2', 'US20180025157A1', 'US10686809B2', 'US10681078B2', 'US10623443B2', 'US20190182294A1', 'US20180276378A1', 'US10079859B2', 'US10628597B2', 'EP3262815B1', 'US9729506B2', 'US10681060B2', 'US9582668B2', 'US9537841B2', 'US9749351B2', 'US10817602B2', 'US10515211B2', 'US10791097B2']","
An instance of a vulnerability risk management (VRM) module and a vulnerability management expert decision system (VMEDS) module are instantiated in a cloud. The VMEDS module imports scan results from a VRM vulnerability database and saves them as vulnerabilities to be reviewed in a VMEDS database. The VMEDS module converts vulnerabilities into facts. The VMEDS module builds a rule set in the knowledge base to verify whether certain vulnerabilities are false positives. Rules related to a vulnerability are received in plain English from a web-based front-end application. The VMEDS module tests each rule against all of the facts using the Rete algorithm. The VMEDS module executes the action associated with the rule derived from the Rete algorithm. The VMEDS module stores the results associated with the executing of the action in the VMEDS database and forwards the results to the VRM module.
",G06,2014,"
an instance of a vulnerability risk management (vrm) module and a vulnerability management expert decision system (vmeds) module are instantiated in a cloud the vmeds module imports scan results from a vrm vulnerability database and saves them as vulnerabilities to be reviewed in a vmeds database the vmeds module converts vulnerabilities into facts the vmeds module builds a rule set in the knowledge base to verify whether certain vulnerabilities are false positives rules related to a vulnerability are received in plain english from a web-based front-end application the vmeds module tests each rule against all of the facts using the rete algorithm the vmeds module executes the action associated with the rule derived from the rete algorithm the vmeds module stores the results associated with the executing of the action in the vmeds database and forwards the results to the vrm module
",5,G06_5,2,9.0,21.0,4.0
US10454958B2,1378,System and method for assessing cybersecurity awareness ,2019-10-22,"['US9521166B2', 'US8756698B2', 'US9888026B2', 'US9832213B2', 'US20160164907A1', 'US7627891B2', 'US10581908B2', 'US20170289174A1', 'US9213990B2', 'US10530796B2', 'US10848517B1', 'US9531744B2', 'US9794276B2', 'US20180212972A1', 'US10019744B2', 'US10581894B2', 'US9553886B2', 'US10440045B2', 'US10262145B2', 'US20190260795A1']","
Described embodiments include a system that includes a monitoring agent, configured to automatically monitor usage of a computing device by a user, and a processor. The processor is configured to compute, based on the monitoring, a score indicative of a cyber-security awareness of the user, and to generate an output indicative of the score.
",H04,2019,"
described embodiments include a system that includes a monitoring agent configured to automatically monitor usage of a computing device by a user and a processor the processor is configured to compute based on the monitoring a score indicative of a cyber-security awareness of the user and to generate an output indicative of the score
",5,H04_5,2,2.0,0.0,4.0
US8756698B2,1380,Method and system for managing computer system vulnerabilities ,2014-06-17,"['US10482260B1', 'US9888026B2', 'US20190243951A1', 'US9832213B2', 'US20180025157A1', 'US10318336B2', 'US10521593B2', 'US20170201540A1', 'US8327441B2', 'US20180041537A1', 'US10848517B1', 'EP3262815B1', 'US9805202B2', 'US10834050B2', 'US9582668B2', 'US10581894B2', 'US10262145B2', 'US10834108B2', 'US10742676B2']","
A vulnerability risk management (VRM) module receives an indication of a VRM service to be provided from the end user. The VRM module extracts from the indication either external IP addresses or the web application URL and a list of assets of the enterprise computer system to be tested. The VRM module discovers the assets of the enterprise computer system. The VRM module receives a request for a vulnerability scan using a predefined scan configuration based on preferences of the end user and a specified date and time to conduct the scan. The VRM module reports and stores a preliminary list of potential vulnerabilities in the VRM vulnerability database. The preliminary list is fed to an expert system, which applies specific rule sets using an inference engine and a knowledge base to refine results stored in the VRM vulnerability database by removing extraneous information and false positives.
",G06,2014,"
a vulnerability risk management (vrm) module receives an indication of a vrm service to be provided from the end user the vrm module extracts from the indication either external ip addresses or the web application url and a list of assets of the enterprise computer system to be tested the vrm module discovers the assets of the enterprise computer system the vrm module receives a request for a vulnerability scan using a predefined scan configuration based on preferences of the end user and a specified date and time to conduct the scan the vrm module reports and stores a preliminary list of potential vulnerabilities in the vrm vulnerability database the preliminary list is fed to an expert system which applies specific rule sets using an inference engine and a knowledge base to refine results stored in the vrm vulnerability database by removing extraneous information and false positives
",5,G06_5,2,9.0,29.0,4.0
US10855793B2,1396,Proxying hypertext transfer protocol (HTTP) requests for microservices ,2020-12-01,"['US20200336390A1', 'US9940373B2', 'US20150081701A1', 'US10678805B2', 'US10592694B2', 'US20190250799A1', 'US10673870B2', 'US20200364279A1', 'US20200067790A1', 'US20200125534A1', 'US10700950B2', 'US20170142143A1', 'US10911468B2', 'US20190372868A1', 'US10848510B2', 'US10855712B2', 'US10609059B2', 'US20190065541A1', 'US20200242139A1', 'US20180081935A1', 'US10778712B2', 'US10606857B2', 'US20200014593A1', 'US10360196B2', 'US20200026634A1']","
In various embodiments, a gateway application generates an outgoing Hypertext Transmission Protocol (HTTP) request based on an incoming HTTP request. In operation, the gateway application receives the incoming HTTP request and identifies an upstream service based on at least one of an HTTP method and a header included in the incoming HTTP request. Subsequently, the gateway application generates an outgoing HTTP request based on the upstream service and the incoming HTTP request. Finally, the gateway application issues the outgoing HTTP request. The outgoing HTTP request causes the upstream service to perform an action requested in the incoming HTTP request. Advantageously, the gateway application enables underlying upstream services to perform actions specified via incoming HTTP requests without directly exposing the upstream services to users.
",H04,2020,"
in various embodiments a gateway application generates an outgoing hypertext transmission protocol (http) request based on an incoming http request in operation the gateway application receives the incoming http request and identifies an upstream service based on at least one of an http method and a header included in the incoming http request subsequently the gateway application generates an outgoing http request based on the upstream service and the incoming http request finally the gateway application issues the outgoing http request the outgoing http request causes the upstream service to perform an action requested in the incoming http request advantageously the gateway application enables underlying upstream services to perform actions specified via incoming http requests without directly exposing the upstream services to users
",5,H04_5,2,8.0,2.0,4.0
US10462169B2,1398,Lateral movement detection through graph-based candidate selection ,2019-10-29,"['US20190245894A1', 'US10587640B2', 'US10193920B2', 'US10447708B2', 'US9143522B2', 'US9848016B2', 'US10121000B1', 'US20180241853A1', 'US9609010B2', 'US10681012B2', 'US10348771B2', 'US10911470B2', 'EP3178033B1', 'US9369479B2', 'US9740859B2', 'US9571512B2', 'US20190260785A1', 'US10372910B2', 'US20160182545A1', 'EP2837131B1']","
A lateral movement application identifies lateral movement (LM) candidates that potentially represent a security threat. Security platforms generate event data when performing security-related functions, such as authenticating a user account. The disclosed technology enables greatly increased accuracy identification of lateral movement (LM) candidates by, for example, refining a population of LM candidates based on an analysis of a time constrained graph in which nodes represent entities, and edges between nodes represent a time sequence of login or other association activities between the entities. The graph is created based on an analysis of the event data, including time sequences of the event data.
",H04,2019,"
a lateral movement application identifies lateral movement (lm) candidates that potentially represent a security threat security platforms generate event data when performing security-related functions such as authenticating a user account the disclosed technology enables greatly increased accuracy identification of lateral movement (lm) candidates by for example refining a population of lm candidates based on an analysis of a time constrained graph in which nodes represent entities and edges between nodes represent a time sequence of login or other association activities between the entities the graph is created based on an analysis of the event data including time sequences of the event data
",5,H04_5,2,2.0,21.0,4.0
US20190034631A1,1407,System and method for malware detection ,2019-01-31,"['US10587580B2', 'US10296739B2', 'EP2953298B1', 'US9860265B2', 'US20180109494A1', 'JP6097849B2', 'US20200336467A1', 'US10200384B1', 'US10721243B2', 'EP3272096B1', 'US8578493B1', 'EP3306890A1', 'US9800608B2', 'US7607170B2', 'US20160234167A1', 'US9432389B1', 'US10469514B2', 'US20200287925A1']","
Systems and methods for malware detection techniques, which detect malware by identifying the C&C communication between the malware and the remote host. In particular, the disclosed techniques distinguish between request-response transactions that carry C&C communication and request-response transactions of innocent traffic. Individual request-response transactions may be analyzed rather than entire flows, and fine-granularity features examined within the transactions. As such, these methods and systems are highly effective in distinguishing between malware C&C communication and innocent traffic, i.e., in detecting malware with high detection probability and few false alarms.
",H04,2019,"
systems and methods for malware detection techniques which detect malware by identifying the c&c communication between the malware and the remote host in particular the disclosed techniques distinguish between request-response transactions that carry c&c communication and request-response transactions of innocent traffic individual request-response transactions may be analyzed rather than entire flows and fine-granularity features examined within the transactions as such these methods and systems are highly effective in distinguishing between malware c&c communication and innocent traffic ie in detecting malware with high detection probability and few false alarms
",5,H04_5,2,2.0,4.0,4.0
US20190385167A1,1456,"Systems and methods for tracking, predicting, and mitigating advanced persistent threats in networks ",2019-12-19,"['US9565177B2', 'US10270744B2', 'US10425383B2', 'US10193919B2', 'US9015839B2', 'US10728263B1', 'JP2020521383A', 'EP3461103B1', 'US10397246B2', 'US9942250B2', 'US9602530B2', 'US10721243B2', 'US9882767B1']","
Systems and methods for tracking, predicting, and mitigating Advanced Persistent Threat (APT) attacks in a network include obtaining data related to events and triggers for one or more attacks, wherein the data includes a plurality of i) virtual currency transactions, ii) network traffic flow, and iii) sentiment on any of social media, blogs, and news feeds; correlating the data with one or more subscribed entities; determining a threat index for an attack on a specific subscribed entity of the one or more subscribed entities through analysis of the correlated data, wherein the threat index provides a probability of the attack on the specific subscribed entity; and notifying the specific subscribed entity of a likelihood of the attack based on the threat index.
",G06,2019,"
systems and methods for tracking predicting and mitigating advanced persistent threat (apt) attacks in a network include obtaining data related to events and triggers for one or more attacks wherein the data includes a plurality of i) virtual currency transactions ii) network traffic flow and iii) sentiment on any of social media blogs and news feeds; correlating the data with one or more subscribed entities; determining a threat index for an attack on a specific subscribed entity of the one or more subscribed entities through analysis of the correlated data wherein the threat index provides a probability of the attack on the specific subscribed entity; and notifying the specific subscribed entity of a likelihood of the attack based on the threat index
",5,G06_5,2,2.0,0.0,4.0
US9392007B2,1500,System and method for identifying infected networks and systems from unknown attacks ,2016-07-12,"['US20190245894A1', 'US10454955B2', 'US9769204B2', 'JP2019153330A', 'US10536478B2', 'US10666686B1', 'EP3362938B1', 'US20200314124A1', 'US9917864B2', 'JP6476339B6', 'US9609015B2', 'US10375101B2', 'CA2968201C', 'US10834120B2', 'US10834050B2', 'US9225730B1', 'US9582668B2', 'US10574685B2', 'US9392001B2', 'US9621574B2', 'US20170295199A1', 'CN107431712B', 'US10033766B2', 'US10742676B2', 'US10462188B2']","
Systems and method of the present disclosure are directed to a network security monitor. The monitor can receive logs of a second computer network indicative of a status of the second computer network determined by a monitoring agent executing on the second computer network. The monitor can generate indexed logs from the logs based on log format. The monitor can retrieving a list of threat indicators from a database based on a schema from a plurality of threat indicators received from a plurality of heterogeneous repositories via the first computer network. The monitor can compare the list of threat indicators with the indexed logs. The monitor can generate a report based on the comparing to identify a threat.
",H04,2016,"
systems and method of the present disclosure are directed to a network security monitor the monitor can receive logs of a second computer network indicative of a status of the second computer network determined by a monitoring agent executing on the second computer network the monitor can generate indexed logs from the logs based on log format the monitor can retrieving a list of threat indicators from a database based on a schema from a plurality of threat indicators received from a plurality of heterogeneous repositories via the first computer network the monitor can compare the list of threat indicators with the indexed logs the monitor can generate a report based on the comparing to identify a threat
",5,H04_5,2,9.0,2.0,4.0
US20170295199A1,1501,Techniques for cloud security monitoring and threat intelligence ,2017-10-12,"['US9769174B2', 'AU2016367922B2', 'US10574540B2', 'US10270788B2', 'US9785795B2', 'US10798116B2', 'US9672379B2', 'US10911470B2', 'US10454934B2', 'EP2963577B1', 'US9392007B2', 'AU2018204279B2', 'US10348759B2', 'EP3278534B1', 'US9742794B2', 'US10608911B2', 'US10476759B2', 'US20190007441A1', 'JP6518844B1', 'US10375026B2', 'US10719625B2', 'US10032020B2', 'JP6396623B2', 'US10742676B2']","
Systems and methods for cloud security monitoring and threat intelligence in accordance with embodiments of the invention are disclosed. In one embodiment, a process for monitoring and remediation of security threats includes generating a threat model using a first portion of activity data, identifying, based upon the threat model, a threat using a second portion of activity data, selecting a security policy to implement in response to the identified threat, identifying cloud security controls in a remotely hosted cloud application server system to modify in accordance with the selected security policy, establishing a secure connection to the remotely hosted cloud application server system using login credentials associated with a tenant account with the cloud application, and sending instructions to the remotely hosted cloud application server system to set the identified cloud security controls with respect to the tenant account in accordance with the selected security policy.
",H04,2017,"
systems and methods for cloud security monitoring and threat intelligence in accordance with embodiments of the invention are disclosed in one embodiment a process for monitoring and remediation of security threats includes generating a threat model using a first portion of activity data identifying based upon the threat model a threat using a second portion of activity data selecting a security policy to implement in response to the identified threat identifying cloud security controls in a remotely hosted cloud application server system to modify in accordance with the selected security policy establishing a secure connection to the remotely hosted cloud application server system using login credentials associated with a tenant account with the cloud application and sending instructions to the remotely hosted cloud application server system to set the identified cloud security controls with respect to the tenant account in accordance with the selected security policy
",5,H04_5,2,8.0,21.0,4.0
US10033754B2,1533,"Cyber threat monitor and control apparatuses, methods and systems ",2018-07-24,"['US10454753B2', 'US10248910B2', 'US10536478B2', 'US10121000B1', 'US10270788B2', 'US20200334309A1', 'US10503911B2', 'US9898604B2', 'US9934003B2', 'US10666668B2', 'US10657146B2', 'US10063654B2', 'US9356961B1', 'US20180322283A1', 'US10681060B2', 'US10244034B2', 'US20190068627A1', 'US10608911B2', 'US20200228558A1', 'US9767291B2', 'US20170295199A1', 'US20190260804A1', 'US10855793B2', 'US9497072B2']","
The cyber threat monitor and control apparatuses, methods and systems (hereinafter CTMC) determines risk across a global Internet network graph model for various virtual or physical network elements. In one embodiment, the CTMC defines a factor mechanism representing interactions among the set of network elements, the factor mechanism including a factor indicative of a correlation between a pair of network elements from the set of network elements, and dynamically calculate the probabilistic network security measure for each network element in the global Internet graph model based at least in part on the factor mechanism and any observed threat indicators related to the global Internet graph model.
",H04,2018,"
the cyber threat monitor and control apparatuses methods and systems (hereinafter ctmc) determines risk across a global internet network graph model for various virtual or physical network elements in one embodiment the ctmc defines a factor mechanism representing interactions among the set of network elements the factor mechanism including a factor indicative of a correlation between a pair of network elements from the set of network elements and dynamically calculate the probabilistic network security measure for each network element in the global internet graph model based at least in part on the factor mechanism and any observed threat indicators related to the global internet graph model
",5,H04_5,2,8.0,21.0,4.0
US20160119365A1,1557,System and method for a cyber intelligence hub ,2016-04-28,"['US10848517B1', 'US10681060B2', 'US10341370B2', 'US10051010B2', 'US9912689B2', 'US10735458B1', 'US10021127B2', 'US10032020B2', 'CA2950987C', 'AU2019219712B2', 'US10812516B2', 'US9942250B2', 'US10798116B2', 'US10666668B2', 'EP2963577B1', 'US8799462B2', 'US10609059B2', 'US9705902B1']","
A method for defining and forming a cyber intelligence channel communicating with consumers is facing cyber threats in real time. The method includes collecting information, such that web crawlers and scrapers. The method also includes filtering the collected information, by filtering mechanisms founded on advanced algorithms. The method goes on to categorize the information into groups based on their unique characteristics, collecting capabilities and input and output constraints. The method further includes mapping the information and putting it into context and targeting and pinpointing the information, such that the data collected in the data intelligence collection unit is gathered through innovative technologies that enable automated and massive, yet targeted collection of the data that exists in the cyber space.
",H04,2016,"
a method for defining and forming a cyber intelligence channel communicating with consumers is facing cyber threats in real time the method includes collecting information such that web crawlers and scrapers the method also includes filtering the collected information by filtering mechanisms founded on advanced algorithms the method goes on to categorize the information into groups based on their unique characteristics collecting capabilities and input and output constraints the method further includes mapping the information and putting it into context and targeting and pinpointing the information such that the data collected in the data intelligence collection unit is gathered through innovative technologies that enable automated and massive yet targeted collection of the data that exists in the cyber space
",5,H04_5,2,2.0,0.0,4.0
US10594677B2,1568,System and method for automatic service discovery and protection ,2020-03-17,"['US20180113807A1', 'US20180332074A1', 'US20190306195A1', 'US10728263B1', 'US10121000B1', 'US10270744B2', 'US10218740B1', 'US10270788B2', 'US10218726B2', 'JP6476339B6', 'US10666668B2', 'US10469514B2', 'US9369476B2', 'US9369479B2', 'US9473537B2', 'US20190173904A1', 'US9602530B2', 'US10609059B2', 'US9686292B2', 'US20190260783A1', 'US10762206B2', 'EP3271860B1', 'US20190182247A1', 'US10440016B2', 'US10262145B2']","
A system for automatically discovering services operating on a network including a service discovery database configured to store expected service behavioral characteristics and service identities of the services operating on the network, a set of service discovery modules configured to collect service behavioral data of the services operating on the network, and a service discovery module controller communicatively coupled to the service discovery module database and the set of service discovery modules, the service discovery module controller configured to generate service behavioral characteristics from the service behavioral data, analyze the service behavioral characteristics using the expected service behavioral characteristics, resulting in a first behavioral analysis, identify a first service identity of at least one service operating on the network from the first behavioral analysis and an association of the first service identity and the expected service behavioral characteristics.
",H04,2020,"
a system for automatically discovering services operating on a network including a service discovery database configured to store expected service behavioral characteristics and service identities of the services operating on the network a set of service discovery modules configured to collect service behavioral data of the services operating on the network and a service discovery module controller communicatively coupled to the service discovery module database and the set of service discovery modules the service discovery module controller configured to generate service behavioral characteristics from the service behavioral data analyze the service behavioral characteristics using the expected service behavioral characteristics resulting in a first behavioral analysis identify a first service identity of at least one service operating on the network from the first behavioral analysis and an association of the first service identity and the expected service behavioral characteristics
",5,H04_5,2,8.0,4.0,4.0
US10542032B2,1581,Risk assessment using social networking data ,2020-01-21,"['US9930137B2', 'US8793804B2', 'US20190342343A1', 'US9344567B1', 'US8788819B2', 'US10491624B2', 'US10511589B2', 'CN108475249B', 'US20160065594A1', 'US9762588B2', 'US10693885B2', 'US9098688B1', 'US10659439B2', 'US9286453B2', 'US9853983B2', 'US10498756B2', 'US9992287B2', 'JP2019510304A', 'US20170195315A1', 'US10587631B2', 'US9736094B2', 'US8850536B2', 'EP3183666B1', 'US9608977B2']","
Tools, strategies, and techniques are provided for evaluating the identities of different entities to protect individual consumers, business enterprises, and other organizations from identity theft and fraud. Risks associated with various entities can be analyzed and assessed based on analysis of social network data, professional network data, or other networking connections, among other data sources. In various embodiments, the risk assessment may include calculating an authenticity score based on the collected network data.
",H04,2020,"
tools strategies and techniques are provided for evaluating the identities of different entities to protect individual consumers business enterprises and other organizations from identity theft and fraud risks associated with various entities can be analyzed and assessed based on analysis of social network data professional network data or other networking connections among other data sources in various embodiments the risk assessment may include calculating an authenticity score based on the collected network data
",5,H04_5,2,1.0,0.0,4.0
US10491624B2,1582,Cyber vulnerability scan analyses with actionable feedback ,2019-11-26,"['US10387657B2', 'EP1101159B1', 'US8566956B2', 'US9721296B1', 'US10757127B2', 'US10044745B1', 'US9985983B2', 'US9747640B1', 'US8412605B2', 'US9930061B2', 'US10380703B2', 'US10339306B1', 'CN105378790B', 'US8966640B1', 'US10721268B2']","
Embodiments of the present technology relate to cyber attack vulnerability analyses. In one embodiment, a method includes determining an external infrastructure of an entity, the external infrastructure including one or more cyber assets utilized by the entity, collecting infrastructure information regarding the one or more cyber assets, performing passive cyber security vulnerability testing on the one or more cyber assets using the collected infrastructure information, and assessing cyber security vulnerabilities of the one or more cyber assets. The method may further include calculating an association score for the one or more cyber assets based on the assessed cyber security vulnerabilities, and automatically recommending, based on the association score, computer network changes to reduce the cyber security vulnerabilities.
",H04,2019,"
embodiments of the present technology relate to cyber attack vulnerability analyses in one embodiment a method includes determining an external infrastructure of an entity the external infrastructure including one or more cyber assets utilized by the entity collecting infrastructure information regarding the one or more cyber assets performing passive cyber security vulnerability testing on the one or more cyber assets using the collected infrastructure information and assessing cyber security vulnerabilities of the one or more cyber assets the method may further include calculating an association score for the one or more cyber assets based on the assessed cyber security vulnerabilities and automatically recommending based on the association score computer network changes to reduce the cyber security vulnerabilities
",5,H04_5,2,16.0,21.0,4.0
US10356106B2,1624,Detecting anomaly action within a computer network ,2019-07-16,"['US8631496B2', 'US9866426B2', 'US9288221B2', 'US10063587B2', 'US10645110B2', 'US10469514B2', 'KR20200007931A', 'US9191403B2', 'US9369479B2', 'US9503469B2', 'JP5991901B2', 'US9516039B1', 'US10425383B2', 'US10044748B2', 'US9191365B2', 'JP6006788B2', 'EP2725512B1', 'US20200287925A1', 'US9860278B2', 'US8972571B2']","
A method for network monitoring includes intercepting, in an anomaly detection module, a first data packet transmitted over a network in accordance with a predefined protocol to or from an entity on the network. Both a network address that is assigned to the entity and a strong identity, which is incorporated in the first data packet in accordance with the predefined protocol, of the entity are extracted from the intercepted first data packet. An association is recorded between the network address and the strong identity. Second data packets transmitted over the network are intercepted, containing the network address. Responsively to the recorded association and the network address, the second data packets are associated with the strong identity. The associated second data packets are analyzed in order to detect anomalous behavior and to attribute the anomalous behavior to the entity.
",H04,2019,"
a method for network monitoring includes intercepting in an anomaly detection module a first data packet transmitted over a network in accordance with a predefined protocol to or from an entity on the network both a network address that is assigned to the entity and a strong identity which is incorporated in the first data packet in accordance with the predefined protocol of the entity are extracted from the intercepted first data packet an association is recorded between the network address and the strong identity second data packets transmitted over the network are intercepted containing the network address responsively to the recorded association and the network address the second data packets are associated with the strong identity the associated second data packets are analyzed in order to detect anomalous behavior and to attribute the anomalous behavior to the entity
",5,H04_5,2,2.0,4.0,4.0
US10721263B2,1675,Systems for network risk assessment including processing of user access rights associated with a network of devices ,2020-07-21,"['US10454935B2', 'US10536478B2', 'US10491624B2', 'AU2015267387B2', 'US9043905B1', 'US9888024B2', 'US10462178B2', 'US10230764B2', 'US10735448B2', 'EP2963577B1', 'AU2018204279B2', 'CA2938337C', 'EP3021546B1', 'US9344447B2', 'US10834050B2', 'CN103999091B', 'US9306962B1', 'US10805321B2', 'US9292695B1', 'US10547646B2', 'US20160205122A1', 'CN104040550B', 'US20190260795A1']","
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for network risk assessment. One of the methods includes obtaining information describing network traffic between a plurality of network devices within a network. A network topology of the network is determined based on the information describing network traffic, with the network topology including nodes connected by an edge to one or more other nodes, and with each node being associated with one or more network devices. Indications of user access rights of users are associated to respective nodes included in the network topology. User interface data associated with the network topology is generated.
",H04,2020,"
methods systems and apparatus including computer programs encoded on computer storage media for network risk assessment one of the methods includes obtaining information describing network traffic between a plurality of network devices within a network a network topology of the network is determined based on the information describing network traffic with the network topology including nodes connected by an edge to one or more other nodes and with each node being associated with one or more network devices indications of user access rights of users are associated to respective nodes included in the network topology user interface data associated with the network topology is generated
",5,H04_5,2,2.0,21.0,4.0
US9560068B2,1692,Network intrusion detection with distributed correlation ,2017-01-31,"['US20170310703A1', 'US10454955B2', 'US10193920B2', 'US9680849B2', 'US10454894B2', 'US10397246B2', 'US9848016B2', 'JP6147309B2', 'US10230761B1', 'US10701036B2', 'AU2016234999B2', 'US9686293B2', 'US10348771B2', 'US10567431B2', 'US10171611B2', 'US10721243B2', 'US9594912B1', 'US10673873B2', 'US10476909B1', 'US9516062B2', 'KR101753838B1', 'US10003608B2']","
A network security system employing multiple levels of processing to identify security threats. Multiple host machines may each contain an agent that detects possibilities of security threats based on raw data sensed locally at that host. The hosts may share information obtained from local analysis and each host may use information generated at one or more other hosts, in combination with information generated locally, to identify a security concern, indicating with greater certainty that a security threat exists. Based on security concerns generated by multiple hosts, a security threat may be to indicated and protective action may be taken.
",H04,2017,"
a network security system employing multiple levels of processing to identify security threats multiple host machines may each contain an agent that detects possibilities of security threats based on raw data sensed locally at that host the hosts may share information obtained from local analysis and each host may use information generated at one or more other hosts in combination with information generated locally to identify a security concern indicating with greater certainty that a security threat exists based on security concerns generated by multiple hosts a security threat may be to indicated and protective action may be taken
",5,H04_5,2,2.0,4.0,4.0
US10708291B2,1942,Security threat information gathering and incident reporting systems and methods ,2020-07-07,"['US10387657B2', 'US9501647B2', 'EP3179696B1', 'US10757127B2', 'US10862901B2', 'US10719625B2', 'US10509910B2', 'US10542032B2', 'US10783254B2', 'US10785245B2', 'US10491624B2', 'US10681060B2', 'US9521160B2', 'US10511635B2', 'US20180041537A1', 'US10868809B2']","
A common misconception equates information with intelligence. To transform information into intelligence a number of analytical steps must occur within a framework designed to yield very specific datum associable with other raw or formulated datum, that provides an answer or solution to a sub-problem. Every organization has threats and risks including cyber threats, threats to infrastructure, etc. that can impact the organization on many levels. However, most organizations do not understand how to quantify and assess these risks/threats yet alone assess different preemptive actions for mitigating impact. It would therefore be beneficial to provide organizations with a software based system that provides threat information gathering, incident reporting, and asset identification/valuation as part of its compounded intelligence and supports predictive context specific analysis of risks and countermeasures. Further, distributed countermeasure monitoring provides incident levels of known and unknown, or yet to be categorized threats.
",H04,2020,"
a common misconception equates information with intelligence to transform information into intelligence a number of analytical steps must occur within a framework designed to yield very specific datum associable with other raw or formulated datum that provides an answer or solution to a sub-problem every organization has threats and risks including cyber threats threats to infrastructure etc that can impact the organization on many levels however most organizations do not understand how to quantify and assess these risks/threats yet alone assess different preemptive actions for mitigating impact it would therefore be beneficial to provide organizations with a software based system that provides threat information gathering incident reporting and asset identification/valuation as part of its compounded intelligence and supports predictive context specific analysis of risks and countermeasures further distributed countermeasure monitoring provides incident levels of known and unknown or yet to be categorized threats
",5,H04_5,2,16.0,29.0,4.0
US20100205215A1,2075,Systems and methods for enforcing policies to block search engine queries for web-based proxy sites ,2010-08-12,"['US20200356666A1', 'US20190245894A1', 'US10671694B2', 'US10164993B2', 'US10482260B1', 'US9900346B2', 'US20160294877A1', 'US10516682B2', 'US10516531B2', 'US10333990B2', 'US10673902B2', 'US10348771B2', 'US10382459B2', 'US20180041537A1', 'US10673873B2', 'US10848517B1', 'US10558800B2', 'US10509911B2', 'US10657277B2', 'US10817602B2', 'US20200228490A1', 'US9942250B2', 'US10193909B2', 'US10812531B2']","
In embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications.
",H04,2010,"
in embodiments of the present invention improved capabilities are described for systems and methods that enforce policies with respect to proxy communications
",5,H04_5,2,9.0,0.0,4.0
US8392972B2,2126,Protected access control method for shared computer resources ,2013-03-05,"['US20190245894A1', 'US20160127417A1', 'US9979753B2', 'US10516682B2', 'US10516531B2', 'US9917864B2', 'US10567403B2', 'US20180139181A1', 'US10673902B2', 'US20190245829A1', 'EP3298527B1', 'US10382459B2', 'US20180041537A1', 'US10404722B2', 'US10558800B2', 'US20200012769A1', 'US9740859B2', 'US9112899B2', 'US8763071B2', 'US9753796B2', 'US9516062B2', 'US9467465B2', 'US10469534B2', 'US10003608B2', 'US10462188B2']","
In embodiments of the present invention improved capabilities are described for providing protected computer communications. The present invention may provide for computer communications where in response to a receipt of a communication at a first computing facility from a second computing facility, the first computing facility may be caused to send a request to a compliance center for security compliance information relating to the second computing facility. In response to the request for security compliance information, the first computing facility may receive compliance information related to the second computing facility, which may cause the first computing facility to perform an action regulating further communications from the second computing facility if the second computing facility security compliance information indicates that the second client computing facility is not compliant with a current security policy.
",G06,2013,"
in embodiments of the present invention improved capabilities are described for providing protected computer communications the present invention may provide for computer communications where in response to a receipt of a communication at a first computing facility from a second computing facility the first computing facility may be caused to send a request to a compliance center for security compliance information relating to the second computing facility in response to the request for security compliance information the first computing facility may receive compliance information related to the second computing facility which may cause the first computing facility to perform an action regulating further communications from the second computing facility if the second computing facility security compliance information indicates that the second client computing facility is not compliant with a current security policy
",5,G06_5,2,9.0,29.0,4.0
US10735466B2,2324,Reactive and pre-emptive security system for the protection of computer networks and systems ,2020-08-04,"['US10587640B2', 'US9553885B2', 'US10484409B2', 'US9294442B1', 'US9848016B2', 'JP2019106216A', 'CN104023034B', 'US9342691B2', 'US9386034B2', 'EP3009949B1', 'US9628511B2', 'US10135786B2', 'US10469514B2', 'US10055247B2', 'US9130977B2', 'EP3528458A1', 'US20150373054A1', 'US20200287930A1', 'US20160308898A1', 'US10003608B2', 'US20200287925A1']","
The invention provides mechanisms for enhancing the security and protection of a computer-based system or network. It relates, in part, to the use of a decoy (which may be termed honeypot or honeynet) for collecting attacker-related data, and/or diverting malicious behaviour away from legitimate resources. In one embodiment, the invention provides a method comprising the steps of receiving, processing and logging network traffic data of a plurality of users, where the network traffic is received from a plurality of participating users; determining an attacker profile from the network traffic data; determining a honeypot or honeynet configuration based on the attacker profile; and upon receipt of a valid information request from a user of the plurality of users, providing the determined attacker profile and configuration to the user. Additionally or alternatively, it may provide a computer-implemented method comprising the steps of receiving, processing and logging network traffic data; based on processed network traffic data: determining that network traffic originates from an attacker, determining a risk classification; and determining a decoy configuration based on the risk classification; upon receipt of a valid information request from a user, providing the determined risk classification and decoy configuration to the user.
",H04,2020,"
the invention provides mechanisms for enhancing the security and protection of a computer-based system or network it relates in part to the use of a decoy (which may be termed honeypot or honeynet) for collecting attacker-related data and/or diverting malicious behaviour away from legitimate resources in one embodiment the invention provides a method comprising the steps of receiving processing and logging network traffic data of a plurality of users where the network traffic is received from a plurality of participating users; determining an attacker profile from the network traffic data; determining a honeypot or honeynet configuration based on the attacker profile; and upon receipt of a valid information request from a user of the plurality of users providing the determined attacker profile and configuration to the user additionally or alternatively it may provide a computer-implemented method comprising the steps of receiving processing and logging network traffic data; based on processed network traffic data: determining that network traffic originates from an attacker determining a risk classification; and determining a decoy configuration based on the risk classification; upon receipt of a valid information request from a user providing the determined risk classification and decoy configuration to the user
",5,H04_5,2,2.0,4.0,4.0
US8141148B2,2353,Method and system for tracking machines on a network using fuzzy GUID technology ,2012-03-20,"['KR20200007931A', 'US10587580B2', 'US6738814B1', 'US10044748B2', 'US9369479B2', 'US9985978B2', 'US20170257339A1', 'US10728263B1', 'US9521114B2', 'US10326779B2', 'US10740363B2', 'US9942250B2', 'US10715543B2', 'US10721243B2', 'US10505900B2', 'US20200287925A1']","
A method for querying a knowledgebase of malicious hosts numbered from 1 through N. The method includes providing a network of computers, which has a plurality of unknown malicious host machines. In a specific embodiment, the malicious host machines are disposed throughout the network of computers, which includes a world wide network of computers, e.g., Internet. The method includes querying a knowledge base including a plurality of known malicious hosts, which are numbered from 1 through N, where N is an integer greater than 1. In a preferred embodiment, the knowledge base is coupled to the network of computers. The method includes receiving first information associated with an unknown host from the network; identifying an unknown host and querying the knowledge base to determine if the unknown host is one of the known malicious hosts in the knowledge base. The method also includes outputting second information associated with the unknown host based upon the querying process.
",H04,2012,"
a method for querying a knowledgebase of malicious hosts numbered from 1 through n the method includes providing a network of computers which has a plurality of unknown malicious host machines in a specific embodiment the malicious host machines are disposed throughout the network of computers which includes a world wide network of computers eg internet the method includes querying a knowledge base including a plurality of known malicious hosts which are numbered from 1 through n where n is an integer greater than 1 in a preferred embodiment the knowledge base is coupled to the network of computers the method includes receiving first information associated with an unknown host from the network; identifying an unknown host and querying the knowledge base to determine if the unknown host is one of the known malicious hosts in the knowledge base the method also includes outputting second information associated with the unknown host based upon the querying process
",5,H04_5,2,2.0,4.0,4.0
AU2015203069B2,2830,Deception network system ,2017-01-05,"['US10594722B2', 'US10454955B2', 'EP3127301B1', 'US9769204B2', 'US9535731B2', 'US10193929B2', 'CA2926579C', 'US9888024B2', 'US10200384B1', 'US20160248805A1', 'US9686293B2', 'US9654485B1', 'CA2968201C', 'US9609019B2', 'US9800606B1', 'US10044746B2', 'CA2950987C', 'US9225730B1', 'US9712555B2', 'US9930055B2', 'US20190260783A1', 'US10873603B2', 'US9942250B2', 'US10534906B1', 'US10270798B2']","
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for implementing deception networks. One of the systems includes a threat information server configured to monitor and control security threats, a management process orchestration server configured to receive one or more identified security threats from the threat information server and develop a response process applicable to each identified security threat, a network switching controller in communication with one or more network switching devices, a target computing device connected to one of the network switching devices, and an indicator analytics processor configured to generate threat intelligence based on activity observed on the target device and provide the observed threat intelligence to the threat information server. The threat information server can receive threat intelligence information, identify key indicators, and generate identified security threats. The network switching controller can implement network topology changes in response to received instructions. U-U z E -L U -D 0 C,.. n0 0) 0 Z~(D C,..
",H04,2017,"
methods systems and apparatus including computer programs encoded on computer storage media for implementing deception networks one of the systems includes a threat information server configured to monitor and control security threats a management process orchestration server configured to receive one or more identified security threats from the threat information server and develop a response process applicable to each identified security threat a network switching controller in communication with one or more network switching devices a target computing device connected to one of the network switching devices and an indicator analytics processor configured to generate threat intelligence based on activity observed on the target device and provide the observed threat intelligence to the threat information server the threat information server can receive threat intelligence information identify key indicators and generate identified security threats the network switching controller can implement network topology changes in response to received instructions u-u z e -l u -d 0 c n0 0) 0 z~(d c
",5,H04_5,2,2.0,0.0,4.0
US20190124118A1,2953,Monitoring Entity Behavior using Organization Specific Security Policies ,2019-04-25,"['US20190245894A1', 'US10104107B2', 'JP2019153330A', 'US10270788B2', 'US20150269383A1', 'JP6476339B6', 'US10038702B2', 'US9185118B1', 'US20180041537A1', 'US20170251003A1', 'US9779236B2', 'EP3262815B1', 'US20160110528A1', 'US9740859B2', 'US8793790B2', 'US9753796B2', 'US9710752B2', 'US10547646B2', 'US9910984B2', 'US10891371B2', 'US10742676B2']","
A system, method, and computer-readable medium are disclosed for enforcing security policies. Enforcing security policies includes monitoring electronically-observable user interactions of an entity, the electronically-observable user interactions comprising corresponding user behavior of the entity; converting the electronically-observable user interactions into electronic information representing the user behavior; and, applying an organization specific security policy based upon the electronic information representing the user behavior, the organization specific security policy comprising an automatically generated organization specific rule.
",G06,2019,"
a system method and computer-readable medium are disclosed for enforcing security policies enforcing security policies includes monitoring electronically-observable user interactions of an entity the electronically-observable user interactions comprising corresponding user behavior of the entity; converting the electronically-observable user interactions into electronic information representing the user behavior; and applying an organization specific security policy based upon the electronic information representing the user behavior the organization specific security policy comprising an automatically generated organization specific rule
",5,G06_5,2,9.0,19.0,4.0
US20200412757A1,3022,Network security system and method for preemptively identifying or remediating security vulnerabilities ,2020-12-31,"['US10445502B1', 'US10728263B1', 'EP3111330B1', 'US20190182281A1', 'US10270744B2', 'US10218740B1', 'US10200384B1', 'US20190260786A1', 'US10721243B2', 'US20190190937A1', 'US10432649B1', 'US9954890B1', 'JP6086968B2', 'US9787700B1', 'US10505956B1', 'US10326778B2', 'US10735458B1', 'US10637880B1', 'US10467411B1', 'US9942250B2', 'US10003608B2']","
A system, a method, and a computer program for analyzing network security data from diverse data sources to predict and remediate a vulnerability at a node in a computer network, comprising receiving network security data from a plurality of data sources, extracting feature vectors from the received network security data, applying a machine learning model to the extracted feature vectors to generate a weighted vulnerability value, predicting a computing resource vulnerability at a node in the computer network based on the weighted vulnerability value, and transmitting the predicted computing resource vulnerability to a computing device which is configured to remediate the predicted computing resource vulnerability.
",H04,2020,"
a system a method and a computer program for analyzing network security data from diverse data sources to predict and remediate a vulnerability at a node in a computer network comprising receiving network security data from a plurality of data sources extracting feature vectors from the received network security data applying a machine learning model to the extracted feature vectors to generate a weighted vulnerability value predicting a computing resource vulnerability at a node in the computer network based on the weighted vulnerability value and transmitting the predicted computing resource vulnerability to a computing device which is configured to remediate the predicted computing resource vulnerability
",5,H04_5,2,2.0,4.0,4.0
US20180115566A1,3047,Malicious encrypted network traffic identification using fourier transform ,2018-04-26,"['JP2018530066A', 'AU2017200969B2', 'US10095866B2', 'US9356942B1', 'US9680849B2', 'US10785191B2', 'US10728263B1', 'US9288220B2', 'US10326778B2', 'US8839442B2', 'US10721243B2', 'US10003608B2', 'US20180285797A1']","
A method for identifying malicious encrypted network traffic communicated via a network between a first and second computer system, the method including: monitoring network traffic over the network to detect a network connection as a new network connection; identifying characteristics of the network connection to determine a protocol of the network connection; retrieving a definition of a portion of network traffic for a network connection based on the determined protocol; evaluating Fourier transform coefficient values for each of a plurality of bytes in a portion of network traffic of the new network connection based on the retrieved definition; and comparing the evaluated coefficient values with a dictionary of one or more reference sets of coefficients, each of the one or more reference sets of coefficients being associated with a portion of network traffic of a malicious encrypted network connection, so as to determine if malicious encrypted network traffic is communicated over the network connection.
",H04,2018,"
a method for identifying malicious encrypted network traffic communicated via a network between a first and second computer system the method including: monitoring network traffic over the network to detect a network connection as a new network connection; identifying characteristics of the network connection to determine a protocol of the network connection; retrieving a definition of a portion of network traffic for a network connection based on the determined protocol; evaluating fourier transform coefficient values for each of a plurality of bytes in a portion of network traffic of the new network connection based on the retrieved definition; and comparing the evaluated coefficient values with a dictionary of one or more reference sets of coefficients each of the one or more reference sets of coefficients being associated with a portion of network traffic of a malicious encrypted network connection so as to determine if malicious encrypted network traffic is communicated over the network connection
",5,H04_5,2,2.0,36.0,4.0
US10681074B2,3296,System and method for comprehensive data loss prevention and compliance management ,2020-06-09,"['US10666670B2', 'US9294442B1', 'US20180025157A1', 'US10469536B2', 'US10270788B2', 'US9973519B2', 'US20190260786A1', 'US10375101B2', 'US9392007B2', 'AU2018204279B2', 'US10911468B2', 'US10348759B2', 'US9800606B1', 'US10021127B2', 'JP2019510304A', 'US10609059B2', 'US10033766B2', 'US10547646B2', 'US10375026B2', 'US9628500B1', 'US20170295199A1', 'AU2017221858B2', 'US20180145888A1', 'US10834108B2', 'EP3183666B1']","
A system and method to identify and prevent cybersecurity attacks on modern, highly-interconnected networks, to identify attacks before data loss occurs, using a combination of human level, device level, system level, and organizational level monitoring.
",H04,2020,"
a system and method to identify and prevent cybersecurity attacks on modern highly-interconnected networks to identify attacks before data loss occurs using a combination of human level device level system level and organizational level monitoring
",5,H04_5,2,8.0,21.0,4.0
US10863358B2,3339,Threat index based WLAN security and quality of service ,2020-12-08,"['US10367815B2', 'US20190245894A1', 'US20170310703A1', 'US20180041537A1', 'US20200296127A1', 'US9503463B2', 'US9723019B1', 'US9838408B1', 'US10749907B2', 'US10757134B1', 'US20170270294A1', 'US10757116B2', 'US10515211B2', 'US9848016B2', 'US9979753B2', 'US9565192B2', 'US10462188B2', 'US10728217B2']","
Implementations generally relate methods, systems, and computer readable media for providing threat index based wireless local area networks (WLAN) security and quality of service. In one implementation, a method includes receiving a request from a client device connected to a network via a network link. The method further includes determining a threat index value for the client device. The method further includes determining one or more security policies associated with one or more respective network resources, where each security policy applies one or more rules for allocating one of the network resources. The method further includes determining allocation of one or more of the network resources to the client device based on the one or more security policies and the threat index value.
",H04,2020,"
implementations generally relate methods systems and computer readable media for providing threat index based wireless local area networks (wlan) security and quality of service in one implementation a method includes receiving a request from a client device connected to a network via a network link the method further includes determining a threat index value for the client device the method further includes determining one or more security policies associated with one or more respective network resources where each security policy applies one or more rules for allocating one of the network resources the method further includes determining allocation of one or more of the network resources to the client device based on the one or more security policies and the threat index value
",5,H04_5,2,9.0,29.0,4.0
US20190173909A1,3390,"Method and device for robust detection, analytics, and filtering of data/information exchange with connected user devices in a gateway-connected user-space ",2019-06-06,"['US9769204B2', 'US20160127417A1', 'US10616265B2', 'US9609010B2', 'US10147307B2', 'US9286784B2', 'US20180302421A1', 'KR20200007931A', 'US9609019B2', 'KR102146034B1', 'JP6608948B2', 'US10051349B2', 'US9853944B2', 'US10389742B2', 'US20160021135A1', 'US10367844B2', 'US10812497B2', 'US20170295199A1', 'EP3528459A1', 'US9641544B1', 'US9560068B2', 'US10230745B2']","
A security appliance includes: a network port enabling direct connection to a gateway; a storage module having stored thereon firmware for operating the security appliance; and a processor that executes the program code of the firmware. The firmware configures the appliance to: establish a seamless communication interface with a connected gateway; monitor traffic coming into and going out from the connected gateway; and identify traffic anomalies within the monitored traffic. The firmware further configures the appliance to: in response to identifying one or more of the traffic anomalies: forward information about the identified traffic anomalies to a centralized database for evaluation and reporting; and in response to receiving an update from a server associated with the centralized database, update a security protocol of the appliance and/or the gateway to more quickly respond to detection of similar traffic anomalies and mitigate or counter emerging threats associated with the traffic anomalies.
",H04,2019,"
a security appliance includes: a network port enabling direct connection to a gateway; a storage module having stored thereon firmware for operating the security appliance; and a processor that executes the program code of the firmware the firmware configures the appliance to: establish a seamless communication interface with a connected gateway; monitor traffic coming into and going out from the connected gateway; and identify traffic anomalies within the monitored traffic the firmware further configures the appliance to: in response to identifying one or more of the traffic anomalies: forward information about the identified traffic anomalies to a centralized database for evaluation and reporting; and in response to receiving an update from a server associated with the centralized database update a security protocol of the appliance and/or the gateway to more quickly respond to detection of similar traffic anomalies and mitigate or counter emerging threats associated with the traffic anomalies
",5,H04_5,2,2.0,25.0,4.0
US10594714B2,3450,User and entity behavioral analysis using an advanced cyber decision platform ,2020-03-17,"['US20190245894A1', 'US10666670B2', 'US9769174B2', 'AU2019204090B2', 'US10728263B1', 'US10686809B2', 'US10051010B2', 'JP6527590B2', 'US9973519B2', 'EP3304824B1', 'US20190182294A1', 'AU2018204279B2', 'EP3262815B1', 'US9369476B2', 'US10021127B2', 'US20200329064A1', 'US9712555B2', 'US10609059B2', 'US10574685B2', 'US10375026B2', 'US20190260784A1', 'US10262145B2', 'US10742676B2']","
A cybersecurity system that protects against cyber attacks by performing user and device behavioral analysis using an advanced cyber decision platform which creates a map of users and devices attached to a network, develops a baseline of expected interactions and behaviors for each user and device in the map, and monitors deviations from the expected interactions and behaviors.
",H04,2020,"
a cybersecurity system that protects against cyber attacks by performing user and device behavioral analysis using an advanced cyber decision platform which creates a map of users and devices attached to a network develops a baseline of expected interactions and behaviors for each user and device in the map and monitors deviations from the expected interactions and behaviors
",5,H04_5,2,2.0,87.0,4.0
US10348745B2,3507,Associating a user identifier detected from web traffic with a client address ,2019-07-09,"['US8813236B1', 'US10728263B1', 'US20190297096A1', 'US10855718B2', 'US9762596B2', 'US20180109494A1', 'US10305922B2', 'US10009364B2', 'US10469514B2', 'US9369479B2', 'US9503424B2', 'EP3223485B1', 'US10594656B2', 'US10812497B2', 'US10326778B2', 'US20160366160A1', 'US10686804B2', 'EP3528458B1', 'US10003608B2', 'US20200287925A1']","
In one embodiment, a device in a network receives a set of known user identifiers used in the network. The device receives web traffic log data regarding web traffic in the network. The web traffic log data includes header information captured from the web traffic and a plurality of client addresses associated with the web traffic. The device detects a particular one of the set of known user identifiers in the header information captured from the web traffic associated with a particular one of the plurality of client addresses. The device makes an association between the particular detected user identifier and the particular client address.
",H04,2019,"
in one embodiment a device in a network receives a set of known user identifiers used in the network the device receives web traffic log data regarding web traffic in the network the web traffic log data includes header information captured from the web traffic and a plurality of client addresses associated with the web traffic the device detects a particular one of the set of known user identifiers in the header information captured from the web traffic associated with a particular one of the plurality of client addresses the device makes an association between the particular detected user identifier and the particular client address
",5,H04_5,2,2.0,4.0,4.0
US20190007447A1,3579,Peer Device Protection ,2019-01-03,"['US10454955B2', 'US9852292B2', 'US10728263B1', 'US10666686B1', 'US20180109544A1', 'US10063568B1', 'US20200285740A1', 'US9686293B2', 'US10348771B2', 'US20180041537A1', 'US10673873B2', 'US10848517B1', 'US9740859B2', 'US20200076837A1', 'EP3128459B1', 'US9516062B2', 'US10657277B2', 'US20190349377A1', 'US20190140835A1', 'US10033753B1', 'US10742676B2', 'US10270798B2']","
Examples of the present disclosure describe systems and methods for peer device protection. Peer device protection enables a first device comprising a digital security agent to remedy security issues on (or associated with) a set of devices visible to the first device. In aspects, a first device comprising a digital security agent may identify a set of devices visible to the first device. The first device may monitor the set of devices to collect data, such as types of communications and data points of interest. The digital security agent may apply threat detection to the collected data to identify anomalous network behavior. When anomalous network behavior is detected, the first device may cause an indicator of compromise (IOC) to be generated. Based on the IOC, the first device may facilitate remediation of the anomalous network behavior and/or apply security to one or more devices in the set of devices.
",H04,2019,"
examples of the present disclosure describe systems and methods for peer device protection peer device protection enables a first device comprising a digital security agent to remedy security issues on (or associated with) a set of devices visible to the first device in aspects a first device comprising a digital security agent may identify a set of devices visible to the first device the first device may monitor the set of devices to collect data such as types of communications and data points of interest the digital security agent may apply threat detection to the collected data to identify anomalous network behavior when anomalous network behavior is detected the first device may cause an indicator of compromise (ioc) to be generated based on the ioc the first device may facilitate remediation of the anomalous network behavior and/or apply security to one or more devices in the set of devices
",5,H04_5,2,9.0,0.0,4.0
EP3215943A1,3594,A system for implementing threat detection using threat and risk assessment of asset-actor interactions ,2017-09-13,"['US20160330219A1', 'US10091218B2', 'US9256735B2', 'US20190251260A1', 'US9888024B2', 'US9369479B2', 'TWI595375B', 'US10289838B2', 'US10728263B1', 'EP3079337B1', 'US9565208B2', 'US10721243B2', 'EP3461103B1', 'US20160127417A1', 'US9516039B1', 'US10635817B2', 'US20190260786A1']","
Disclosed is an approach to detect insider threats, by tracking unusual access activity for a specific user or computer with regard to accessing key assets over time. In this way, malicious activity and the different preparation phases of attacks can be identified.
",H04,2017,"
disclosed is an approach to detect insider threats by tracking unusual access activity for a specific user or computer with regard to accessing key assets over time in this way malicious activity and the different preparation phases of attacks can be identified
",5,H04_5,2,2.0,25.0,4.0
US20190258807A1,3632,Automated adjusting of devices ,2019-08-22,"['US20190245894A1', 'US10757127B2', 'CN106170772B', 'EP3191960B1', 'US10432671B2', 'US10728263B1', 'US10210470B2', 'US10248910B2', 'US10038702B2', 'US20180248895A1', 'US20170277873A1', 'EP3528459B1', 'CA2933423C', 'US9740859B2', 'US9571512B2', 'US9306962B1', 'US10367844B2', 'US10375026B2', 'US20170214701A1', 'US9742559B2', 'US20170295199A1', 'US9756066B2']","
The subject disclosure relates to systems, methods, and devices that automatically adjust an attribute or configuration (e.g., physical configuration) of a device based on a security vulnerability score. In an aspect, the disclosure includes sourcing module, determination module, scoring module, analysis module, and an adjustment module. In an aspect, the analysis module can be configured to compare the security vulnerability score to a lower security vulnerability score corresponding to another device that is different from the device, wherein the lower security vulnerability score represents a more secure device than the security vulnerability score. Furthermore, the adjustment module can be configured to automatically adjust the device attributes or the device components to match at least some another device attributes or another device components to decrease the security vulnerability score.
",G06,2019,"
the subject disclosure relates to systems methods and devices that automatically adjust an attribute or configuration (eg physical configuration) of a device based on a security vulnerability score in an aspect the disclosure includes sourcing module determination module scoring module analysis module and an adjustment module in an aspect the analysis module can be configured to compare the security vulnerability score to a lower security vulnerability score corresponding to another device that is different from the device wherein the lower security vulnerability score represents a more secure device than the security vulnerability score furthermore the adjustment module can be configured to automatically adjust the device attributes or the device components to match at least some another device attributes or another device components to decrease the security vulnerability score
",5,G06_5,2,11.0,19.0,4.0
US20180048673A1,3846,Techniques for determining threat intelligence for network infrastructure analysis ,2018-02-15,"['US20200287807A1', 'KR101953303B1', 'JP6220440B2', 'US10061807B2', 'US10536478B2', 'US10678805B2', 'US9529658B2', 'US20160259818A1', 'US10693743B2', 'US10673870B2', 'US20200334309A1', 'US8583617B2', 'US20140330962A1', 'US20170142143A1', 'US10855712B2', 'US10254934B2', 'US10353756B2', 'US10262045B2', 'US9323835B2', 'US10419463B2', 'US10387448B2', 'US10667101B2', 'US10027540B2', 'US20200026634A1', 'US9836502B2']","
Embodiments of the present disclosure are directed to a network analytic system for tracking and analysis of network infrastructure for network-based digital assets. The network analytic system can detect and track a relationship between assets based on one or more attributes related or shared between any given assets. The network analytic system can analyze network-based digital assets to determine information about a website (e.g., information about electronic documents, such as web pages) that has be used to detect phishing and other abuse of the website. The network analytic system can analyze data about network-based assets to determine whether any are being used or connected to use of unauthorized or malicious activity or known network-based assets. Based on the relationship identified, the network analytic system can associate or link assets together. The network analytic system may provide an interface to view data sets generated by the network analytic system.
",H04,2018,"
embodiments of the present disclosure are directed to a network analytic system for tracking and analysis of network infrastructure for network-based digital assets the network analytic system can detect and track a relationship between assets based on one or more attributes related or shared between any given assets the network analytic system can analyze network-based digital assets to determine information about a website (eg information about electronic documents such as web pages) that has be used to detect phishing and other abuse of the website the network analytic system can analyze data about network-based assets to determine whether any are being used or connected to use of unauthorized or malicious activity or known network-based assets based on the relationship identified the network analytic system can associate or link assets together the network analytic system may provide an interface to view data sets generated by the network analytic system
",5,H04_5,2,8.0,2.0,4.0
US9548987B1,3948,Intelligent remediation of security-related events ,2017-01-17,"['US20190260794A1', 'AU2017203008B2', 'US10432671B2', 'US10536478B2', 'US10884891B2', 'US10187408B1', 'US9832214B2', 'US9672355B2', 'EP3110104B1', 'US20190014153A1', 'US10778703B2', 'US9639694B2', 'US10735454B2', 'US20170251003A1', 'US10063654B2', 'US9779236B2', 'US9411965B2', 'US10681060B2', 'US10608911B2', 'US20170154188A1', 'US20200137097A1', 'US20200358826A1', 'US10783254B2', 'US10262145B2', 'US10192051B2']","
An information processing system implements an intelligent remediation system for security-related events. The intelligent remediation system comprises a classifier configured to process information characterizing the events in order to generate respective risk scores, and a data store coupled to the classifier and configured to store feedback from one or more users regarding the risk scores. The classifier is configured to utilize the feedback regarding the risk scores to learn riskiness of particular events and to adjust its operation based on the learned riskiness, such that the risk score generated by the classifier for a given one of the events is based at least in part on the feedback received regarding risk scores generated for one or more previous ones of the events. A user interface is provided to allow one or more users to supply the feedback regarding the risk scores.
",H04,2017,"
an information processing system implements an intelligent remediation system for security-related events the intelligent remediation system comprises a classifier configured to process information characterizing the events in order to generate respective risk scores and a data store coupled to the classifier and configured to store feedback from one or more users regarding the risk scores the classifier is configured to utilize the feedback regarding the risk scores to learn riskiness of particular events and to adjust its operation based on the learned riskiness such that the risk score generated by the classifier for a given one of the events is based at least in part on the feedback received regarding risk scores generated for one or more previous ones of the events a user interface is provided to allow one or more users to supply the feedback regarding the risk scores
",5,H04_5,2,5.0,2.0,4.0
US9571452B2,4033,Deploying a security policy based on domain names ,2017-02-14,"['US20190245894A1', 'US10749907B2', 'US10778725B2', 'US9430646B1', 'US10666686B1', 'JP6553524B2', 'US9979753B2', 'US10375024B2', 'US10516531B2', 'US20180063186A1', 'US9762543B2', 'US10673902B2', 'US10681078B2', 'US10469514B2', 'US10382459B2', 'US20180041537A1', 'US10558800B2', 'GB2563340B', 'US9609019B2', 'US20190173904A1', 'US20190058725A1', 'US9621574B2', 'EP2837131B1', 'US10003608B2', 'US10462188B2']","
A firewall uses a variety of techniques to obtain a useful domain name from a network request, that is, a domain name that facilitates the accurate enforcement of domain-based security rules for network traffic at the firewall. If the network request includes an Internet Protocol (IP) address instead of the domain name, the firewall may begin with a reverse domain name lookup. If this technique fails to adequately resolve the domain name, then the firewall may attempt a hypertext transfer protocol (HTTP) GET request to the IP address and investigate the header for useful domain name information. The firewall may also or instead initiate a secure connection to the IP address and analyze a certificate returned from the destination for the presence of domain name information. These measures can produce one or more domain names that can be collectively analyzed to select a suitable domain name for the application of a domain-based security rule or policy by the firewall.
",H04,2017,"
a firewall uses a variety of techniques to obtain a useful domain name from a network request that is a domain name that facilitates the accurate enforcement of domain-based security rules for network traffic at the firewall if the network request includes an internet protocol (ip) address instead of the domain name the firewall may begin with a reverse domain name lookup if this technique fails to adequately resolve the domain name then the firewall may attempt a hypertext transfer protocol (http) get request to the ip address and investigate the header for useful domain name information the firewall may also or instead initiate a secure connection to the ip address and analyze a certificate returned from the destination for the presence of domain name information these measures can produce one or more domain names that can be collectively analyzed to select a suitable domain name for the application of a domain-based security rule or policy by the firewall
",5,H04_5,2,9.0,4.0,4.0
JP2020524870A,4045,Corporate cyber security risk management and resource planning ,2020-08-20,"['US20160330219A1', 'US10404748B2', 'US10476759B2', 'US10063654B2', 'US9774616B2', 'US9516062B2', 'US10505965B2', 'US10757127B2', 'US20180026943A1', 'US20160112445A1', 'US20170295199A1', 'US20160127417A1', 'US10749887B2', 'JP2019510304A', 'US20170323107A1', 'US10454934B2', 'US10574685B2', 'US20180041537A1']","

 The system includes a memory for storing network-related security policies 510 and procedures 520 associated with the enterprise, a display, and at least one device. The device is configured to monitor 560 corporate activity associated with the corporate network, and based on the corporate activity, determine whether the corporate complies with security policies and procedures. The device also calculates 530 a risk exposure metric for the assets of the enterprise based on the enterprise activity and whether the enterprise complies with security policies and procedures, and the risk exposure metric is calculated. Outputting an identifying graphical user interface (GUI) to the display. The device also has inputs to initiate changes to at least one of the enterprise's networked devices, or inputs to initiate generation of a plan to make changes to at least one of the networked devices. , 540 may be configured to perform receiving 540 via the GUI. [Selection diagram] Fig. 5

",H04,2020,"

 the system includes a memory for storing network-related security policies 510 and procedures 520 associated with the enterprise a display and at least one device the device is configured to monitor 560 corporate activity associated with the corporate network and based on the corporate activity determine whether the corporate complies with security policies and procedures the device also calculates 530 a risk exposure metric for the assets of the enterprise based on the enterprise activity and whether the enterprise complies with security policies and procedures and the risk exposure metric is calculated outputting an identifying graphical user interface (gui) to the display the device also has inputs to initiate changes to at least one of the enterprise's networked devices or inputs to initiate generation of a plan to make changes to at least one of the networked devices  540 may be configured to perform receiving 540 via the gui [selection diagram] fig 5

",5,H04_5,2,9.0,25.0,4.0
US20190124047A1,4102,Server-client authentication with integrated status update ,2019-04-25,"['US10367815B2', 'US10482260B1', 'US10447708B2', 'US9210182B2', 'US7890627B1', 'US10333990B2', 'US20140032691A1', 'GB2506237B', 'US20180041537A1', 'US10673873B2', 'EP2898652B1', 'US9740859B2', 'US10803005B2', 'US9571512B2', 'US20200076837A1', 'US10489588B2', 'US9467465B2', 'US9967271B2', 'US8695091B2', 'US10515211B2', 'US9846776B1', 'US10469534B2']","
An endpoint in a network periodically generates a heartbeat encoding health state information and transmits this heartbeat to other network entities. Recipients of the heartbeat may use the health state information to independently make decisions about communications with the source endpoint, for example, by isolating the endpoint to prevent further communications with other devices sharing the network with the endpoint. Isolation may be coordinated by a firewall or gateway for the network, or independently by other endpoints that receive a notification of the compromised health state.
",G06,2019,"
an endpoint in a network periodically generates a heartbeat encoding health state information and transmits this heartbeat to other network entities recipients of the heartbeat may use the health state information to independently make decisions about communications with the source endpoint for example by isolating the endpoint to prevent further communications with other devices sharing the network with the endpoint isolation may be coordinated by a firewall or gateway for the network or independently by other endpoints that receive a notification of the compromised health state
",5,G06_5,2,9.0,29.0,4.0
US20170310693A1,4108,Local proxy detection ,2017-10-26,"['US10367815B2', 'US9438631B2', 'US10482260B1', 'US9680849B2', 'US9832227B2', 'US9866528B2', 'US10701036B2', 'US10333990B2', 'US10038702B2', 'GB2506237B', 'US10341321B2', 'JP2016053979A', 'US20180041537A1', 'US9609015B2', 'US9152789B2', 'US9609019B2', 'JP6106780B2', 'US10803005B2', 'US9967271B2', 'US9846776B1', 'US10230750B2', 'US10462188B2']","
Protocol suites such as hypertext transfer protocol (HTTP) using secure socket layer (SSL) can facilitate secure network communications. When using this type of secure communication, network addresses are typically expressed as numeric internet protocol addresses rather than the human-readable uniform resource locators (URLs) that are entered into a browser address bar by a human user. This property can be exploited to differentiate between secure and insecure communications, and to detect certain instances where a malicious proxy has been deployed to intercept network traffic with an endpoint.
",H04,2017,"
protocol suites such as hypertext transfer protocol (http) using secure socket layer (ssl) can facilitate secure network communications when using this type of secure communication network addresses are typically expressed as numeric internet protocol addresses rather than the human-readable uniform resource locators (urls) that are entered into a browser address bar by a human user this property can be exploited to differentiate between secure and insecure communications and to detect certain instances where a malicious proxy has been deployed to intercept network traffic with an endpoint
",5,H04_5,2,9.0,29.0,4.0
US9923914B2,4150,Systems and platforms for intelligently monitoring risky network activities ,2018-03-20,"['US9509715B2', 'US10749887B2', 'US10341370B2', 'AU2016277680B2', 'US10270788B2', 'US10051010B2', 'JP2018049602A', 'US10505981B2', 'US10498756B2', 'US20190268381A1', 'JP2018530066A', 'EP3262815B1', 'US10230746B2', 'US9609019B2', 'US10021127B2', 'US10880320B2', 'US9602530B2', 'JP6687799B2', 'US10609059B2', 'US10419463B2', 'EP3195560B1', 'US9609006B2']","
Technology for improving and monitoring data communication security is presented herein. The technology monitors a plurality of sources of risky activities, crawls on computer networks to scan the risky activities, visualizes the risky activities, and detects and prevents risky activities.
",H04,2018,"
technology for improving and monitoring data communication security is presented herein the technology monitors a plurality of sources of risky activities crawls on computer networks to scan the risky activities visualizes the risky activities and detects and prevents risky activities
",5,H04_5,2,2.0,0.0,4.0
US10673871B2,4229,Autonomous edge device for monitoring and threat detection ,2020-06-02,"['US20190228626A1', 'US9306965B1', 'EP3528461A1', 'US10051010B2', 'US9369479B2', 'JP6749106B2', 'US9306962B1', 'US10021127B2', 'US20200304523A1', 'US9729568B2', 'US10419458B2', 'US10313389B2', 'EP3079336B1', 'US20160182552A1', 'EP3079337B1', 'US20190251260A1']","
Techniques are described for monitoring an operational technology environment (OTE) to detect threats, and performing actions to respond to detected threats. Edge device(s) are arranged to monitor and/or control the operations of component(s) within an OTE. An edge device stores threat profiles, each including a set of physical indicators that would, if exhibited by sensor data collected from the component, indicate the presence of a particular threat in the OTE. The edge device may collect sensor data from sensor devices situated in or near the monitored component. By comparing the sensor data to the threat profile(s), the edge device determines whether any of the threats described by the threat profiles are currently active. If a threat is detected, the edge device sends an alert message to server computing device(s). In some instances, the edge device can also autonomously perform response or remediation action(s) in response to detecting a threat.
",H04,2020,"
techniques are described for monitoring an operational technology environment (ote) to detect threats and performing actions to respond to detected threats edge device(s) are arranged to monitor and/or control the operations of component(s) within an ote an edge device stores threat profiles each including a set of physical indicators that would if exhibited by sensor data collected from the component indicate the presence of a particular threat in the ote the edge device may collect sensor data from sensor devices situated in or near the monitored component by comparing the sensor data to the threat profile(s) the edge device determines whether any of the threats described by the threat profiles are currently active if a threat is detected the edge device sends an alert message to server computing device(s) in some instances the edge device can also autonomously perform response or remediation action(s) in response to detecting a threat
",5,H04_5,2,2.0,87.0,4.0
US20170310692A1,4258,Detecting endpoint compromise based on network usage history ,2017-10-26,"['US9846776B1', 'US9152789B2', 'US10462188B2', 'JP2016053979A', 'US20180041537A1', 'US10701036B2', 'US10341321B2', 'US9680849B2', 'US9866528B2', 'US10038702B2', 'US10230750B2', 'US10333990B2', 'US9967271B2', 'US10367815B2', 'US10803005B2', 'US10482260B1', 'US9438631B2', 'JP6106780B2', 'US9832227B2', 'US9609015B2', 'US9609019B2', 'GB2506237B']","
In the context of network activity by an endpoint in an enterprise network, malware detection is improved by using a combination of reputation information for a network address that is accessed by the endpoint with reputation information for an application on the endpoint that is accessing the network address. This information, when combined with a network usage history for the application, provides improved differentiation between malicious network activity and legitimate, user-initiated network activity.
",H04,2017,"
in the context of network activity by an endpoint in an enterprise network malware detection is improved by using a combination of reputation information for a network address that is accessed by the endpoint with reputation information for an application on the endpoint that is accessing the network address this information when combined with a network usage history for the application provides improved differentiation between malicious network activity and legitimate user-initiated network activity
",5,H04_5,2,9.0,29.0,4.0
US10560483B2,4356,Rating organization cybersecurity using active and passive external reconnaissance ,2020-02-11,"['US9832213B2', 'US9973519B2', 'US10419465B2', 'US10289838B2', 'US9942250B2', 'AU2017221858B2', 'US10498756B2', 'US10834120B2', 'US20200344246A1', 'US20190260785A1', 'US9609010B2', 'US10728263B1', 'US10666670B2', 'US9392007B2', 'AU2019204090B2', 'US9369479B2', 'US9800606B1', 'US10121000B1', 'US9807120B2', 'US10686809B2', 'US10021127B2', 'US10609059B2', 'US10193929B2']","
A system for cybersecurity rating using active and passive external reconnaissance, that uses a web crawler that sends message prompts to external hosts and receives responses from external hosts, a time-series data store that produces time-series data from the message responses, and a directed computational graph module that analyzes the time-series data to produce a weighted score representing the overall cybersecurity state of an organization.
",H04,2020,"
a system for cybersecurity rating using active and passive external reconnaissance that uses a web crawler that sends message prompts to external hosts and receives responses from external hosts a time-series data store that produces time-series data from the message responses and a directed computational graph module that analyzes the time-series data to produce a weighted score representing the overall cybersecurity state of an organization
",5,H04_5,2,2.0,2.0,4.0
US10003607B1,4455,Automated detection of session-based access anomalies in a computer network through processing of session data ,2018-06-19,"['US20170126712A1', 'US9838407B1', 'US10193920B2', 'US20190306195A1', 'US9525699B2', 'US20170126717A1', 'US10372910B2', 'US10728263B1', 'US10681012B2', 'US9888024B2', 'US10230750B2', 'US20190260795A1', 'US10742676B2', 'US10270744B2', 'JP6585131B2', 'US9747446B1', 'US9015839B2', 'US9853997B2', 'US10121000B1', 'AU2018217323B2', 'US9686293B2', 'US9038186B1', 'EP2892197B1']","
A processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain data characterizing a plurality of network sessions for each of a plurality of user identifiers. The network sessions are initiated from a plurality of user devices over at least one network and may comprise respective virtual private network (VPN) sessions. The processing device is further configured to process the data characterizing the network sessions for a given one of the plurality of user identifiers to generate a network session profile for the given user identifier, the network session profile comprising a plurality of histograms for respective ones of a plurality of features extracted from the data characterizing the plurality of network sessions for the given user identifier. A risk score is generated for a current network session utilizing features extracted from the data characterizing that session and the network session profile.
",H04,2018,"
a processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain data characterizing a plurality of network sessions for each of a plurality of user identifiers the network sessions are initiated from a plurality of user devices over at least one network and may comprise respective virtual private network (vpn) sessions the processing device is further configured to process the data characterizing the network sessions for a given one of the plurality of user identifiers to generate a network session profile for the given user identifier the network session profile comprising a plurality of histograms for respective ones of a plurality of features extracted from the data characterizing the plurality of network sessions for the given user identifier a risk score is generated for a current network session utilizing features extracted from the data characterizing that session and the network session profile
",5,H04_5,2,2.0,0.0,4.0
US20180063178A1,4471,Method and systems for real-time internal network threat detection and enforcement ,2018-03-01,"['US10873603B2', 'US10425383B2', 'US9942250B2', 'US20200287925A1', 'US10193919B2', 'US9860265B2', 'US10326790B2', 'US10728263B1', 'US10243984B2', 'US10003608B2', 'US9342691B2', 'US20180285797A1', 'US10270744B2', 'US9369479B2', 'US9560066B2', 'US10305922B2', 'US9294442B1', 'US10469514B2', 'JP6147309B2', 'US10305927B2', 'US9191403B2', 'US9848016B2', 'US10628582B2', 'US10193929B2']","
A method for threat detection and enforcement in an internal network is disclosed. The method includes: receiving a network packet of a plurality of network packets for a traffic flow; inspecting the network packet to obtain packet information; generating, using the packet information, a flow identifier (ID) for the traffic flow; assigning, based on the flow ID, a trust score and a risk score for the network packet; and performing an enforcing action, applicable to the traffic flow, based on the trust score and risk score.
",H04,2018,"
a method for threat detection and enforcement in an internal network is disclosed the method includes: receiving a network packet of a plurality of network packets for a traffic flow; inspecting the network packet to obtain packet information; generating using the packet information a flow identifier (id) for the traffic flow; assigning based on the flow id a trust score and a risk score for the network packet; and performing an enforcing action applicable to the traffic flow based on the trust score and risk score
",5,H04_5,2,2.0,4.0,4.0
WO2018049437A2,4707,Cybersecurity artificial intelligence system ,2018-03-15,"['US10230750B2', 'US10673873B2', 'US10701036B2', 'AU2011283164B2', 'EP2774039B1', 'US10095866B2', 'US20170310703A1', 'US9686293B2', 'US9553888B2', 'US10230761B1', 'US10360062B2', 'US10326778B2', 'US20190260783A1', 'US8549643B1', 'US9473528B2', 'US20190306181A1', 'US20190327273A1']","
A cybersecurity system including an Artificial Intelligence (AI) system within a distributed computer network the AIS configured to manage and neutralise cybersecurity threats by recording data pertaining to existing cybersecurity threats (which includes threats, vulnerabilities and mutations thereof) and countermeasures effective against such known threats and vulnerabilities, to scan the network for new threats and vulnerabilities, iteratively to develop and apply countermeasures to the new threat or vulnerability until an effective countermeasure is found, and to record abstract the threat or vulnerability and the effective countermeasure.
",H04,2018,"
a cybersecurity system including an artificial intelligence (ai) system within a distributed computer network the ais configured to manage and neutralise cybersecurity threats by recording data pertaining to existing cybersecurity threats (which includes threats vulnerabilities and mutations thereof) and countermeasures effective against such known threats and vulnerabilities to scan the network for new threats and vulnerabilities iteratively to develop and apply countermeasures to the new threat or vulnerability until an effective countermeasure is found and to record abstract the threat or vulnerability and the effective countermeasure
",5,H04_5,2,9.0,0.0,4.0
US20190081980A1,4718,Intelligent-interaction honeypot for iot devices ,2019-03-14,"['US10230745B2', 'US8839442B2', 'US10637880B1', 'US8549650B2', 'US8370939B2', 'US8402540B2', 'US20160366160A1', 'US10243975B2', 'CN103634306B', 'US8010469B2', 'US9742805B2', 'JP6527590B2', 'US7979368B2', 'US10200384B1']","
Techniques for providing an intelligent-interaction honeypot for IoT devices in accordance with some embodiments. In some embodiments, a system/process/computer program product for providing an intelligent-interaction honeypot for IoT devices includes receiving a request from an attacker sent to an IP address that is associated with a honeypot instance for Internet of Things (IoT) devices; determining a response to the request using a data store that stores a plurality of responses and associated IoT device information, wherein the plurality of responses and associated IoT device information is generated based on automated machine learning of active probing of physical IoT devices on the Internet; and sending the response from the honeypot instance for IoT devices to the attacker, wherein the attacker is unable to detect that the response is associated with an emulated IoT device.
",H04,2019,"
techniques for providing an intelligent-interaction honeypot for iot devices in accordance with some embodiments in some embodiments a system/process/computer program product for providing an intelligent-interaction honeypot for iot devices includes receiving a request from an attacker sent to an ip address that is associated with a honeypot instance for internet of things (iot) devices; determining a response to the request using a data store that stores a plurality of responses and associated iot device information wherein the plurality of responses and associated iot device information is generated based on automated machine learning of active probing of physical iot devices on the internet; and sending the response from the honeypot instance for iot devices to the attacker wherein the attacker is unable to detect that the response is associated with an emulated iot device
",5,H04_5,2,2.0,17.0,4.0
US20180359272A1,4758,Next-generation enhanced comprehensive cybersecurity platform with endpoint protection and centralized management ,2018-12-13,"['US10657277B2', 'US10673873B2', 'US10462188B2', 'US9846772B1', 'JP6334069B2', 'US10742665B2', 'EP3362938B1', 'US10515211B2', 'US9680849B2', 'US10574685B2', 'US10817602B2', 'US10003608B2', 'US20190245829A1', 'US10681078B2', 'US9516062B2', 'US20170310703A1', 'US10367815B2', 'US20190245894A1', 'US9210182B2', 'US10270769B2', 'US10454894B2', 'US10417400B2', 'US9609015B2', 'US20200076837A1', 'US10348771B2']","
A next-generation enhanced comprehensive cybersecurity platform, comprising a user entity behavior analytics server that analyzes user behavior across security endpoints and prevents unauthorized activity, and a plurality of next-generation endpoint protection software agents operating on security endpoints that collect activity and OS information and send it to the user entity behavior analytics server for analysis, and a method for malware detection and mitigation using a next-generation enhanced comprehensive cybersecurity platform.
",H04,2018,"
a next-generation enhanced comprehensive cybersecurity platform comprising a user entity behavior analytics server that analyzes user behavior across security endpoints and prevents unauthorized activity and a plurality of next-generation endpoint protection software agents operating on security endpoints that collect activity and os information and send it to the user entity behavior analytics server for analysis and a method for malware detection and mitigation using a next-generation enhanced comprehensive cybersecurity platform
",5,H04_5,2,9.0,29.0,4.0
US10581977B2,4913,Computer security and usage-analysis system ,2020-03-03,"['US10581908B2', 'US10270744B2', 'US10848517B1', 'US20190364019A1', 'US10425383B2', 'US10270788B2', 'US10032020B2', 'US10715543B2', 'JP6396623B2', 'US9985989B2', 'US10721243B2', 'US9853983B2', 'JP6518844B1', 'US10313388B2']","
Provided is a private and secure network that uses an authentication mechanism with a uniquely assigned private IP address and network credentials issued as part of a VPN certificate exchange. A first layer of authentication establishes a secure tunnel between user and VPN server, and a second layer of authentication connects that secure tunnel to the web site or resource, without passing the VPN certificate. Once authenticated, interaction between website or resource and user are automatically monitored for abnormal or malicious behavior and, if required, automatic verification and authentication response is generated.
",H04,2020,"
provided is a private and secure network that uses an authentication mechanism with a uniquely assigned private ip address and network credentials issued as part of a vpn certificate exchange a first layer of authentication establishes a secure tunnel between user and vpn server and a second layer of authentication connects that secure tunnel to the web site or resource without passing the vpn certificate once authenticated interaction between website or resource and user are automatically monitored for abnormal or malicious behavior and if required automatic verification and authentication response is generated
",5,H04_5,2,2.0,4.0,4.0
US20200287918A1,5080,Threat mitigation system and method ,2020-09-10,"['US10033753B1', 'EP3461103B1', 'US10567424B2', 'US10270744B2', 'US9258321B2', 'US10735458B1', 'US10051010B2', 'EP3528458B1', 'US9369479B2', 'US9912691B2', 'US10021127B2', 'US20190356689A1', 'US9906539B2', 'US9225730B1', 'US9641550B2', 'US20170208084A1', 'US10594722B2']","
A computer-implemented method, computer program product and computing system for: obtaining consolidated platform information for a computing platform to identify one or more deployed security-relevant subsystems; processing the consolidated platform information to identify one or more non-deployed security-relevant subsystems; generating a list of ranked & recommended security-relevant subsystems that ranks the one or more non-deployed security-relevant subsystems; and providing the list of ranked & recommended security-relevant subsystems to a third-party.
",G06,2020,"
a computer-implemented method computer program product and computing system for: obtaining consolidated platform information for a computing platform to identify one or more deployed security-relevant subsystems; processing the consolidated platform information to identify one or more non-deployed security-relevant subsystems; generating a list of ranked & recommended security-relevant subsystems that ranks the one or more non-deployed security-relevant subsystems; and providing the list of ranked & recommended security-relevant subsystems to a third-party
",5,G06_5,2,2.0,4.0,4.0
EP3188443A2,5408,Systems for network risk assessment ,2017-07-05,"['US10735448B2', 'AU2018204279B2', 'US9043905B1', 'AU2017201850B2', 'US9762603B2', 'US10462178B2', 'US10536478B2', 'EP2963577B1', 'US10313389B2', 'US9027125B2', 'AU2015267387B2', 'US10432671B2', 'US20190260795A1', 'US8997226B1', 'US10454935B2', 'US9306962B1', 'US10491624B2', 'US10511635B2', 'US9344447B2', 'US10834050B2']","
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for network risk assessment. One of the methods includes obtaining information describing network traffic between a plurality of network devices within a network. A network topology of the network is determined based on the information describing network traffic, with the network topology including nodes connected by an edge to one or more other nodes, and with each node being associated with one or more network devices. Indications of user access rights of users are associated to respective nodes included in the network topology. Vulnerability using network device information or user account information is determined. User interface data associated with the network topology is generated.

",H04,2017,"
methods systems and apparatus including computer programs encoded on computer storage media for network risk assessment one of the methods includes obtaining information describing network traffic between a plurality of network devices within a network a network topology of the network is determined based on the information describing network traffic with the network topology including nodes connected by an edge to one or more other nodes and with each node being associated with one or more network devices indications of user access rights of users are associated to respective nodes included in the network topology vulnerability using network device information or user account information is determined user interface data associated with the network topology is generated

",5,H04_5,2,16.0,21.0,4.0
US20200404015A1,5585,System and method for cybersecurity analysis and score generation for insurance purposes ,2020-12-24,"['US10608983B2', 'US10686805B2', 'US10911467B2', 'AU2017221858B2', 'US10498756B2', 'JP6527590B2', 'US10671694B2', 'EP3262815B1', 'US20190173904A1', 'US20170142143A1', 'AU2017203008B2', 'US9392007B2', 'AU2019204090B2', 'US10193909B2', 'US10121000B1', 'US10554687B1', 'US10333971B2', 'US10476759B2', 'US9609006B2', 'US10469514B2', 'US20180113807A1', 'US10609059B2', 'US10628582B2']","
A system for comprehensive cybersecurity analysis and rating based on heterogeneous data and reconnaissance is provided, comprising a multidimensional time-series data server configured to create a dataset with at least time-series data gathered from passive network reconnaissance of a client; and a cybersecurity scoring engine configured to retrieve the dataset from the multidimensional time-series data server, process the dataset using at least computational graph analysis, and generate an aggregated cybersecurity score based at least on results of processing the dataset.
",H04,2020,"
a system for comprehensive cybersecurity analysis and rating based on heterogeneous data and reconnaissance is provided comprising a multidimensional time-series data server configured to create a dataset with at least time-series data gathered from passive network reconnaissance of a client; and a cybersecurity scoring engine configured to retrieve the dataset from the multidimensional time-series data server process the dataset using at least computational graph analysis and generate an aggregated cybersecurity score based at least on results of processing the dataset
",5,H04_5,2,2.0,2.0,4.0
US20200067980A1,6349,Increasing security of network resources utilizing virtual honeypots ,2020-02-27,"['US20190166136A1', 'US9674214B2', 'US8756698B2', 'US9998480B1', 'US20200285740A1', 'US20180041537A1', 'US9160766B2', 'US10742676B2', 'US10270788B2', 'US20190245894A1', 'US10104107B2', 'US10447708B2', 'US10121000B1', 'US10270769B2', 'US10666668B2', 'US10284570B2', 'US10735458B1', 'US10102372B2', 'US9197663B1', 'US9740859B2', 'US9609456B2']","
A system for predicting vulnerability of network resources is provided. The system can calculate an initial vulnerability score for each of the network resources and use the initial vulnerability scores along with activity data of the network resources to train a vulnerability model. After training, the vulnerability model can predict the vulnerability of the network resources based on new activity data collected from the network resources. Based on the predicted vulnerability, vulnerable network resources can be identified. Further analysis can be performed by comparing the activities of the vulnerable network resources and other network resources to identify activity patterns unique to the vulnerable network resources as attack patterns. Based on the attack patterns, one or more actions can be taken to increase the security of the vulnerable network resources to avoid further vulnerability.
",G06,2020,"
a system for predicting vulnerability of network resources is provided the system can calculate an initial vulnerability score for each of the network resources and use the initial vulnerability scores along with activity data of the network resources to train a vulnerability model after training the vulnerability model can predict the vulnerability of the network resources based on new activity data collected from the network resources based on the predicted vulnerability vulnerable network resources can be identified further analysis can be performed by comparing the activities of the vulnerable network resources and other network resources to identify activity patterns unique to the vulnerable network resources as attack patterns based on the attack patterns one or more actions can be taken to increase the security of the vulnerable network resources to avoid further vulnerability
",5,G06_5,2,9.0,29.0,4.0
US20200137090A1,6376,"Industrial asset cyber-attack detection algorithm verification using secure, distributed ledger ",2020-04-30,"['US10419463B2', 'AU2017200941B2', 'US8418247B2', 'EP3528458B1', 'US10791141B2', 'US9043905B1', 'US20170277873A1', 'EP3213243B1', 'US9984365B2', 'US10148685B2', 'US20170214708A1', 'EP3079336B1', 'JP6530786B2', 'JP6527590B2', 'US10425428B2', 'US20170093910A1', 'US10268840B2']","
A verification platform may include a data connection to receive a stream of industrial asset cyber-attack detection algorithm data, including a subset of the industrial asset cyber-attack detection algorithm data. The verification platform may store the subset into a data store (the subset of industrial asset cyber-attack detection algorithm data being marked as invalid) and record a hash value associated with a compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata in a secure, distributed ledger. The verification platform may then receive a transaction identifier from the secure, distributed ledger and mark the subset of industrial asset cyber-attack detection algorithm data in the data store as being valid after using the transaction identifier to verify that the recorded hash value matches a hash value of an independently created version of the compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata.
",H04,2020,"
a verification platform may include a data connection to receive a stream of industrial asset cyber-attack detection algorithm data including a subset of the industrial asset cyber-attack detection algorithm data the verification platform may store the subset into a data store (the subset of industrial asset cyber-attack detection algorithm data being marked as invalid) and record a hash value associated with a compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata in a secure distributed ledger the verification platform may then receive a transaction identifier from the secure distributed ledger and mark the subset of industrial asset cyber-attack detection algorithm data in the data store as being valid after using the transaction identifier to verify that the recorded hash value matches a hash value of an independently created version of the compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata
",5,H04_5,2,11.0,21.0,4.0
GB2581989A,6401,Network protection ,2020-09-09,"['US20190260784A1', 'US10419463B2', 'US9258321B2', 'US10372910B2', 'US9923925B2', 'US10728263B1', 'US10721243B2', 'US20170214708A1', 'US10326778B2', 'US20170093910A1', 'EP2828753B1', 'US9369476B2']","
A computer implemented method of protecting a network, possibly performed by a router (210, fig. 5), involves gathering traffic data for the network 310, identifying a set of IoT (Internet of Things) devices based on the output of a machine learning model for classifying IoT devices using features extracted from the traffic data that are indicative of an IoT device 320, and causing one or more predetermined actions to be taken in respect of the IoT devices to protect the network 330. The actions may include patching the identified devices, placing them into a separate VLAN, or raising an alarm if there are differences with a previously identified set of IoT devices. The model may be generated using a shallow unsupervised learning algorithm. The traffic data may include data gathered from logs for network services provided by a router. A server (520, fig. 5) accessible via another network (510, fig. 5) may provide computational resources to assist a router in carrying out the method. This may include the server generating and training the machine learning model using a deep learning algorithm and communicating identified IoT devices to the router.
",H04,2020,"
a computer implemented method of protecting a network possibly performed by a router (210 fig 5) involves gathering traffic data for the network 310 identifying a set of iot (internet of things) devices based on the output of a machine learning model for classifying iot devices using features extracted from the traffic data that are indicative of an iot device 320 and causing one or more predetermined actions to be taken in respect of the iot devices to protect the network 330 the actions may include patching the identified devices placing them into a separate vlan or raising an alarm if there are differences with a previously identified set of iot devices the model may be generated using a shallow unsupervised learning algorithm the traffic data may include data gathered from logs for network services provided by a router a server (520 fig 5) accessible via another network (510 fig 5) may provide computational resources to assist a router in carrying out the method this may include the server generating and training the machine learning model using a deep learning algorithm and communicating identified iot devices to the router
",5,H04_5,2,2.0,87.0,4.0
RU2665919C1,6402,System and method of determination of ddos-attacks under failure of service servers ,2018-09-04,"['US20160294773A1', 'US10581908B2', 'US8135657B2', 'US20170163668A1', 'EP3362938B1', 'US9369479B2', 'US10326790B2', 'CA2966408C', 'US20150373043A1', 'US8402540B2', 'US20160366160A1', 'US10498756B2', 'US9985989B2', 'CA2859415C', 'US8813236B1', 'US9225730B1', 'US20200287925A1', 'US9860265B2']","
FIELD: computer engineering.
SUBSTANCE: invention relates to computer engineering. DDoS-attack detection system on the server includes a server that contains one or more services that are responsible for processing user requests received from user devices; application responsible for security, which is designed to determine the incorrect operation of the server services and the transfer of this information to the protection against DDoS attacks, and also designed to configure the protection against DDoS-attacks by changing the types of data used to construct the user's vector; means of protection against DDoS-attacks, which is designed to determine the DDoS-attack on the server based on intercepted requests from users and information from the said application responsible for security.
EFFECT: technical result is to determine the DDoS-attack on the server when the server services are not working properly.
2 cl, 8 dwg, 1 tbl
",G06,2018,"
field: computer engineering
substance: invention relates to computer engineering ddos-attack detection system on the server includes a server that contains one or more services that are responsible for processing user requests received from user devices; application responsible for security which is designed to determine the incorrect operation of the server services and the transfer of this information to the protection against ddos attacks and also designed to configure the protection against ddos-attacks by changing the types of data used to construct the user's vector; means of protection against ddos-attacks which is designed to determine the ddos-attack on the server based on intercepted requests from users and information from the said application responsible for security
effect: technical result is to determine the ddos-attack on the server when the server services are not working properly
2 cl 8 dwg 1 tbl
",5,G06_5,2,2.0,17.0,4.0
US20190349351A1,6428,Dynamic Risk Detection And Mitigation Of Compromised Customer Log-In Credentials ,2019-11-14,"['US9973519B2', 'US9710868B2', 'US20170214701A1', 'US10785245B2', 'US10659439B2', 'JP2019096339A', 'US10749887B2', 'EP3544256B1', 'US10536479B2', 'US10193909B2', 'US9825978B2', 'CN106575327B', 'US10848517B1', 'US10205742B2', 'US10542032B2', 'US9853983B2', 'US10230718B2', 'US10339306B1', 'US10044730B1', 'EP2892197B1', 'EP3183666B1']","
This invention relates to a process for detecting and mitigating risk generated when a customer's log-in credentials are compromised. A significant majority of stolen credentials and customer's personally identifiable information data eventually make their way to the dark web. By dynamically monitoring the dark web and combining the analysis with related information about the user and their credentials on the deep web and the surface web, through a machine learning model, a service provider pre-emptively or otherwise can act to mitigate the risk arising from such compromise of said customer log-in credentials.
",H04,2019,"
this invention relates to a process for detecting and mitigating risk generated when a customer's log-in credentials are compromised a significant majority of stolen credentials and customer's personally identifiable information data eventually make their way to the dark web by dynamically monitoring the dark web and combining the analysis with related information about the user and their credentials on the deep web and the surface web through a machine learning model a service provider pre-emptively or otherwise can act to mitigate the risk arising from such compromise of said customer log-in credentials
",5,H04_5,2,2.0,0.0,4.0
US20200304462A1,6433,Graphical representation of security threats in a network ,2020-09-24,"['US10467411B1', 'US10218740B1', 'US10721243B2', 'US20190260785A1', 'US10326778B2', 'AU2014244137B2', 'EP2610776B1', 'US8438644B2', 'US9178906B1', 'US10728263B1', 'US9021595B2', 'US9641550B2', 'US9311476B2', 'AU2017254815B2', 'US20200169579A1', 'US8997236B2', 'US20190327273A1', 'US9888029B2', 'US10051010B2', 'US10021127B2', 'US10735456B2']","
A method includes, at a server in a network, detecting for a user device network incidents relating to one or more security threats in the network using a plurality of threat detectors over a predetermined time period, each of the network incidents including one or more behavior indicators; assigning the network incidents into one or more groups, wherein each group corresponds to a type of security threat; generating a graph for a particular group of the user device, wherein the graph includes a plurality of nodes each representing a behavior indicator in the particular group, and wherein generating the graph includes assigning an edge to connect two nodes of the plurality of nodes if the two nodes correspond to behavior indicators that belong to a same network incident; and displaying the graph on a graphical user interface for a user.
",H04,2020,"
a method includes at a server in a network detecting for a user device network incidents relating to one or more security threats in the network using a plurality of threat detectors over a predetermined time period each of the network incidents including one or more behavior indicators; assigning the network incidents into one or more groups wherein each group corresponds to a type of security threat; generating a graph for a particular group of the user device wherein the graph includes a plurality of nodes each representing a behavior indicator in the particular group and wherein generating the graph includes assigning an edge to connect two nodes of the plurality of nodes if the two nodes correspond to behavior indicators that belong to a same network incident; and displaying the graph on a graphical user interface for a user
",5,H04_5,2,2.0,36.0,4.0
KR101951208B1,6434,A firewall system for monitoring network traffic by using firewall agent ,2019-02-25,"['US7424744B1', 'US8135657B2', 'US9807109B2', 'US8949668B2', 'US10587640B2', 'US20190260786A1', 'US20160366160A1', 'US8407791B2', 'US10721243B2', 'CN1656731B', 'US6775657B1', 'US7835348B2', 'US9602530B2', 'US8997236B2', 'KR100800370B1', 'KR101111433B1', 'US10601853B2']","
The present invention relates to a firewall system for monitoring a signature and traffic using a firewall agent configured for each computer terminal and, more specifically, to a firewall system for monitoring a signature and traffic using a firewall agent configured for each computer terminal, for performing a security process on a packet data according to sub security policy information by installing and configuring the firewall agent in each computer terminal and for performing security processing, when the security policy information established in the main firewall apparatus is acquired by the firewall agent, by referring to the comprehensive security policy information established for the packet data received from the computer terminal having the firewall agent.
",H04,2019,"
the present invention relates to a firewall system for monitoring a signature and traffic using a firewall agent configured for each computer terminal and more specifically to a firewall system for monitoring a signature and traffic using a firewall agent configured for each computer terminal for performing a security process on a packet data according to sub security policy information by installing and configuring the firewall agent in each computer terminal and for performing security processing when the security policy information established in the main firewall apparatus is acquired by the firewall agent by referring to the comprehensive security policy information established for the packet data received from the computer terminal having the firewall agent
",5,H04_5,2,2.0,17.0,4.0
RU2659735C1,6446,System and method of setting security systems under ddos attacks ,2018-07-03,"['US8135657B2', 'CA2966408C', 'US20160366160A1', 'CA2859415C', 'US8813236B1', 'US9032527B2', 'US9225730B1', 'US20200287925A1', 'US20150373043A1', 'US20170163668A1', 'EP3362938B1', 'US8707428B2', 'US9985989B2', 'EP2432188B1', 'US9369479B2', 'US8402540B2', 'US9800608B2', 'US10581908B2', 'US20200358808A1', 'US9860265B2']","
FIELD: computer engineering.
SUBSTANCE: invention relates to computer engineering. System for changing the parameters of the application responsible for security, when determining the DDoS attack on the server, includes a server that includes one or more services that are responsible for handling user requests that access the server by sending requests; means of protection against DDoS-attacks, which determines the DDoS-attack on the server and transfers information about a specific DDoS-attack to the administration tool; security application that monitors the operation of the server's services and, when determining the incorrect operation of the server, transfers information about this to the administration tool; means of administration, which receives information from the protection against DDoS-attacks and the application responsible for security, and changes the parameters of the application of the responsibility for security, based on the received data, while the administration tool uses rules to change the settings for the application of the security application, and the rules themselves are created using machine learning methods.
EFFECT: technical result is to provide a change in the parameters of the application responsible for security when determining the DDoS attack on the server.
3 cl, 8 dwg
",G06,2018,"
field: computer engineering
substance: invention relates to computer engineering system for changing the parameters of the application responsible for security when determining the ddos attack on the server includes a server that includes one or more services that are responsible for handling user requests that access the server by sending requests; means of protection against ddos-attacks which determines the ddos-attack on the server and transfers information about a specific ddos-attack to the administration tool; security application that monitors the operation of the server's services and when determining the incorrect operation of the server transfers information about this to the administration tool; means of administration which receives information from the protection against ddos-attacks and the application responsible for security and changes the parameters of the application of the responsibility for security based on the received data while the administration tool uses rules to change the settings for the application of the security application and the rules themselves are created using machine learning methods
effect: technical result is to provide a change in the parameters of the application responsible for security when determining the ddos attack on the server
3 cl 8 dwg
",5,G06_5,2,2.0,17.0,4.0
GB2581990A,6458,Network protection ,2020-09-09,"['US10372910B2', 'US9923925B2', 'US10728263B1', 'US20170214708A1', 'EP3528462A1', 'US10721243B2', 'US10326778B2', 'US10778703B2', 'US20170093910A1']","
A network protection method, performed by a computer system comprising a router, involves gathering traffic data for the network 310, determining that processing to identify network IoT devices using the traffic data is to be performed using processing resources provided by another computer system 620, communicating with the other system to identify a set of network IoT devices 640, and causing one or more predetermined actions to be taken in respect of the device set to protect the network 330. Actions may include patching the identified devices, placing them into a separate VLAN, or noting differences with a previously identified set. Determining that external processing resources are to used may be based on generating a profile of router computational abilities 610. Another computer-implemented network protection method, possibly performed by an external server (520, fig. 5), involves obtaining a machine learning model for identifying network IoT devices using IoT device features extracted from network traffic data (710, fig. 7), possibly by using a deep unsupervised learning algorithm, and communicating with a routing device in the network to identify a set of network IoT devices using the machine learning model and network traffic data gathered by the routing device (720, fig. 7).
",H04,2020,"
a network protection method performed by a computer system comprising a router involves gathering traffic data for the network 310 determining that processing to identify network iot devices using the traffic data is to be performed using processing resources provided by another computer system 620 communicating with the other system to identify a set of network iot devices 640 and causing one or more predetermined actions to be taken in respect of the device set to protect the network 330 actions may include patching the identified devices placing them into a separate vlan or noting differences with a previously identified set determining that external processing resources are to used may be based on generating a profile of router computational abilities 610 another computer-implemented network protection method possibly performed by an external server (520 fig 5) involves obtaining a machine learning model for identifying network iot devices using iot device features extracted from network traffic data (710 fig 7) possibly by using a deep unsupervised learning algorithm and communicating with a routing device in the network to identify a set of network iot devices using the machine learning model and network traffic data gathered by the routing device (720 fig 7)
",5,H04_5,2,2.0,2.0,4.0
US20200220885A1,6575,Selecting security incidents for advanced automatic analysis ,2020-07-09,"['US20180025157A1', 'US7752671B2', 'EP2498198B1', 'US10033766B2', 'US10454934B2', 'US10079859B2', 'US8813235B2', 'US20160330219A1', 'US10666670B2', 'CN107563203B', 'US10599837B2', 'US10834050B2', 'US20200137097A1', 'US10262145B2', 'US8850588B2', 'US20190245894A1', 'US9600320B2', 'US9021594B2', 'KR101691853B1', 'US9825978B2', 'EP3131261B1', 'US10686809B2', 'EP3210364B1']","
Prioritizing security incidents for analysis is provided. A set of security information and event management data corresponding to each of a set of security incidents is retrieved. A source weight of a security incident and a magnitude of the security incident are used to determine a priority of the security incident within the set of security incidents. A local analysis of the security incident is performed based on the retrieved set of security information and event management data corresponding to the security incident and the determined priority of the security incident.
",H04,2020,"
prioritizing security incidents for analysis is provided a set of security information and event management data corresponding to each of a set of security incidents is retrieved a source weight of a security incident and a magnitude of the security incident are used to determine a priority of the security incident within the set of security incidents a local analysis of the security incident is performed based on the retrieved set of security information and event management data corresponding to the security incident and the determined priority of the security incident
",5,H04_5,2,9.0,21.0,4.0
US20200162485A1,6643,Cryptocurrency Based Malware and Ransomware Detection Systems and Methods ,2020-05-21,"['US10019744B2', 'US10032020B2', 'US9213990B2', 'US10503911B2', 'US9904955B2', 'US20190297096A1', 'EP3073670B1', 'EP3120286B1', 'US10037533B2', 'US10313389B2', 'US10749884B2', 'US10262145B2', 'US20190385167A1', 'CN106575327B', 'US9292695B1', 'US10284570B2', 'US10356099B2', 'US8732472B2', 'TWI573084B', 'US10250583B2', 'JP2019013009A']","
Cryptocurrency based malware and ransomware detection systems and methods are disclosed herein. An example method includes analyzing a plurality of malware or ransomware attacks to determine cryptocurrency payment address of malware or ransomware attacks, building a malware or ransomware attack database with the cryptocurrency payment addresses of the plurality of malware or ransomware attacks, identifying a proposed cryptocurrency transaction that includes an address that is included in the malware or ransomware attack database, and denying the proposed cryptocurrency transaction
",G06,2020,"
cryptocurrency based malware and ransomware detection systems and methods are disclosed herein an example method includes analyzing a plurality of malware or ransomware attacks to determine cryptocurrency payment address of malware or ransomware attacks building a malware or ransomware attack database with the cryptocurrency payment addresses of the plurality of malware or ransomware attacks identifying a proposed cryptocurrency transaction that includes an address that is included in the malware or ransomware attack database and denying the proposed cryptocurrency transaction
",5,G06_5,2,0.0,0.0,4.0
US20200233962A1,6652,Detecting obfuscated malware variants ,2020-07-23,"['US10628597B2', 'US10673873B2', 'US10657277B2', 'US8869281B2', 'US20160127417A1', 'US20180041537A1', 'JP6334069B2', 'EP3528458B1', 'US10515211B2', 'US9753796B2', 'US10762206B2', 'US10366231B1', 'US10681078B2', 'US10742676B2', 'US9258321B2', 'US9563771B2', 'US9967271B2', 'US10367815B2', 'US20170310703A1', 'US10121000B1', 'US10834061B2', 'US10686827B2', 'US20190364019A1', 'US20200076837A1', 'US10348771B2']","
A threat management facility analyzes a plurality of instructions in computer code for redundancy. When redundancy is found, the threat management facility determines whether the redundancy has characteristics of deliberate obfuscation consistent with malware techniques such as server-side polymorphism. Measures of redundancy, such as one or more of a degree of redundancy or a pattern of redundancy, may inform this process, and my usefully aid in distinguishing legitimate code redundancies from malware. Where an inference of malware is supported, the threat management facility may initiate remediation of the computer code. Further, or instead, the type of remediation applied to the computer code may be based on one or more aspects of the detected obfuscation.
",G06,2020,"
a threat management facility analyzes a plurality of instructions in computer code for redundancy when redundancy is found the threat management facility determines whether the redundancy has characteristics of deliberate obfuscation consistent with malware techniques such as server-side polymorphism measures of redundancy such as one or more of a degree of redundancy or a pattern of redundancy may inform this process and my usefully aid in distinguishing legitimate code redundancies from malware where an inference of malware is supported the threat management facility may initiate remediation of the computer code further or instead the type of remediation applied to the computer code may be based on one or more aspects of the detected obfuscation
",5,G06_5,2,9.0,25.0,4.0
US20200162496A1,6683,System and method for classifying cyber security threats using natural language processing ,2020-05-21,"['US10666686B1', 'US10367830B2', 'US10467411B1', 'US10218740B1', 'US10326778B2', 'US10225286B2', 'US9143522B2', 'US9740859B2', 'EP3262815B1', 'US10558800B2', 'US10063373B2', 'US10003608B2', 'US9888024B2', 'US20190245894A1', 'US10673902B2', 'US20170142150A1', 'US10121000B1', 'US10200390B2', 'US10902117B1', 'US10382459B2', 'US9848016B2']","
A method and system for classification of cyber-threats is provided. The method includes receiving a request for classifying a cyber-threat detected by a cyber-security system, wherein the request includes initial information about the detected cyber-threat; enriching the initial information about the detected cyber-threat to provide textual information about at least one perceived threat related to the detected cyber-threat; and classifying each of the at least one perceived threat into a security service, wherein the classification is performed based on the respective textual information.
",G06,2020,"
a method and system for classification of cyber-threats is provided the method includes receiving a request for classifying a cyber-threat detected by a cyber-security system wherein the request includes initial information about the detected cyber-threat; enriching the initial information about the detected cyber-threat to provide textual information about at least one perceived threat related to the detected cyber-threat; and classifying each of the at least one perceived threat into a security service wherein the classification is performed based on the respective textual information
",5,G06_5,2,9.0,36.0,4.0
US10893058B1,6803,Malware detection and alerting for network connected devices based on traffic flow analysis on local network ,2021-01-12,"['US10673873B2', 'US10462188B2', 'US10095866B2', 'US9787700B1', 'US10326778B2', 'US10701036B2', 'US9438623B1', 'US10505933B2', 'US10027695B2', 'KR101737726B1', 'EP3375159B1', 'US9369479B2', 'AU2015361316B2', 'US20190245894A1', 'US9516054B2', 'US10701098B2', 'JP6106780B2', 'US20180352004A1', 'US9609019B2', 'US10659478B2', 'US9838408B1', 'JP6147309B2', 'EP3314854B1', 'US9848016B2']","
As described, embodiments presented herein provide techniques for detecting malware on computing devices connected to a local network segment by observing the traffic flows of such devices and generating signatures characterizing such traffic flows. Doing so allows instances of malware to be detected on a variety of devices which can be connected to a computing network, but which lack the capability of directly detecting and preventing malware applications from infecting such devices.
",H04,2021,"
as described embodiments presented herein provide techniques for detecting malware on computing devices connected to a local network segment by observing the traffic flows of such devices and generating signatures characterizing such traffic flows doing so allows instances of malware to be detected on a variety of devices which can be connected to a computing network but which lack the capability of directly detecting and preventing malware applications from infecting such devices
",5,H04_5,2,2.0,17.0,4.0
US20200067985A1,6916,Systems and methods of interactive and intelligent cyber-security ,2020-02-27,"['JP2018521430A', 'US10257199B2', 'US20190156058A1', 'US8756698B2', 'US9825981B2', 'US10193845B2', 'US9813454B2', 'EP2963577B1', 'US8266231B1', 'EP2942750B1', 'US8976955B2', 'US9258321B2', 'US20200137097A1', 'US10673870B2', 'US10798116B2', 'US10476759B2', 'US20160330231A1', 'US10609059B2', 'US10812516B2']","
A comprehensive security operation platform with artificial intelligence capabilities which may collaborate and/or automate tasks. The platform comprises a processor and a computer-readable storage medium storing computer-readable instructions. The instructions, when executed by the processor, cause the processor to perform monitoring an input to a user interface associated with a cyber-security incident; based on the input, determining an action to recommend; and displaying a visualization of the action to recommend on the user interface. The action to recommend is determined based on past actions by users facing one or more past incidents similar to an incident associated with the user interface.
",H04,2020,"
a comprehensive security operation platform with artificial intelligence capabilities which may collaborate and/or automate tasks the platform comprises a processor and a computer-readable storage medium storing computer-readable instructions the instructions when executed by the processor cause the processor to perform monitoring an input to a user interface associated with a cyber-security incident; based on the input determining an action to recommend; and displaying a visualization of the action to recommend on the user interface the action to recommend is determined based on past actions by users facing one or more past incidents similar to an incident associated with the user interface
",5,H04_5,2,8.0,29.0,4.0
US20200226298A1,6925,System and method for securing a computer system from threats introduced by usb devices ,2020-07-16,"['US10666686B1', 'US10628597B2', 'US9582668B2', 'US9467465B2', 'US10868818B1', 'US20180041537A1', 'US9473522B1', 'US9753796B2', 'US9940454B2', 'US10003608B2', 'US20170289191A1', 'US9392007B2', 'US10681078B2', 'US10235524B2', 'US10122747B2', 'US9756066B2', 'US20190260794A1', 'US10834061B2', 'US20170093910A1', 'US10686827B2', 'US10148697B2', 'US9609019B2', 'US9674215B2', 'US10574685B2']","
A system for preventing attacks on at least one computer via its usb port, the system comprising at least one processor configured to monitor at least one aspect of a connection between a peripheral and a computer's usb port, to identify aspects which match pre-configured criteria and responsively, to take action.
",G06,2020,"
a system for preventing attacks on at least one computer via its usb port the system comprising at least one processor configured to monitor at least one aspect of a connection between a peripheral and a computer's usb port to identify aspects which match pre-configured criteria and responsively to take action
",5,G06_5,2,9.0,25.0,4.0
US20200127976A1,6962,Network security system with enhanced traffic analysis based on feedback loop ,2020-04-23,"['US10666686B1', 'EP3111330B1', 'US10467411B1', 'US10122746B1', 'US10425383B2', 'US10032020B2', 'US20200287925A1', 'US9756074B2', 'US9438623B1', 'US9853941B2', 'US9954902B1', 'US9800599B2', 'JP6553524B2', 'US9426125B2', 'US10366231B1', 'US10003608B2', 'US10257221B2', 'US10270744B2', 'US9912691B2', 'US10121000B1', 'KR20200007931A', 'US9654494B2', 'US10469514B2', 'US9762596B2', 'US9860265B2']","
This document describes among other things, network security systems that incorporate a feedback loop so as to automatically and dynamically adjust the scope of network traffic that is subject to inspection. Risky traffic can be sent for inspection; risky traffic that is demonstrated to have high rate of threats can be outright blocked without further inspection; traffic that is causing errors due to protocol incompatibility or should not be inspected for regulatory or other reasons can be flagged so it bypasses the security inspection system. The system can operate on a domain by domain basis, IP address basis, or otherwise.
",H04,2020,"
this document describes among other things network security systems that incorporate a feedback loop so as to automatically and dynamically adjust the scope of network traffic that is subject to inspection risky traffic can be sent for inspection; risky traffic that is demonstrated to have high rate of threats can be outright blocked without further inspection; traffic that is causing errors due to protocol incompatibility or should not be inspected for regulatory or other reasons can be flagged so it bypasses the security inspection system the system can operate on a domain by domain basis ip address basis or otherwise
",5,H04_5,2,2.0,4.0,4.0
US20200213192A1,7010,Characterizing client-server connection configurations according to communication layer attributes ,2020-07-02,"['US10404742B2', 'US9455997B2', 'US9973519B2', 'US10841324B2', 'US10721243B2', 'US20190034631A1', 'US20200287925A1', 'US8904558B2', 'US9497210B2', 'US9444835B2', 'US10326790B2', 'US9954902B1', 'US20180115523A1', 'US20200228563A1', 'US20200145451A1', 'EP3424178B1', 'US10193909B2', 'US10200384B1', 'US10581908B2', 'US10637880B1', 'US10205742B2', 'US20190354709A1', 'US10469514B2', 'US9860265B2']","
A system and method for characterizing a connection configuration of a client connecting to a computer system. The system can host a web service to which a client is redirected or connected to establish a client session between the client and the web service. The web service then actively and/or passively measures various attributes associated with the communication layers, such as latencies and/or configuration settings associated with each of the communication layers. Based on differences between the attributes of the communication layers, the computer system can characterize the client connection configuration. Various client connection configurations can include conventional connections, connections utilizing an external domain name service, connections through virtual private networks, connections through various proxies, and so on. Based on the characterized connection configuration, the computer system can take various actions, such as terminating the connection between the client and the computer system.
",H04,2020,"
a system and method for characterizing a connection configuration of a client connecting to a computer system the system can host a web service to which a client is redirected or connected to establish a client session between the client and the web service the web service then actively and/or passively measures various attributes associated with the communication layers such as latencies and/or configuration settings associated with each of the communication layers based on differences between the attributes of the communication layers the computer system can characterize the client connection configuration various client connection configurations can include conventional connections connections utilizing an external domain name service connections through virtual private networks connections through various proxies and so on based on the characterized connection configuration the computer system can take various actions such as terminating the connection between the client and the computer system
",5,H04_5,2,2.0,4.0,4.0
US20200244674A1,7036,Methods and systems for scalable privacy-preserving compromise detection in the cloud ,2020-07-30,"['EP3528461A1', 'US10742676B2', 'US9516062B2', 'US9258321B2', 'CN107667505B', 'US20170310703A1', 'US20190245894A1', 'US9800606B1', 'US9419989B2', 'US10218740B1', 'US10038702B2', 'US10721243B2', 'US9832217B2', 'US9753796B2', 'US10728263B1', 'US9825979B2', 'US10911470B2']","
A compromise detection system protects data centers (DCs) or other providers in the cloud. The compromise detection system can detect compromised virtual machines (VMs) through changes in network traffic characteristics while avoiding expensive data collection and preserving privacy. The compromise detection system obtains and uses periodically-obtained flow pattern summaries to detect compromised VMs. Agent-based detection on predetermined and compromised VMs can expose (using supervised learning) the network behavior of compromised VMs and then apply the learned model to all VMs in the DC. The compromise detection system can run continuously, protect the privacy of cloud customers, comply with Europe's General Data Protection Regulation (GDPR), and avoid various techniques that both erode privacy and degrade VM performance.
",H04,2020,"
a compromise detection system protects data centers (dcs) or other providers in the cloud the compromise detection system can detect compromised virtual machines (vms) through changes in network traffic characteristics while avoiding expensive data collection and preserving privacy the compromise detection system obtains and uses periodically-obtained flow pattern summaries to detect compromised vms agent-based detection on predetermined and compromised vms can expose (using supervised learning) the network behavior of compromised vms and then apply the learned model to all vms in the dc the compromise detection system can run continuously protect the privacy of cloud customers comply with europe's general data protection regulation (gdpr) and avoid various techniques that both erode privacy and degrade vm performance
",5,H04_5,2,9.0,19.0,4.0
EP3531327A1,7066,Cross machine detection techniques ,2019-08-28,"['US10805321B2', 'EP3179696B1', 'US9258321B2', 'EP2756439B1', 'US10051010B2', 'US10735458B1', 'US9306962B1', 'US9686293B2', 'US10021127B2', 'US9747446B1', 'US10587640B2', 'EP3528459B1', 'US10148685B2', 'US20160164916A1', 'CA2926579C', 'US9800605B2', 'US10148686B2']","
A computing device can install and execute a security agent that interacts with a remote security system as part of a detection loop aimed at detecting malicious attacks. The remote security system can receive observed activity patterns from the security agents associated with the computing devices. The remote security system can filter the observed activity patterns to identify ""interesting"" activity patterns, or activity patterns presenting indications of an attack, including any cross-machine activity. If a first host device is flagged for further threat analysis based on its filtered activity patterns, and at least one of the filtered activity patterns includes remotely accessing a second host device, then the second host device may also be flagged for further threat analysis.
",G06,2019,"
a computing device can install and execute a security agent that interacts with a remote security system as part of a detection loop aimed at detecting malicious attacks the remote security system can receive observed activity patterns from the security agents associated with the computing devices the remote security system can filter the observed activity patterns to identify ""interesting"" activity patterns or activity patterns presenting indications of an attack including any cross-machine activity if a first host device is flagged for further threat analysis based on its filtered activity patterns and at least one of the filtered activity patterns includes remotely accessing a second host device then the second host device may also be flagged for further threat analysis
",5,G06_5,2,2.0,0.0,4.0
US20210021632A1,7084,Assessing Security Risks of Users in a Computing Network ,2021-01-21,"['US10719625B2', 'US10257199B2', 'US10891371B2', 'US8789192B2', 'US10805314B2', 'US20180041537A1', 'EP2610776B1', 'US10432656B2', 'US9813454B2', 'US9635052B2', 'US20180139180A1', 'US10182031B2', 'US10778626B2', 'US9553918B1', 'US10798116B2', 'US10848517B1', 'US20190364019A1', 'US10623441B2', 'US9906539B2']","
Various embodiments assess security risks of users in computing networks. In some embodiments, an interaction item is sent to an end user electronic device. When the end user interacts with the interaction item, the system collects feedback data that includes information about the user's interaction with the interaction item, as well as technical information about the electronic device. The feedback is compared to a plurality of security risk scoring metrics. Based on this comparison, a security risk score for the user with respect to a computing network.
",H04,2021,"
various embodiments assess security risks of users in computing networks in some embodiments an interaction item is sent to an end user electronic device when the end user interacts with the interaction item the system collects feedback data that includes information about the user's interaction with the interaction item as well as technical information about the electronic device the feedback is compared to a plurality of security risk scoring metrics based on this comparison a security risk score for the user with respect to a computing network
",5,H04_5,2,2.0,29.0,4.0
US20200358804A1,7125,User and entity behavioral analysis with network topology enhancements ,2020-11-12,"['US9973519B2', 'US20170295199A1', 'US9712555B2', 'JP6527590B2', 'US10033766B2', 'EP3262815B1', 'US20170277873A1', 'EP3110104B1', 'US20180191578A1', 'US10728263B1', 'US9392007B2', 'US10375026B2', 'US10230750B2', 'US9516062B2', 'US10742676B2', 'US10262145B2', 'US9800606B1', 'US20190260784A1', 'US10686809B2', 'US20190182294A1', 'US9769174B2']","
A system and method for network cybersecurity analysis that uses user and entity behavioral analysis combined with network topology information to provide improved cybersecurity. The system and method involve gathering network entity information, establishing baseline behaviors for each entity, and monitoring each entity for behavioral anomalies that might indicate cybersecurity concerns. Further, the system and method involve incorporating network topology information into the analysis by generating a model of the network, annotating the model with risk and criticality information for each entity in the model and with a vulnerability level between entities, and using the model to evaluate cybersecurity risks to the network. Risks and vulnerabilities associated with user entities may be represented, in part or in whole, by the behavioral analyses and monitoring of those user entities.
",H04,2020,"
a system and method for network cybersecurity analysis that uses user and entity behavioral analysis combined with network topology information to provide improved cybersecurity the system and method involve gathering network entity information establishing baseline behaviors for each entity and monitoring each entity for behavioral anomalies that might indicate cybersecurity concerns further the system and method involve incorporating network topology information into the analysis by generating a model of the network annotating the model with risk and criticality information for each entity in the model and with a vulnerability level between entities and using the model to evaluate cybersecurity risks to the network risks and vulnerabilities associated with user entities may be represented in part or in whole by the behavioral analyses and monitoring of those user entities
",5,H04_5,2,9.0,21.0,4.0
US10666679B1,7154,Rogue foothold network defense ,2020-05-26,"['US10511636B2', 'EP3528458A1', 'US20180041537A1', 'JP6334069B2', 'US20200112493A1', 'US10728263B1', 'US20180285797A1', 'US10798121B1', 'US9888024B2', 'US9516062B2', 'US9979753B2', 'US9483742B1', 'US20190245894A1', 'US9800606B1', 'US10447708B2', 'US10121000B1', 'US10116687B2', 'US10666668B2', 'US10009381B2', 'US20180020022A1', 'US10686809B2', 'US9882920B2', 'US9740859B2', 'US20200344257A1']","
The innovation disclosed and claimed herein, in one aspect thereof, comprises systems and methods of reconfiguring network settings. The systems and methods monitor a network and detect a hacker on a network. The systems and methods can reconfigure network settings of the network upon detecting the hacker. The systems and methods can analyze the hack for severity; and determine a reconfiguration layer based on the severity of the hack. The reconfiguration layer determines a subset of the network settings to be reconfigured. The systems and methods can dismantle the network and generate a replacement network having the reconfigured set of network settings and replace the network with the replacement network.
",H04,2020,"
the innovation disclosed and claimed herein in one aspect thereof comprises systems and methods of reconfiguring network settings the systems and methods monitor a network and detect a hacker on a network the systems and methods can reconfigure network settings of the network upon detecting the hacker the systems and methods can analyze the hack for severity; and determine a reconfiguration layer based on the severity of the hack the reconfiguration layer determines a subset of the network settings to be reconfigured the systems and methods can dismantle the network and generate a replacement network having the reconfigured set of network settings and replace the network with the replacement network
",5,H04_5,2,9.0,36.0,4.0
US10868825B1,7222,Cybersecurity and threat assessment platform for computing environments ,2020-12-15,"['US10079859B2', 'US9015846B2', 'JP2018521430A', 'US9807109B2', 'US20200364350A1', 'US9411965B2', 'US10581894B2', 'US20170251003A1', 'US10681060B2', 'US20190245894A1', 'US8813235B2', 'US8490196B2', 'US9027125B2', 'US9262635B2', 'US20190260783A1', 'US10812516B2', 'US10419474B2', 'US10419499B2']","
An example network security and threat assessment system is configured to determine, based on one or more events that have occurred during execution of one or more applications, a potential security vulnerability of a target computing system, where the one or more events correspond to a node represented in the hierarchical risk model. The system is further configured to identify, based on a mapping of the node represented in the hierarchical risk model to a node represented in a hierarchical game tree model, one or more actions that are associated with the potential security vulnerability and that correspond to the node represented in the hierarchical game tree model, and to output, for display in a graphical user interface, a graphical representation of the potential security vulnerability and the one or more actions associated with the potential security vulnerability.
",H04,2020,"
an example network security and threat assessment system is configured to determine based on one or more events that have occurred during execution of one or more applications a potential security vulnerability of a target computing system where the one or more events correspond to a node represented in the hierarchical risk model the system is further configured to identify based on a mapping of the node represented in the hierarchical risk model to a node represented in a hierarchical game tree model one or more actions that are associated with the potential security vulnerability and that correspond to the node represented in the hierarchical game tree model and to output for display in a graphical user interface a graphical representation of the potential security vulnerability and the one or more actions associated with the potential security vulnerability
",5,H04_5,2,9.0,19.0,4.0
EP3664409A1,7293,Leveraging attack graphs of agile security platform ,2020-06-10,"['US20180025157A1', 'US10891371B2', 'CA2926579C', 'US9531759B2', 'US10503911B2', 'US20170214701A1', 'US10855706B2', 'US10462178B2', 'US20160308898A1', 'US20170279843A1', 'US10148685B2', 'US9092616B2', 'EP3107026B1', 'US9888024B2', 'US9807109B2', 'CA2950987C', 'US9800606B1', 'US10121000B1', 'US10051010B2', 'US10021127B2', 'US10587640B2', 'US10230746B2', 'US20190260770A1']","
Implementations of the present disclosure include receiving, from an agile security platform, attack graph (AG) data representative of one or more AGs, each AG representing one or more lateral paths within an enterprise network for reaching a target asset from one or more assets within the enterprise network, processing, by a security platform, data from one or more data sources to selectively generate at least one event, the at least one event representing a potential security risk within the enterprise network, and selectively generating, within the security platform, an alert representing the at least one event, the alert being associated with a priority within a set of alerts, the priority being is based on the AG data.

",H04,2020,"
implementations of the present disclosure include receiving from an agile security platform attack graph (ag) data representative of one or more ags each ag representing one or more lateral paths within an enterprise network for reaching a target asset from one or more assets within the enterprise network processing by a security platform data from one or more data sources to selectively generate at least one event the at least one event representing a potential security risk within the enterprise network and selectively generating within the security platform an alert representing the at least one event the alert being associated with a priority within a set of alerts the priority being is based on the ag data

",5,H04_5,2,2.0,19.0,4.0
EP3664411A1,7301,Generating attack graphs in agile security platforms ,2020-06-10,"['US8429751B2', 'AU2015203086B2', 'US9516062B2', 'US9807109B2', 'US10581894B2', 'US10051010B2', 'US9258321B2', 'US8272061B1', 'AU2016269514B2', 'EP2599026B1', 'KR102017810B1', 'US10587640B2', 'US20190260782A1', 'US10243984B2', 'EP2498198B1', 'US10419474B2', 'US20160044054A1', 'US20190327273A1']","
Implementations of the present disclosure include providing a state graph representative of a set of action states within a network, each action state representing an attack that can be performed by an adversary within the network, determining a path stealthiness value for each attack path of a set of attack paths within the network, path stealthiness values being determined based on a mapping that maps each action state to one or more technique-tactic pairs and one or more security controls, determining a path hardness value for each attack path of the set of attack paths within the network, path hardness values being determined based on a state correlation matrix that correlates action states relative to each other, and a decay factor that represents a reduction in effort required to repeatedly perform an action of an action state, and selectively generating one or more alerts based on one or more of path stealthiness values and path hardness values.

",G06,2020,"
implementations of the present disclosure include providing a state graph representative of a set of action states within a network each action state representing an attack that can be performed by an adversary within the network determining a path stealthiness value for each attack path of a set of attack paths within the network path stealthiness values being determined based on a mapping that maps each action state to one or more technique-tactic pairs and one or more security controls determining a path hardness value for each attack path of the set of attack paths within the network path hardness values being determined based on a state correlation matrix that correlates action states relative to each other and a decay factor that represents a reduction in effort required to repeatedly perform an action of an action state and selectively generating one or more alerts based on one or more of path stealthiness values and path hardness values

",5,G06_5,2,2.0,19.0,4.0
WO2019186535A1,7430,Bio-inspired agile cyber-security assurance framework ,2019-10-03,"['US10230745B2', 'US10230750B2', 'EP3528458B1', 'US9954872B2', 'US20190245894A1', 'US10728263B1', 'JP6527590B2', 'US9503470B2', 'US10812516B2', 'US10534906B1', 'JP6522707B2', 'US10574685B2', 'US8997236B2']","
A framework for efficiently and automatically exploring a data network and accurately identifying network threats, which comprises a plurality of software and hardware-based agents, distributed over the data network. The agents are capable of adjusting or reconfiguring, on the fly, the behavior of the agents and their ability to collect data in a targeted manner, so as to investigate suspicious incidents and alerts and collect data that was not yet collected by the system; collecting forensic data by executing tasks defined in workflows, being distributed threat intercepting programs and reporting about the collected forensic data, back to a Central Control Unit (C&C). Distributed threat intercepting programs (""workflows"") are used to provide instructions to agents, to perform branching and provide instructions to the Central Control Unit (C&C), which orchestrates the agents to assure proper execution of the workflows; analyzes the collected information and presents ongoing status to an operator supervising the data network.
",G06,2019,"
a framework for efficiently and automatically exploring a data network and accurately identifying network threats which comprises a plurality of software and hardware-based agents distributed over the data network the agents are capable of adjusting or reconfiguring on the fly the behavior of the agents and their ability to collect data in a targeted manner so as to investigate suspicious incidents and alerts and collect data that was not yet collected by the system; collecting forensic data by executing tasks defined in workflows being distributed threat intercepting programs and reporting about the collected forensic data back to a central control unit (c&c) distributed threat intercepting programs (""workflows"") are used to provide instructions to agents to perform branching and provide instructions to the central control unit (c&c) which orchestrates the agents to assure proper execution of the workflows; analyzes the collected information and presents ongoing status to an operator supervising the data network
",5,G06_5,2,9.0,25.0,4.0
US20200057953A1,7483,Similarity based approach for clustering and accelerating multiple incidents investigation ,2020-02-20,"['US10505981B2', 'US20170295199A1', 'US10248910B2', 'US9774614B2', 'US10511636B2', 'US10783254B2', 'US10063573B2', 'JP2019510304A', 'US10762206B2', 'US10599837B2', 'US10375026B2', 'US10432671B2', 'US20190387007A1', 'US10742676B2', 'US20200137097A1', 'US10262145B2', 'US9237161B2', 'US10104107B2', 'US9779236B2', 'US9825978B2', 'US10200390B2', 'AU2018217323B2', 'US10063654B2']","
Systems, methods, and apparatuses are provided for clustering incidents in a computing environment. An incident notification relating to an event (e.g., a potential cyberthreat or any other alert) in the computing environment is received and a set of features may be generated based on the incident notification. The set of features may be provided as an input to a machine-learning engine to identify a similar incident notification in the computing environment. The similar incident notification may include a resolved incident notification or an unresolved incident notification. An action to resolve the incident notification may be received, and the received action may thereby be executed. In some implementations, in addition to resolving the received incident notification, the action may be executed to resolve a similar unresolved incident notification identified by the machine-learning engine.
",G06,2020,"
systems methods and apparatuses are provided for clustering incidents in a computing environment an incident notification relating to an event (eg a potential cyberthreat or any other alert) in the computing environment is received and a set of features may be generated based on the incident notification the set of features may be provided as an input to a machine-learning engine to identify a similar incident notification in the computing environment the similar incident notification may include a resolved incident notification or an unresolved incident notification an action to resolve the incident notification may be received and the received action may thereby be executed in some implementations in addition to resolving the received incident notification the action may be executed to resolve a similar unresolved incident notification identified by the machine-learning engine
",5,G06_5,2,5.0,21.0,4.0
US20200244691A1,7537,Risk-informed autonomous adaptive cyber controllers ,2020-07-30,"['US9258321B2', 'US10051010B2', 'US10021127B2', 'US20170214708A1', 'US20190260783A1', 'EP3178033B1']","
Technology related to risk-informed autonomous adaptive cyber controllers is disclosed. In one example of the disclosed technology, a method includes generating probabilities of a cyber-attack occurring along an attack surface of a network. The probabilities can be generated using sensor and operational data of a network as inputs to an attack graph. The risk scores can be determined using a plurality of fault trees and the generated probabilities from the attack graph. The respective risk scores can correspond to respective nodes of an event tree. The event tree and the determined risk scores can be used to determine risk estimates for a plurality of configurations of the network. The risk estimates for the plurality of configurations of the network can be used to reconfigure the network to reduce a risk from the cyber-attack.
",H04,2020,"
technology related to risk-informed autonomous adaptive cyber controllers is disclosed in one example of the disclosed technology a method includes generating probabilities of a cyber-attack occurring along an attack surface of a network the probabilities can be generated using sensor and operational data of a network as inputs to an attack graph the risk scores can be determined using a plurality of fault trees and the generated probabilities from the attack graph the respective risk scores can correspond to respective nodes of an event tree the event tree and the determined risk scores can be used to determine risk estimates for a plurality of configurations of the network the risk estimates for the plurality of configurations of the network can be used to reconfigure the network to reduce a risk from the cyber-attack
",5,H04_5,2,2.0,25.0,4.0
US20190394220A1,7539,Automatic characterization of malicious data flows ,2019-12-26,"['US10666686B1', 'US10673873B2', 'US10462188B2', 'US10218740B1', 'US10050998B1', 'US10291654B2', 'US20200287925A1', 'JP6441957B2', 'US9680849B2', 'US10445502B1', 'US10728263B1', 'US10594707B2', 'US10003608B2', 'US9369479B2', 'US20190245894A1', 'US10902117B1', 'US9294442B1', 'US9628507B2', 'US10469514B2', 'US9197664B1', 'US9762596B2', 'US20190260770A1']","
A method of identifying malicious activity in a sequence of computer instructions includes monitoring data flows from a public network to one or more networked devices on a private network and to one or more honeypots that appear to the public network to be devices on the private network, representing each such data flow as a word, and the sequence of data flows as comprising an n-gram of two or more words. The data flows are characterized with a likelihood of being malicious based on their statistical association with the one or more honeypots relative to their statistical association with one or more networked devices. Identified malicious activity is used to train a network device to identify malicious data flows and prevent them from reaching devices on the private network.
",H04,2019,"
a method of identifying malicious activity in a sequence of computer instructions includes monitoring data flows from a public network to one or more networked devices on a private network and to one or more honeypots that appear to the public network to be devices on the private network representing each such data flow as a word and the sequence of data flows as comprising an n-gram of two or more words the data flows are characterized with a likelihood of being malicious based on their statistical association with the one or more honeypots relative to their statistical association with one or more networked devices identified malicious activity is used to train a network device to identify malicious data flows and prevent them from reaching devices on the private network
",5,H04_5,2,2.0,4.0,4.0
US20200177619A1,7547,Generating attack graphs in agile security platforms ,2020-06-04,"['US10505965B2', 'US20180025157A1', 'US20190260785A1', 'KR20180015640A', 'US10503911B2', 'US20170214701A1', 'US20180109544A1', 'US10375026B2', 'US10262145B2', 'US9800606B1', 'US9276951B2', 'US10116687B2', 'US10757127B2', 'EP3021546B1', 'US10051010B2', 'US10021127B2', 'US9917860B2', 'US10587640B2', 'US10063654B2']","
Implementations of the present disclosure include providing, by a security platform, graph data defining a graph that is representative of an enterprise network, the graph including nodes and edges between nodes, a set of nodes representing respective assets within the enterprise network, and a node representing a process executed within a system of the enterprise, each edge representing at least a portion of one or more lateral paths between assets in the enterprise network, determining, for each asset, a contribution value indicating a contribution of a respective asset to operation of the process, determining, for each asset, an impact value based on a total value of the process and a respective contribution value of the asset, and implementing one or more remediations based on a set of impact values determined for the assets, each remediation mitigating a cyber-security risk within the enterprise network.
",H04,2020,"
implementations of the present disclosure include providing by a security platform graph data defining a graph that is representative of an enterprise network the graph including nodes and edges between nodes a set of nodes representing respective assets within the enterprise network and a node representing a process executed within a system of the enterprise each edge representing at least a portion of one or more lateral paths between assets in the enterprise network determining for each asset a contribution value indicating a contribution of a respective asset to operation of the process determining for each asset an impact value based on a total value of the process and a respective contribution value of the asset and implementing one or more remediations based on a set of impact values determined for the assets each remediation mitigating a cyber-security risk within the enterprise network
",5,H04_5,2,2.0,0.0,4.0
EP3664410A1,7548,Generating attack graphs in agile security platforms ,2020-06-10,"['US20180025157A1', 'EP2498198B1', 'KR20180015640A', 'US9531759B2', 'US10503911B2', 'US20170214701A1', 'US10148685B2', 'US20180109544A1', 'US9258321B2', 'US10262145B2', 'US20180124100A1', 'US9276951B2', 'US10757127B2', 'EP2882159B1', 'US10051010B2', 'US10021127B2', 'US9917860B2', 'US10587640B2', 'EP3079336B1', 'US20190260770A1']","
Implementations of the present disclosure include providing a graph that is representative of an enterprise network and includes nodes and edges, a set of nodes representing assets within the enterprise network, each edge representing a lateral movement path between assets, determining, for each asset, a contribution value indicating a contribution of an asset, determining lateral movements paths between a first asset and a second asset, providing a lateral movement path value representative of a difficulty in traversing a respective lateral movement path, identifying a set of remediations based on remediations defined for one or more vulnerabilities associated with issues identified for assets, each remediation mitigating a cyber-security risk within the enterprise network, and prioritizing the two or more remediations based on contribution values of assets, lateral movement path values of paths, and one of lateral movement complexity values of respective segments of paths and costs of respective remediations.

",H04,2020,"
implementations of the present disclosure include providing a graph that is representative of an enterprise network and includes nodes and edges a set of nodes representing assets within the enterprise network each edge representing a lateral movement path between assets determining for each asset a contribution value indicating a contribution of an asset determining lateral movements paths between a first asset and a second asset providing a lateral movement path value representative of a difficulty in traversing a respective lateral movement path identifying a set of remediations based on remediations defined for one or more vulnerabilities associated with issues identified for assets each remediation mitigating a cyber-security risk within the enterprise network and prioritizing the two or more remediations based on contribution values of assets lateral movement path values of paths and one of lateral movement complexity values of respective segments of paths and costs of respective remediations

",5,H04_5,2,2.0,0.0,4.0
US20200089848A1,7623,Supervised learning system for identity compromise risk computation ,2020-03-19,"['US10032020B2', 'US20170295199A1', 'US8910048B2', 'US10812531B2', 'US9794276B2', 'US10536478B2', 'JP6334069B2', 'JP2019096339A', 'US10749887B2', 'US8813235B2', 'US9380052B2', 'US8327441B2', 'US9602529B2', 'US9100428B1', 'US9516062B2', 'US20190245894A1', 'US10218697B2', 'US10581924B2', 'US10547646B2', 'US10721239B2', 'US10848517B1', 'US10027649B2', 'US10063654B2', 'US10834050B2', 'US9749331B1']","
Systems are provided for improving computer security systems that are based on user risk scores. These systems can be used to improve both the accuracy and usability of the user risk scores by applying multiple tiers of machine learning to different the user risk profile components used to generate the user risk scores and in such a manner as to dynamically generate and modify the corresponding user risk scores.
",H04,2020,"
systems are provided for improving computer security systems that are based on user risk scores these systems can be used to improve both the accuracy and usability of the user risk scores by applying multiple tiers of machine learning to different the user risk profile components used to generate the user risk scores and in such a manner as to dynamically generate and modify the corresponding user risk scores
",5,H04_5,2,9.0,21.0,4.0
US20200396254A1,7644,"System and method for cybersecurity reconnaissance, analysis, and score generation using distributed systems ",2020-12-17,"['US10425383B2', 'US10911467B2', 'US10498756B2', 'US10721243B2', 'JP6527590B2', 'US10171318B2', 'US10326786B2', 'US10003610B2', 'JP2019096339A', 'US20190173904A1', 'US10116677B2', 'US10291657B2', 'US9392007B2', 'US20200137097A1', 'JP6585131B2', 'US9800606B1', 'US10121000B1', 'JP2020039137A', 'US10116687B2', 'US10333971B2', 'US9344447B2', 'US10476759B2', 'US10609059B2', 'US9860265B2']","
A system and method for cybersecurity reconnaissance, analysis, and scoring that uses distributed, cloud-based computing services to provide sufficient scalability for analysis of enterprise IT networks using only publicly available characterizations. The system and method comprise an in-memory associative array which manages a queue of vulnerability search tasks through a public-facing proxy network. The public-facing proxy network has search nodes configurable to present the network to search tools in a desired manner to control certain aspects of the search to obtain the desired results. A distributed data processing engine and cloud-based storage are used to provide scalable computing power and storage. Each of the cloud-based computing services is containerized and orchestrated for management and efficient scaling purposes.
",H04,2020,"
a system and method for cybersecurity reconnaissance analysis and scoring that uses distributed cloud-based computing services to provide sufficient scalability for analysis of enterprise it networks using only publicly available characterizations the system and method comprise an in-memory associative array which manages a queue of vulnerability search tasks through a public-facing proxy network the public-facing proxy network has search nodes configurable to present the network to search tools in a desired manner to control certain aspects of the search to obtain the desired results a distributed data processing engine and cloud-based storage are used to provide scalable computing power and storage each of the cloud-based computing services is containerized and orchestrated for management and efficient scaling purposes
",5,H04_5,2,2.0,4.0,4.0
US10491613B1,7831,Systems and methods for secure communication in cloud computing environments ,2019-11-26,"['US9152789B2', 'US10693749B2', 'US9185124B2', 'US10419458B2', 'US10721243B2', 'JP6518844B1', 'US8429751B2', 'US9065800B2', 'US9560068B2', 'US10476909B1', 'US9430646B1', 'US9602530B2', 'US9838413B2', 'US9686301B2', 'US9392007B2', 'US9083741B2', 'US9609015B2', 'US10701035B2', 'US9838408B1', 'CN101399835B', 'US9848016B2']","
Disclosed embodiments provide systems, methods, and computer-readable storage media for secure data communication between two devices. A disclosed system responds to a request from an originating communication device in a first network to connect with a communication device in a second network, for communication, by receiving a request from the communication device in the first network, the request including payload data and a destination network address in the second network. The system then transmits the received payload data to the destination address in the second network after analyzing the payload data for network intrusion. When the analysis does not indicate network intrusion, the system determines a route to the destination network address by looking up the destination address in a routing table and forwarding the payload data to the destination network address in the second network. If the analysis indicates network intrusion, the system discards the payload data.
",H04,2019,"
disclosed embodiments provide systems methods and computer-readable storage media for secure data communication between two devices a disclosed system responds to a request from an originating communication device in a first network to connect with a communication device in a second network for communication by receiving a request from the communication device in the first network the request including payload data and a destination network address in the second network the system then transmits the received payload data to the destination address in the second network after analyzing the payload data for network intrusion when the analysis does not indicate network intrusion the system determines a route to the destination network address by looking up the destination address in a routing table and forwarding the payload data to the destination network address in the second network if the analysis indicates network intrusion the system discards the payload data
",5,H04_5,2,2.0,4.0,4.0
US20200374316A1,7915,System and method for self-adjusting cybersecurity analysis and score generation ,2020-11-26,"['US9942250B2', 'US20170295199A1', 'CN106031118B', 'CA2966408C', 'US10248910B2', 'US10536478B2', 'US10326786B2', 'JP6687799B2', 'US9609010B2', 'US20190173904A1', 'US10880320B2', 'US20190012478A1', 'US10291657B2', 'US9392007B2', 'JP6585131B2', 'US10193909B2', 'US10121000B1', 'US10116687B2', 'US10333971B2', 'US10476759B2', 'US20190364019A1', 'US20180113807A1']","
A system and method for self-adjusting cybersecurity analysis and score generation, wherein a reconnaissance engine gathers data about a client's computer network from the client, from devices and systems on the client's network, and from the Internet regarding various aspects of cybersecurity. Each of these aspects is evaluated independently, weighted, and cross-referenced to generate a cybersecurity score by aggregating individual vulnerability and risk factors together to provide a comprehensive characterization of cybersecurity risk using a transparent and traceable methodology. The scoring system itself can be used as a state machine with the cybersecurity score acting as a feedback mechanism, in which a cybersecurity score can be set at a level appropriate for a given organization, and data from clients or groups of clients with more extensive reporting can be used to supplement data for clients or groups of clients with less extensive reporting to enhance cybersecurity analysis and scoring.
",H04,2020,"
a system and method for self-adjusting cybersecurity analysis and score generation wherein a reconnaissance engine gathers data about a client's computer network from the client from devices and systems on the client's network and from the internet regarding various aspects of cybersecurity each of these aspects is evaluated independently weighted and cross-referenced to generate a cybersecurity score by aggregating individual vulnerability and risk factors together to provide a comprehensive characterization of cybersecurity risk using a transparent and traceable methodology the scoring system itself can be used as a state machine with the cybersecurity score acting as a feedback mechanism in which a cybersecurity score can be set at a level appropriate for a given organization and data from clients or groups of clients with more extensive reporting can be used to supplement data for clients or groups of clients with less extensive reporting to enhance cybersecurity analysis and scoring
",5,H04_5,2,2.0,21.0,4.0
EP3667532A1,7957,Methods for detecting and mitigating malicious network activity based on dynamic application context and devices thereof ,2020-06-17,"['US10666686B1', 'US10291650B2', 'US9152789B2', 'US10721243B2', 'US9306964B2', 'US10135786B2', 'EP2779574B1', 'JP6196397B2', 'US10686804B2', 'US10243984B2', 'US10003608B2', 'US20190260795A1', 'US9769204B2', 'US9386034B2', 'JP2019106216A', 'US9516054B2', 'US10554687B1', 'US10333971B2', 'US9609015B2', 'US10051010B2', 'US10567247B2', 'US10021127B2', 'US9294442B1', 'US10091237B2']","
Methods, non-transitory computer readable media, attack mitigation apparatuses, and network security systems that maintain an application context model for a protected application based on ingested logs. The application context model 5 includes a map of network infrastructure associated with the protected application. Using the application context model, potential attack(s) against the protected application are identified and possible mitigation action(s) to take in response to one or more of the identified potential attack(s) are scored. A stored policy is executed to evaluate the possible mitigation action(s) based on the scoring. One or more of the 10 possible mitigation action(s) are initiated on the identified potential attack(s) based on the evaluation. With this technology, malicious network activity can be more effectively and quickly detected and mitigated resulting in improved network security.

",G06,2020,"
methods non-transitory computer readable media attack mitigation apparatuses and network security systems that maintain an application context model for a protected application based on ingested logs the application context model 5 includes a map of network infrastructure associated with the protected application using the application context model potential attack(s) against the protected application are identified and possible mitigation action(s) to take in response to one or more of the identified potential attack(s) are scored a stored policy is executed to evaluate the possible mitigation action(s) based on the scoring one or more of the 10 possible mitigation action(s) are initiated on the identified potential attack(s) based on the evaluation with this technology malicious network activity can be more effectively and quickly detected and mitigated resulting in improved network security

",5,G06_5,2,2.0,0.0,4.0
US20200233955A1,7965,Risk score generation utilizing monitored behavior and predicted impact of compromise ,2020-07-23,"['US9767291B2', 'US9411965B2', 'US20170295199A1', 'EP3183666B1', 'US20180278649A1', 'US20170251013A1', 'US9596257B2', 'US10778725B2', 'US10073864B1', 'US9552480B2', 'US20170277873A1', 'US10515211B2', 'US10063373B2', 'US9753796B2', 'US9444820B2', 'US20180276378A1', 'US9946717B2', 'US10742676B2', 'US9563771B2', 'US20190245894A1', 'US20170154188A1', 'US10735454B2', 'US10063572B2', 'US10063654B2', 'US9967264B2']","
A method includes monitoring user behavior in an enterprise system, identifying a given user of the enterprise system associated with a given portion of the monitored user behavior, determining a predicted impact of compromise of the given user on the enterprise system, generating a risk score for the given user based on the predicted impact of compromise and the given portion of the monitored user behavior, and identifying one or more remedial actions to reduce the risk score for the given user. The method also includes implementing, prior to detecting compromise of the given user, at least one of the remedial actions to modify a configuration of at least one asset in the enterprise system, the at least one asset comprising at least one of a physical computing resource and a virtual computing resource in the enterprise system.
",G06,2020,"
a method includes monitoring user behavior in an enterprise system identifying a given user of the enterprise system associated with a given portion of the monitored user behavior determining a predicted impact of compromise of the given user on the enterprise system generating a risk score for the given user based on the predicted impact of compromise and the given portion of the monitored user behavior and identifying one or more remedial actions to reduce the risk score for the given user the method also includes implementing prior to detecting compromise of the given user at least one of the remedial actions to modify a configuration of at least one asset in the enterprise system the at least one asset comprising at least one of a physical computing resource and a virtual computing resource in the enterprise system
",5,G06_5,2,9.0,21.0,4.0
US20200327223A1,7988,Affectedness scoring engine for cyber threat intelligence services ,2020-10-15,"['US10200390B2', 'US9832213B2', 'US8095984B2', 'US9807109B2', 'US20200137097A1', 'US8272061B1', 'US10270798B2', 'US20180211047A1', 'US20190014153A1', 'US20180025157A1', 'US8793790B2', 'US20190260804A1', 'EP2498198B1', 'US10609059B2', 'US10855706B2', 'US10412111B2', 'US10313382B2']","
A network-accessible cyber-threat security analytics service is configured to characterize and respond to a description that includes threat indicators (e.g., IOCs), and an initial severity. Enterprises register with the service by providing identifying information, such as industry, geographies, and the like. For each threat indicator, a query is sent to each of a set of one or more security knowledge bases, and at least some of the queries are scoped by the enterprise industry/geo information specified. The knowledge bases may vary but typically include: a managed security service, a cyber threat intelligence service, and a federated search engine that searches across one or more enterprise-connected data sources. Responses to the queries are collected. A response provides an indication whether the threat indicator identified in the query has been sighted in the knowledge base and the frequency. The system then adjusts the initial severity to reflect the indications returned from querying the security knowledge bases.
",G06,2020,"
a network-accessible cyber-threat security analytics service is configured to characterize and respond to a description that includes threat indicators (eg iocs) and an initial severity enterprises register with the service by providing identifying information such as industry geographies and the like for each threat indicator a query is sent to each of a set of one or more security knowledge bases and at least some of the queries are scoped by the enterprise industry/geo information specified the knowledge bases may vary but typically include: a managed security service a cyber threat intelligence service and a federated search engine that searches across one or more enterprise-connected data sources responses to the queries are collected a response provides an indication whether the threat indicator identified in the query has been sighted in the knowledge base and the frequency the system then adjusts the initial severity to reflect the indications returned from querying the security knowledge bases
",5,G06_5,2,11.0,19.0,4.0
US20210021637A1,8043,Method and system for detecting and mitigating network breaches ,2021-01-21,"['US10873603B2', 'US10511623B2', 'US10235519B2', 'US20180041537A1', 'US10003610B2', 'US10515211B2', 'US9800599B2', 'US9609010B2', 'US10728263B1', 'US10762206B2', 'US20190012478A1', 'US9392007B2', 'US20190349377A1', 'US10333990B2', 'US10742676B2', 'US10489588B2', 'US20190245894A1', 'US10193909B2', 'US10121000B1', 'US20190260784A1', 'US10205742B2', 'US20190364019A1', 'US10491614B2', 'US10230746B2']","
Disclosed is a method and a system for detecting and managing phishing attack. The security product of the present invention enables a user to look at the activity of any other user and all of their owned devices before and after a phishing attack targeted at that user. The present invention also enables the user to look at the activity of the infrastructure and determine if an attack has occurred and what is the impact of that attack. The present invention also enables the user to view various attacks on their infrastructure.
",H04,2021,"
disclosed is a method and a system for detecting and managing phishing attack the security product of the present invention enables a user to look at the activity of any other user and all of their owned devices before and after a phishing attack targeted at that user the present invention also enables the user to look at the activity of the infrastructure and determine if an attack has occurred and what is the impact of that attack the present invention also enables the user to view various attacks on their infrastructure
",5,H04_5,2,9.0,21.0,4.0
US10771489B1,8068,Artificial intelligence method and system for detecting anomalies in a computer network ,2020-09-08,"['US9516062B2', 'US9979753B2', 'US10462188B2', 'US9942250B2', 'US10708285B2', 'EP3528459B1', 'US10721243B2', 'US10243984B2', 'US8997236B2', 'US20170093910A1', 'US10003608B2', 'US10454894B2', 'US9832227B2', 'US10193919B2']","
A system comprises an enterprise network system and engine. The engine has a discovery module coupled to a switch device, an AI and machine learning based monitoring and detection module coupled to the switch device, and a remediation module coupled to the switch device. The remediation module is configured to initiate a remediation process based upon the detection of at least one of the anomalies from the flow of data.
",H04,2020,"
a system comprises an enterprise network system and engine the engine has a discovery module coupled to a switch device an ai and machine learning based monitoring and detection module coupled to the switch device and a remediation module coupled to the switch device the remediation module is configured to initiate a remediation process based upon the detection of at least one of the anomalies from the flow of data
",5,H04_5,2,2.0,25.0,4.0
US20200012990A1,8416,Systems and methods of network-based intelligent cyber-security ,2020-01-09,"['US9965937B2', 'US10719625B2', 'US20170098086A1', 'US10257199B2', 'US10681060B2', 'US10708291B2', 'US10193845B2', 'US8996437B2', 'US9813454B2', 'US10671469B2', 'US10749887B2', 'US10855712B2', 'US10673870B2', 'US10305925B2', 'US10826866B2', 'US9553918B1', 'US10798116B2', 'US10217071B2', 'US10264014B2', 'US20160044057A1', 'US10572882B2', 'US10467630B2', 'US10609059B2']","
A comprehensive security operation platform with artificial intelligence capabilities which may collaborate and/or automate tasks, including complex and/or redundant security tasks. An automated system may assist security analysts and security operations center managers in discovering security incidents. A comprehensive security operations platform may combine intelligent automation scale and collaborative human social learning, wisdom and experience. An automated system may empower security analysts to resolve incidents faster and reduce redundancy through collaboration with peers in virtual war rooms. An automated system may automate security analyst work by executing tasks from the war room or by following playbooks defined by the security analysts.
",G06,2020,"
a comprehensive security operation platform with artificial intelligence capabilities which may collaborate and/or automate tasks including complex and/or redundant security tasks an automated system may assist security analysts and security operations center managers in discovering security incidents a comprehensive security operations platform may combine intelligent automation scale and collaborative human social learning wisdom and experience an automated system may empower security analysts to resolve incidents faster and reduce redundancy through collaboration with peers in virtual war rooms an automated system may automate security analyst work by executing tasks from the war room or by following playbooks defined by the security analysts
",5,G06_5,2,8.0,29.0,4.0
US20200137102A1,8449,Rule-based assignment of criticality scores to assets and generation of a criticality rules table ,2020-04-30,"['US10841324B2', 'US10462188B2', 'US9124627B2', 'US9729567B2', 'US10721243B2', 'US20190020689A1', 'US20200287925A1', 'EP3362938B1', 'US10515211B2', 'US20200314124A1', 'US10362032B2', 'US10476762B2', 'US9516062B2', 'US10367815B2', 'EP3304824B1', 'US9800606B1', 'US9847965B2', 'US10091238B2', 'US10097577B2', 'US10554687B1', 'US20180109558A1', 'US10469514B2', 'US9467464B2', 'US9191403B2', 'US10601853B2']","
In an embodiment, a management system obtains a criticality rules table that includes a plurality of rules mapped to corresponding criticality scores indicative of a level of risk in the event that an associated asset of a managed network is compromised by a third party. The one embodiment, the criticality rules table is updated based upon machine learning and/or feedback from an operator of the managed network. In another embodiment, the criticality rules table is used to assign one or more criticality scores to one or more assets based on one or more attributes of one or more assets, and the criticality rules table.
",H04,2020,"
in an embodiment a management system obtains a criticality rules table that includes a plurality of rules mapped to corresponding criticality scores indicative of a level of risk in the event that an associated asset of a managed network is compromised by a third party the one embodiment the criticality rules table is updated based upon machine learning and/or feedback from an operator of the managed network in another embodiment the criticality rules table is used to assign one or more criticality scores to one or more assets based on one or more attributes of one or more assets and the criticality rules table
",5,H04_5,2,2.0,4.0,4.0
US20190349356A1,8548,Cybersecurity intelligence platform that predicts impending cyber threats and proactively protects heterogeneous devices using highly-scalable bidirectional secure connections in a federated threat intelligence environment ,2019-11-14,"['US10666686B1', 'US10291650B2', 'US9973517B2', 'US9596257B2', 'US20180337952A1', 'US9306964B2', 'US20200287925A1', 'US10193929B2', 'US10454953B1', 'US10623435B2', 'US9852292B2', 'US9940454B2', 'US10003608B2', 'US20190245894A1', 'US10454894B2', 'US9609015B2', 'US9294442B1', 'US10469514B2', 'EP3314854B1', 'US9258328B2', 'US9369476B2', 'US9787723B2']","
A method implemented at a cybersecurity intelligence platform for responding to a cyber-attack is disclosed. The method comprises: detecting an attack at a client device; receiving raw data from the attacked client device, the raw data comprising device data and attack-related data; performing fingerprinting analysis and attacker analysis based on the raw data to generate fingerprinting data and attacker data; issuing an incidence response to the attacked client device; and issuing a federated response to a plurality of client devices belonging to a class based on the fingerprinting data and the attacker data. The client device and a cloud component of the cybersecurity intelligence platform communicate with each other through a bi-directional secure connection that is established as needed. The cybersecurity intelligence platform coordinates responses to cyber-attacks against a plurality of client devices of heterogeneous types.
",H04,2019,"
a method implemented at a cybersecurity intelligence platform for responding to a cyber-attack is disclosed the method comprises: detecting an attack at a client device; receiving raw data from the attacked client device the raw data comprising device data and attack-related data; performing fingerprinting analysis and attacker analysis based on the raw data to generate fingerprinting data and attacker data; issuing an incidence response to the attacked client device; and issuing a federated response to a plurality of client devices belonging to a class based on the fingerprinting data and the attacker data the client device and a cloud component of the cybersecurity intelligence platform communicate with each other through a bi-directional secure connection that is established as needed the cybersecurity intelligence platform coordinates responses to cyber-attacks against a plurality of client devices of heterogeneous types
",5,H04_5,2,2.0,4.0,4.0
US20200160344A1,8707,Blockchain Transaction Analysis and Anti-Money Laundering Compliance Systems and Methods ,2020-05-21,"['IL246744A', 'US8311907B2', 'US10708291B2', 'US8875267B1', 'US10503911B2', 'US20170132635A1', 'US10037533B2', 'WO2017196609A1', 'US10462169B2', 'US9904914B1', 'US10749884B2', 'US10262145B2', 'US9979743B2', 'CN106575327B', 'US10135834B1', 'US9292695B1', 'US10284570B2', 'JP6514218B2', 'US9015846B2', 'EP2748781B1']","
Blockchain transaction analysis and anti-money laundering compliance systems and methods are disclosed herein. An example method includes determining entities in a proposed cryptocurrency transaction, evaluating each of the entities in the proposed cryptocurrency transaction to determine if the entities have a known risk, generating a transaction risk score for the proposed cryptocurrency transaction based on the evaluation of each of the entities, and allowing, flagging, or denying the proposed cryptocurrency transaction based on the transaction risk score.
",G06,2020,"
blockchain transaction analysis and anti-money laundering compliance systems and methods are disclosed herein an example method includes determining entities in a proposed cryptocurrency transaction evaluating each of the entities in the proposed cryptocurrency transaction to determine if the entities have a known risk generating a transaction risk score for the proposed cryptocurrency transaction based on the evaluation of each of the entities and allowing flagging or denying the proposed cryptocurrency transaction based on the transaction risk score
",5,G06_5,2,2.0,21.0,4.0
US20210019674A1,8761,Risk profiling and rating of extended relationships using ontological databases ,2021-01-21,"['US10798116B2', 'US10367827B2', 'US10192051B2', 'US10404741B2', 'US10205637B2', 'EP3528458B1', 'US10270788B2', 'US10681060B2', 'US10019744B2', 'US9213990B2', 'EP2963577B1', 'US20150106875A1', 'US20190132214A1', 'US20200145441A1', 'US9503472B2', 'US10609059B2', 'US10855706B2', 'US10666668B2']","
A system and method for understanding and analyzing risk for use in business and financial decisions. The system and method allow a user to query an individual or business and returns a profile and a rating associated with the risk of that entity. The profile consists of an advanced temporospatial weighted and directional knowledge graph that is generated by ingesting, processing, and transforming a vast amount of complex data for the purpose of human comprehension and further system analysis. Meanwhile, the rating is generated from a risk analysis algorithm that conducts a comprehensive analysis by categorizing and weighting all available risk factors. The system and method provide advanced insights and analytics into the inherent state, value, and risk associated with an entity and its relations.
",G06,2021,"
a system and method for understanding and analyzing risk for use in business and financial decisions the system and method allow a user to query an individual or business and returns a profile and a rating associated with the risk of that entity the profile consists of an advanced temporospatial weighted and directional knowledge graph that is generated by ingesting processing and transforming a vast amount of complex data for the purpose of human comprehension and further system analysis meanwhile the rating is generated from a risk analysis algorithm that conducts a comprehensive analysis by categorizing and weighting all available risk factors the system and method provide advanced insights and analytics into the inherent state value and risk associated with an entity and its relations
",5,G06_5,2,0.0,0.0,4.0
US20200336508A1,8762,"Method and system to stitch cybersecurity, measure network cyber health, generate business and network risks, enable realtime zero trust verifications, and recommend ordered, predictive risk mitigations ",2020-10-22,"['US9973519B2', 'US10462188B2', 'US10721243B2', 'US10033766B2', 'US10805321B2', 'US20190173904A1', 'US10003608B2', 'US20180041527A1', 'US9392007B2', 'US9979753B2', 'US9800606B1', 'US10812497B2', 'US10121000B1', 'JP2020039137A', 'US10630706B2', 'US10554687B1', 'US20190364019A1', 'US10021127B2', 'US20200177637A1', 'US10063654B2', 'US10574685B2', 'US10628582B2']","
Disclosed is a method and a system for using techniques to stitch cybersecurity, generate network risks and predictive mitigations. The method includes collecting data from several data sources and labeling events. The method includes creating a profile for each entity observed in the data with the behavior of the profile determined through the analytical analysis of the events in which the entity participates including the transference of labels from events to the entity. One or more profiles of an organization are identified that have changed and the change is processed using specific attack sequence detection to identify one or more risks associated with each profile. The method further includes notifying one or more users associated with the one or more profiles based on the one or more risks.
",H04,2020,"
disclosed is a method and a system for using techniques to stitch cybersecurity generate network risks and predictive mitigations the method includes collecting data from several data sources and labeling events the method includes creating a profile for each entity observed in the data with the behavior of the profile determined through the analytical analysis of the events in which the entity participates including the transference of labels from events to the entity one or more profiles of an organization are identified that have changed and the change is processed using specific attack sequence detection to identify one or more risks associated with each profile the method further includes notifying one or more users associated with the one or more profiles based on the one or more risks
",5,H04_5,2,2.0,21.0,4.0
US10868820B2,8930,Systems and methods for determining individual and group risk scores ,2020-12-15,"['US20170126712A1', 'US10681060B2', 'US10708291B2', 'US10783254B2', 'US9608977B2', 'US20170126717A1', 'US9160766B2', 'US10509907B2', 'JP5913754B2', 'US10666670B2', 'US20190363893A1', 'US8787553B2', 'US9336483B1', 'US8799456B2', 'US10868809B2', 'US10735432B2', 'US10686809B2', 'US10050868B2', 'US10542032B2', 'US20190132214A1', 'US20160065594A1', 'JP2020510926A', 'US9871758B2']","
Embodiments disclosed herein describe a server, for example a security awareness server or an artificial intelligence machine learning system that establishes a risk score or vulnerable for a user of a security awareness system, or for a group of users of a security awareness system. The server may create a frequency score for a user, which predicts the frequency at which the user is to be hit with a malicious attack. The frequency score may be based on at least a job score, which may be represented by a value that is based on the type of job the user has, and a breach score that may be represented by a value that is based on the user's level of exposure to email.
",H04,2020,"
embodiments disclosed herein describe a server for example a security awareness server or an artificial intelligence machine learning system that establishes a risk score or vulnerable for a user of a security awareness system or for a group of users of a security awareness system the server may create a frequency score for a user which predicts the frequency at which the user is to be hit with a malicious attack the frequency score may be based on at least a job score which may be represented by a value that is based on the type of job the user has and a breach score that may be represented by a value that is based on the user's level of exposure to email
",5,H04_5,2,0.0,0.0,4.0
US20200296137A1,9028,Cybersecurity profiling and rating using active and passive external reconnaissance ,2020-09-17,"['US9832213B2', 'US9973519B2', 'US10419465B2', 'AU2017221858B2', 'US10491619B2', 'US10476905B2', 'US10805321B2', 'US9609010B2', 'US10728263B1', 'US10762206B2', 'US10375026B2', 'US9369479B2', 'US10262145B2', 'EP3304824B1', 'US10121000B1', 'US20190260783A1', 'JP2020039137A', 'US10051010B2', 'US10021127B2', 'US10721268B2', 'US10609059B2', 'US10628582B2']","
A system and method for generating comprehensive security profiles and ratings for organizations that takes into account the organization's infrastructure and operations in generating the profile, and the context and purpose of the rating to be generated related to the profile. The system and method may further comprise gathering data about the totality of the organization's infrastructure and operations, generating a cybersecurity profile using active and passive internal and external reconnaissance of the organization to determine cybersecurity vulnerabilities and potential impacts to the business in light of the information gathered about the organization's infrastructure and operations, and generating cybersecurity scores and ratings that take into account all of the above information, plus the context and purpose of the score or rating to be generated based on the cybersecurity profile.
",H04,2020,"
a system and method for generating comprehensive security profiles and ratings for organizations that takes into account the organization's infrastructure and operations in generating the profile and the context and purpose of the rating to be generated related to the profile the system and method may further comprise gathering data about the totality of the organization's infrastructure and operations generating a cybersecurity profile using active and passive internal and external reconnaissance of the organization to determine cybersecurity vulnerabilities and potential impacts to the business in light of the information gathered about the organization's infrastructure and operations and generating cybersecurity scores and ratings that take into account all of the above information plus the context and purpose of the score or rating to be generated based on the cybersecurity profile
",5,H04_5,2,2.0,4.0,4.0
US10419480B1,9230,"System, method, and computer program for real-time cyber intrusion detection and intruder identity analysis ",2019-09-17,"['US8839442B2', 'US10673873B2', 'CN107251513B', 'US10462188B2', 'US10505900B2', 'JP6476339B6', 'RU2514138C1', 'US9306964B2', 'US10264001B2', 'EP2779574B1', 'JP6441957B2', 'US20200280567A1', 'US9680849B2', 'US10003608B2', 'US10230750B2', 'US9516062B2', 'US9369479B2', 'US20180159874A1', 'US20190354709A1', 'US9942220B2', 'US9848016B2', 'EP2608481B1']","
A system, method, and computer program product are provided for real-time cyber intrusion detection and intruder identity analysis. In operation, an intrusion detection system detects an intrusion by a cyber intruder attempting to access a first area of a system utilizing an application programming interface layer (API) layer. The intrusion detection system directs the cyber intruder to a secure second area of the system that mimics the first area of the system via the API layer. Further, the intrusion detection system notifies a security system of the intrusion.
",H04,2019,"
a system method and computer program product are provided for real-time cyber intrusion detection and intruder identity analysis in operation an intrusion detection system detects an intrusion by a cyber intruder attempting to access a first area of a system utilizing an application programming interface layer (api) layer the intrusion detection system directs the cyber intruder to a secure second area of the system that mimics the first area of the system via the api layer further the intrusion detection system notifies a security system of the intrusion
",5,H04_5,2,2.0,4.0,4.0
US20150341374A1,9263,Unified interface for analysis of and response to suspicious activity on a telecommunications network ,2015-11-26,"['US9832213B2', 'EP3461103B1', 'US20160301704A1', 'US10467411B1', 'AU2016269514B2', 'US9942250B2', 'US10721243B2', 'US20160330224A1', 'US20170201540A1', 'US10326790B2', 'US10148685B2', 'US10728263B1', 'US9930055B2', 'AU2018203393B2', 'US10855718B2', 'CA2968201C', 'US10812497B2', 'US20190260784A1', 'US10051010B2', 'US10021127B2']","
The invention is a platform for analysis of disparate data sources and automated and or user driven incident response via a single user interface. The platform includes an agent server, message broker, index, correlation engine and user interface. Telemetry sources may include network appliances, mobile devices, and standard terminals. Each telemetry type has interactions that enable incident response from the unified interface.
",H04,2015,"
the invention is a platform for analysis of disparate data sources and automated and or user driven incident response via a single user interface the platform includes an agent server message broker index correlation engine and user interface telemetry sources may include network appliances mobile devices and standard terminals each telemetry type has interactions that enable incident response from the unified interface
",5,H04_5,2,2.0,0.0,4.0
US10521584B1,9371,Computer threat analysis service ,2019-12-31,"['US9973519B2', 'JP6527590B2', 'US9501639B2', 'US10348759B2', 'US9985989B2', 'US10728263B1', 'US10904237B2', 'US10003608B2', 'US9516062B2', 'US9369479B2', 'US20190245894A1', 'US10121000B1', 'US9813444B2', 'US9888029B2', 'US9609019B2', 'US20190364019A1', 'US10805265B2', 'US9762596B2', 'US10348771B2', 'US20190260770A1']","
A system acquires diagnostic information from event logs, trace files, and other diagnostic sources to reduce a set of event records. The event records are arranged in a graph based on correlations between individual event records. Correlations may be based on time, account, credentials, tags, instance identifiers, or other characteristics. The system analyzes the graph to identify anomalies such as data exfiltration anomalies, system compromises, or security events. In some implementations, the system deploys decoy resources within a customer computing environment. Interactions with the decoy resources are captured as event records and added to the graph.
",H04,2019,"
a system acquires diagnostic information from event logs trace files and other diagnostic sources to reduce a set of event records the event records are arranged in a graph based on correlations between individual event records correlations may be based on time account credentials tags instance identifiers or other characteristics the system analyzes the graph to identify anomalies such as data exfiltration anomalies system compromises or security events in some implementations the system deploys decoy resources within a customer computing environment interactions with the decoy resources are captured as event records and added to the graph
",5,H04_5,2,2.0,21.0,4.0
US20190007429A1,9409,Home-Based Physical and Cyber Integrated Security-Intrusion Detection System (PCIS-IDS) ,2019-01-03,"['WO2017131963A1', 'US20190058724A1', 'US10721243B2', 'US10326778B2', 'US20190306181A1', 'US20160308898A1', 'EP2774070B1', 'US10003608B2', 'US9769204B2', 'US8683588B2', 'US10812497B2', 'US9356959B2', 'US8931099B2', 'US9609019B2', 'US9838426B2', 'US20150026809A1', 'US10230761B1', 'US8079080B2', 'US9003527B2']","
Provided is an integrated physical security and cyber security intrusion and anomaly detection method for determining physical or electronic ingress/egress of a person/device and/or data/information from a home/facility/premise. The method includes processing data and information obtained from physical security system sensors, wired/wireless network traffic, and third-party sources, and creating sensor and network traffic profile, baselines and detecting anomalies and writing all related data to either a local database or a remotely managed database at a monitoring center.
",H04,2019,"
provided is an integrated physical security and cyber security intrusion and anomaly detection method for determining physical or electronic ingress/egress of a person/device and/or data/information from a home/facility/premise the method includes processing data and information obtained from physical security system sensors wired/wireless network traffic and third-party sources and creating sensor and network traffic profile baselines and detecting anomalies and writing all related data to either a local database or a remotely managed database at a monitoring center
",5,H04_5,2,2.0,4.0,4.0
US10169585B1,188,System and methods for advanced malware detection through placement of transition events ,2019-01-01,"['US10848521B1', 'US9912681B1', 'US9294442B1', 'US10528726B1', 'US10902117B1', 'EP3430556B1', 'EP2984600B1', 'US10834107B1', 'US9507939B1', 'US10887328B1', 'RU2646352C2', 'US10657251B1', 'US10476909B1', 'US10467414B1', 'US10216927B1', 'US10225280B2', 'US9825976B1', 'RU2645268C2', 'US10817602B2', 'US10282548B1', 'US10872151B1', 'RU2698776C2', 'US9824216B1', 'US9846776B1', 'US10467406B2']","
A non-transitory storage medium including instructions that are executable by one or more processors to perform operations including instrumenting a VM is shown. The VM is used to process an object to determine whether the object is associated with malware. Logic within the VM analyzes memory allocated for a process within the VM for a point of interest (POI), the POI being an address of one of a set predetermined instructions likely to be associated with malware. The VMM detects a memory violation during processing of the object and responsive to detecting the memory violation, injects a transition event at the POI on the page on which the POI is located in memory. Further, responsive to detecting an attempted execution of the transition event, the VMM (i) emulates an instruction located at the POI, and (ii) the logic within the VM performs one or more malware detection routines.
",G06,2019,"
a non-transitory storage medium including instructions that are executable by one or more processors to perform operations including instrumenting a vm is shown the vm is used to process an object to determine whether the object is associated with malware logic within the vm analyzes memory allocated for a process within the vm for a point of interest (poi) the poi being an address of one of a set predetermined instructions likely to be associated with malware the vmm detects a memory violation during processing of the object and responsive to detecting the memory violation injects a transition event at the poi on the page on which the poi is located in memory further responsive to detecting an attempted execution of the transition event the vmm (i) emulates an instruction located at the poi and (ii) the logic within the vm performs one or more malware detection routines
",6,G06_6,2,10.0,121.0,3.0
US10735458B1,214,Detection center to detect targeted malware ,2020-08-04,"['US10445502B1', 'US10728263B1', 'AU2018217323B2', 'US10397246B2', 'US9635052B2', 'EP2953298B1', 'US9888024B2', 'US10673884B2', 'US10713362B1', 'US9838407B1', 'US20190215335A1', 'US10581898B1', 'US9501639B2', 'US20190260785A1', 'US10805321B2', 'US9906554B2', 'US10326778B2', 'US10637880B1', 'US9241010B1', 'US10270798B2']","
A computerized method is described that is adapted to compare extracted features of a received object under analysis with one or more features associated with each known malicious object of a plurality of known malicious objects accessible to the one or more servers. Responsive to determining that the extracted features satisfy a prescribed level of correlation with the one or more features of a first known malicious object of the plurality of known malicious objects, identifying the received object as a malicious object. Also, responsive to determining that the extracted features fail to satisfy the prescribed level of correlation, conducting a second analysis that includes a comparison of the extracted features to the one or more features associated with each of the plurality of known malicious objects being of a type of malware other than malware targeting a specific entity.
",H04,2020,"
a computerized method is described that is adapted to compare extracted features of a received object under analysis with one or more features associated with each known malicious object of a plurality of known malicious objects accessible to the one or more servers responsive to determining that the extracted features satisfy a prescribed level of correlation with the one or more features of a first known malicious object of the plurality of known malicious objects identifying the received object as a malicious object also responsive to determining that the extracted features fail to satisfy the prescribed level of correlation conducting a second analysis that includes a comparison of the extracted features to the one or more features associated with each of the plurality of known malicious objects being of a type of malware other than malware targeting a specific entity
",6,H04_6,2,2.0,99.0,3.0
US10063584B1,257,Advanced processing of electronic messages with attachments in a cybersecurity system ,2018-08-28,"['US10243991B2', 'US20190215335A1', 'US9497216B2', 'US20170155666A1', 'US9906554B2', 'US10116678B2', 'US9985978B2', 'US10530806B2', 'US9876753B1', 'JP6093396B2', 'US10715543B2', 'US20200082310A1', 'US8813239B2', 'US10764316B2']","
A system manages computer security risks associated with message file attachments. When a user of an electronic device with a messaging client attempts to open an attachment to a message that is in the client's inbox, the system will analyze the message to determine whether the message is a legitimate message or a potentially malicious message without the need to actually process or analyze the attachment itself. If the system determines that the received message is a legitimate message, the system will permit the attachment to actuate on the client computing device. If the system determines that the received message is not or may not be a legitimate message, the system will continue preventing the attachment from actuating on the client computing device.
",H04,2018,"
a system manages computer security risks associated with message file attachments when a user of an electronic device with a messaging client attempts to open an attachment to a message that is in the client's inbox the system will analyze the message to determine whether the message is a legitimate message or a potentially malicious message without the need to actually process or analyze the attachment itself if the system determines that the received message is a legitimate message the system will permit the attachment to actuate on the client computing device if the system determines that the received message is not or may not be a legitimate message the system will continue preventing the attachment from actuating on the client computing device
",6,H04_6,2,2.0,39.0,3.0
US10235519B2,357,Methods and systems for identifying potential enterprise software threats based on visual and non-visual data ,2019-03-19,"['US9912694B2', 'US10164993B2', 'US10482260B1', 'US10834124B2', 'EP3113064B1', 'US9294442B1', 'US10104102B1', 'US10121000B1', 'US9973519B2', 'US9686293B2', 'US9912691B2', 'US10348771B2', 'US9178906B1', 'US10341363B1', 'US10366231B1', 'US10581898B1', 'EP2946331B1', 'US10872151B1', 'US10762206B2', 'US10467411B1', 'US9846776B1']","
Visual and non-visual elements associated with the candidate files are analyzed to determine whether the candidate files are malware. A visual element (e.g., icon) is extracted from the candidate file, and the icon's image is compared to a group of reference images associated with trusted entities. If the icon's image matches a reference image, the candidate file may be malware masquerading as trusted software. The non-visual elements associated with the candidate file are used, in combination with the visual elements, to determine whether the candidate file is malware.
",G06,2019,"
visual and non-visual elements associated with the candidate files are analyzed to determine whether the candidate files are malware a visual element (eg icon) is extracted from the candidate file and the icon's image is compared to a group of reference images associated with trusted entities if the icon's image matches a reference image the candidate file may be malware masquerading as trusted software the non-visual elements associated with the candidate file are used in combination with the visual elements to determine whether the candidate file is malware
",6,G06_6,2,2.0,42.0,3.0
US10581898B1,450,Malicious message analysis system ,2020-03-03,"['US9674145B2', 'US10015198B2', 'US10326777B2', 'AU2018217323B2', 'US10121000B1', 'US9473522B1', 'US9654494B2', 'US10326779B2', 'US10200384B1', 'US10713362B1', 'US9667657B2', 'US10348771B2', 'US20200099700A1', 'US10778626B2', 'US9497163B2', 'US9635042B2', 'US10432649B1', 'US10181957B2', 'JP6385896B2', 'US10509911B2', 'US9392001B2', 'US9661009B1', 'US10735458B1', 'US9690936B1', 'US10534906B1']","
A computerized technique is provided to analyze a message for malware by determining context information from attributes of the message. The attributes are determined by performing one or more of a static analysis of meta information of the message (e.g., delivery protocol attributes) to generate a first result; a dynamic analysis of an object contained in the message to generate a second result; and, in some embodiments, an emulation of the object to generate a third result. The first result, second result, and third result are correlated in accordance with one or more correlation rules to generate a threat index for the message. The threat index is compared with a predetermined threshold to determine whether the message should be classified as malware and, if so, an alert is generated.
",H04,2020,"
a computerized technique is provided to analyze a message for malware by determining context information from attributes of the message the attributes are determined by performing one or more of a static analysis of meta information of the message (eg delivery protocol attributes) to generate a first result; a dynamic analysis of an object contained in the message to generate a second result; and in some embodiments an emulation of the object to generate a third result the first result second result and third result are correlated in accordance with one or more correlation rules to generate a threat index for the message the threat index is compared with a predetermined threshold to determine whether the message should be classified as malware and if so an alert is generated
",6,H04_6,2,2.0,26.0,3.0
US9825976B1,452,Detection and classification of exploit kits ,2017-11-21,"['US10460105B2', 'US9294442B1', 'EP3014514B1', 'US10121000B1', 'US9781144B1', 'US9838391B2', 'US10713362B1', 'JP6334069B2', 'US10798121B1', 'US10454953B1', 'US9594912B1', 'US10581898B1', 'US10757134B1', 'US10467414B1', 'AU2015380394B2', 'US10367830B2', 'US9740859B2', 'US10476909B1', 'US10009381B2', 'US10505956B1', 'US9740853B2', 'US10467411B1', 'US9311476B2', 'US10467406B2']","
A non-transitory computer readable storage medium having stored thereon instructions executable by a processor to perform operations including: responsive to determining that a correlation between a representation of the first portion of network traffic and a representation of a known exploit kit results in a score above a first prescribed score value, classifying the representation of the first portion of the received network traffic into an exploit kit family corresponding to the representation the known exploit kit; and responsive to determining that the score is below the first prescribed score value and above a second prescribed score value, (i) analyzing the representation of the first portion of the received network traffic, and (ii) processing, within a virtual machine, a second portion of the received network traffic to determine whether processing of the received network traffic results in behavior indicative of an exploit kit is shown.
",H04,2017,"
a non-transitory computer readable storage medium having stored thereon instructions executable by a processor to perform operations including: responsive to determining that a correlation between a representation of the first portion of network traffic and a representation of a known exploit kit results in a score above a first prescribed score value classifying the representation of the first portion of the received network traffic into an exploit kit family corresponding to the representation the known exploit kit; and responsive to determining that the score is below the first prescribed score value and above a second prescribed score value (i) analyzing the representation of the first portion of the received network traffic and (ii) processing within a virtual machine a second portion of the received network traffic to determine whether processing of the received network traffic results in behavior indicative of an exploit kit is shown
",6,H04_6,2,2.0,121.0,3.0
US10121000B1,533,System and method to detect premium attacks on electronic networks and electronic devices ,2018-11-06,"['US10812513B1', 'US10164993B2', 'US10445502B1', 'EP3349414B1', 'EP3014514B1', 'US9832213B2', 'US10686809B2', 'US10873597B1', 'US10218740B1', 'US10834107B1', 'US10348771B2', 'JP6441957B2', 'US10243991B2', 'US10419465B2', 'US9800606B1', 'US20200228558A1', 'US10817602B2', 'US9344457B2', 'US20200259858A1', 'US10762206B2', 'US10032020B2', 'US10467411B1', 'US10102372B2', 'US10193909B2', 'US9838407B1']","
A computerized method for detecting premium attacks by an attack classification system is described. Based on received analytic information, the attack classification system generates logical representations for different portions of the analytic information represented as a nodal graph. The logical representations include objects, properties, and relationships between the objects and the properties. The attack classification system filters at least one relationship from the relationships and forms a first cluster further filtering the relationships. Being a logical representation of objects, properties and the remaining relationships, the first cluster is analyzed to determine features and introduce the features into the nodal graph. An analysis of the features determines whether the objects, properties and relationships forming the first cluster are associated with a premium attack by at least applying rule-based constraints to the features of the first cluster to determine whether they correspond to cluster features commonly present in premium attacks.
",G06,2018,"
a computerized method for detecting premium attacks by an attack classification system is described based on received analytic information the attack classification system generates logical representations for different portions of the analytic information represented as a nodal graph the logical representations include objects properties and relationships between the objects and the properties the attack classification system filters at least one relationship from the relationships and forms a first cluster further filtering the relationships being a logical representation of objects properties and the remaining relationships the first cluster is analyzed to determine features and introduce the features into the nodal graph an analysis of the features determines whether the objects properties and relationships forming the first cluster are associated with a premium attack by at least applying rule-based constraints to the features of the first cluster to determine whether they correspond to cluster features commonly present in premium attacks
",6,G06_6,2,2.0,143.0,3.0
US10467411B1,535,System and method for generating a malware identifier ,2019-11-05,"['US20180124014A1', 'US10728263B1', 'US9832216B2', 'US9294442B1', 'US9848016B2', 'US10121000B1', 'US9781144B1', 'US9560059B1', 'US10713362B1', 'US10469514B2', 'US9197663B1', 'US10657251B1', 'US9954872B2', 'US9609019B2', 'US9438613B1', 'US10467414B1', 'US10230689B2', 'US10872151B1', 'US10505956B1', 'US10637880B1', 'EP3528458B1', 'US20200287925A1']","
One embodiment of the disclosure is directed to a method for generating an identifier for use in malware detection. Herein, a first plurality of indicators of compromise are obtained. These indicators of compromise correspond to a plurality of anomalous behaviors. Thereafter, a filtering operation is performed on the first plurality of indicators of compromise by removing one or more indicators of compromise from the first plurality of indicators of compromise to create a second plurality of indicators of compromise. The identifier represented by the second plurality of indicators of compromise is created.
",G06,2019,"
one embodiment of the disclosure is directed to a method for generating an identifier for use in malware detection herein a first plurality of indicators of compromise are obtained these indicators of compromise correspond to a plurality of anomalous behaviors thereafter a filtering operation is performed on the first plurality of indicators of compromise by removing one or more indicators of compromise from the first plurality of indicators of compromise to create a second plurality of indicators of compromise the identifier represented by the second plurality of indicators of compromise is created
",6,G06_6,2,2.0,99.0,3.0
US10445502B1,596,Susceptible environment detection system ,2019-10-15,"['US20190245894A1', 'US10169585B1', 'US10404725B1', 'US10015198B2', 'US9832213B2', 'US20180013770A1', 'JP6147309B2', 'US10025927B1', 'US10218740B1', 'US10200384B1', 'US10348771B2', 'US10097561B2', 'US10798121B1', 'US9609015B2', 'US10657251B1', 'US10084813B2', 'US10335738B1', 'US10509911B2', 'US10230689B2', 'US10872151B1', 'US10762206B2', 'US10735458B1', 'US10102372B2', 'US9641544B1']","
A computerized method for detecting malware is described. The method includes conducting a preliminary analysis of characteristics of an object to determine whether the object is suspicious. Responsive to determining the object is suspicious, context information from a plurality of information sources is received. The context information including information gathered from prior analyses of the suspicious object. One or more software profiles are generated based on the context information, where the one or more software profiles being used to provision one or more virtual machines. Thereafter, the object is analyzed where the object is processed by the one or more virtual machines and results from the processing are obtained. The results identify a susceptible software environment including a susceptible software profile and one or more anomalous behaviors of the object detected during processing. The object is classified and malware and an alert is generated.
",G06,2019,"
a computerized method for detecting malware is described the method includes conducting a preliminary analysis of characteristics of an object to determine whether the object is suspicious responsive to determining the object is suspicious context information from a plurality of information sources is received the context information including information gathered from prior analyses of the suspicious object one or more software profiles are generated based on the context information where the one or more software profiles being used to provision one or more virtual machines thereafter the object is analyzed where the object is processed by the one or more virtual machines and results from the processing are obtained the results identify a susceptible software environment including a susceptible software profile and one or more anomalous behaviors of the object detected during processing the object is classified and malware and an alert is generated
",6,G06_6,2,9.0,121.0,3.0
US9832216B2,668,System and method for network data characterization ,2017-11-28,"['US20180025157A1', 'CA2934311C', 'EP3107026B1', 'US10218740B1', 'US20150106875A1', 'EP3079337B1', 'US10873603B2', 'US10728263B1', 'US20190260779A1', 'US10798116B2', 'US10467411B1', 'US10735458B1', 'US8925082B2', 'US9965937B2', 'US10121000B1', 'US10530796B2', 'US9742788B2', 'US10534906B1']","
Described herein are embodiments of a system and method for network data characterization and/or classification that overcome the defects of the prior art. These and other advantages are achieved by a method for network data characterization. The method includes receiving network events, wherein at least some of the events include content, converting the received content into data messages, in which at least some of the data messages include the content and metadata describing an event and the content, routing the data messages to a plurality of analyzers based on specified message criteria to which each analyzer subscribes, each of one or more analyzers that received the routed data messages analyzing the content within the data messages in order to characterize the content, in which the one or more analyzers include at least one machine-learning analyzer that classifies the content with a confidence percentage that indicates the probability that the content is malign or the confidence that a prediction that the content is malign is correct, outputting the characterization results of the one or more analyzers, and comparing the output characterization results against a plurality of criteria to determine subsequent action to take based on the characterization results.
",H04,2017,"
described herein are embodiments of a system and method for network data characterization and/or classification that overcome the defects of the prior art these and other advantages are achieved by a method for network data characterization the method includes receiving network events wherein at least some of the events include content converting the received content into data messages in which at least some of the data messages include the content and metadata describing an event and the content routing the data messages to a plurality of analyzers based on specified message criteria to which each analyzer subscribes each of one or more analyzers that received the routed data messages analyzing the content within the data messages in order to characterize the content in which the one or more analyzers include at least one machine-learning analyzer that classifies the content with a confidence percentage that indicates the probability that the content is malign or the confidence that a prediction that the content is malign is correct outputting the characterization results of the one or more analyzers and comparing the output characterization results against a plurality of criteria to determine subsequent action to take based on the characterization results
",6,H04_6,2,2.0,99.0,3.0
US9501746B2,697,Systems and methods for electronic message analysis ,2016-11-22,"['US10412108B2', 'US7409708B2', 'US9398038B2', 'US8396927B2', 'US9305079B2', 'US9143476B2', 'EP2271036B1', 'US20200076848A1', 'US9356947B2', 'US9961029B2', 'US8032594B2', 'US9521114B2', 'US10805314B2', 'US10326735B2', 'US8935348B2', 'US10819744B1', 'US9906554B2', 'US9374330B2', 'US8359649B1', 'US8959159B2', 'US7870608B2', 'US10699246B2', 'US7529802B2', 'JP4829223B2']","
Systems and methods for analyzing electronic messages are disclosed. In some embodiments, the method comprises receiving a new received message from an indicated sender, the new received message having a first message characteristic of the indicated sender and a second message characteristic, identifying an actual sender message characteristic pattern of an actual sender using the first message characteristic, probabilistically comparing the second message characteristic to the actual sender message characteristic pattern, determining a degree of similarity of the second message characteristic to the actual sender message characteristic pattern, and influencing a probability that the indicated sender is the actual sender based upon the degree of similarity. There may be multiple message characteristics and patterns. In some embodiments, the methods may utilize pattern matching techniques, recipient background information, quality measures, threat intelligence data or URL information to help determine whether the new received message is from the actual sender.
",G06,2016,"
systems and methods for analyzing electronic messages are disclosed in some embodiments the method comprises receiving a new received message from an indicated sender the new received message having a first message characteristic of the indicated sender and a second message characteristic identifying an actual sender message characteristic pattern of an actual sender using the first message characteristic probabilistically comparing the second message characteristic to the actual sender message characteristic pattern determining a degree of similarity of the second message characteristic to the actual sender message characteristic pattern and influencing a probability that the indicated sender is the actual sender based upon the degree of similarity there may be multiple message characteristics and patterns in some embodiments the methods may utilize pattern matching techniques recipient background information quality measures threat intelligence data or url information to help determine whether the new received message is from the actual sender
",6,G06_6,2,2.0,26.0,3.0
US9838407B1,830,Detection of malicious web activity in enterprise computer networks ,2017-12-05,"['US10587640B2', 'US10728263B1', 'US10397246B2', 'US10121000B1', 'US9609010B2', 'US10270744B2', 'US10218740B1', 'US9930065B2', 'US10200384B1', 'US20160248805A1', 'US10305922B2', 'US10348771B2', 'US10666668B2', 'US10721243B2', 'US10469514B2', 'US9609015B2', 'US9860265B2', 'US9344447B2', 'US9369479B2', 'US20200358808A1', 'US10587646B2', 'US20190173904A1', 'US20200228558A1', 'US10735458B1', 'US10033753B1']","
A processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain internal log data of a computer network of an enterprise, to extract values of a plurality of designated internal features from the log data, to obtain additional data from one or more external data sources, and to extract values of a plurality of designated external features from the additional data. The extracted values are applied to a regression model based on the internal and external features to generate malicious activity risk scores for respective ones of a plurality of domains, illustratively external domains having fully-qualified domain names (FQDNs). A subset of the domains are identified based on their respective malicious activity risk scores, and one or more proactive security measures are taken against the identified subset of domains. The processing device may be implemented in the computer network or an associated network security system.
",H04,2017,"
a processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain internal log data of a computer network of an enterprise to extract values of a plurality of designated internal features from the log data to obtain additional data from one or more external data sources and to extract values of a plurality of designated external features from the additional data the extracted values are applied to a regression model based on the internal and external features to generate malicious activity risk scores for respective ones of a plurality of domains illustratively external domains having fully-qualified domain names (fqdns) a subset of the domains are identified based on their respective malicious activity risk scores and one or more proactive security measures are taken against the identified subset of domains the processing device may be implemented in the computer network or an associated network security system
",6,H04_6,2,2.0,143.0,3.0
US10637880B1,831,Classifying sets of malicious indicators for detecting command and control communications associated with malware ,2020-04-28,"['US9769204B2', 'US10021129B2', 'US10445502B1', 'US20190354709A1', 'US9917864B2', 'CA2966408C', 'US10608983B2', 'US9667657B2', 'US20190245829A1', 'US10454953B1', 'US9934381B1', 'US20200076848A1', 'US10581898B1', 'US9654488B2', 'US10757120B1', 'US9609019B2', 'US9306964B2', 'US10432649B1', 'JP2020521383A', 'US10872128B2', 'US10735458B1', 'US10467411B1', 'US10534906B1', 'US20190258800A1', 'US20200287925A1']","
A method for detecting a cyber-attack by performing a first analysis on content within a first portion of a communication to determine whether the content includes a first high quality indicator. The first high quality indicator identifies a correlation of the content with a malicious activity. Subsequent to the first analysis, performing a second analysis on a second portion of the communication to determine one or more supplemental indicators. Thereafter, the communication is classified as part of a cyber-attack when (i) a value associated with the first high quality indicator exceeds a first threshold without consideration of the one or more supplemental indicators, or (ii) upon failing to exceed the first threshold and being greater than a second threshold, using the values representing the one or more supplemental indicators with the first value to classify the communication as being part of the cyber-attack.
",H04,2020,"
a method for detecting a cyber-attack by performing a first analysis on content within a first portion of a communication to determine whether the content includes a first high quality indicator the first high quality indicator identifies a correlation of the content with a malicious activity subsequent to the first analysis performing a second analysis on a second portion of the communication to determine one or more supplemental indicators thereafter the communication is classified as part of a cyber-attack when (i) a value associated with the first high quality indicator exceeds a first threshold without consideration of the one or more supplemental indicators or (ii) upon failing to exceed the first threshold and being greater than a second threshold using the values representing the one or more supplemental indicators with the first value to classify the communication as being part of the cyber-attack
",6,H04_6,2,2.0,99.0,3.0
US10326735B2,966,Mitigating communication risk by detecting similarity to a trusted message contact ,2019-06-18,"['AU2011224637B2', 'JP4740120B2', 'US8887273B1', 'US9674145B2', 'US8370948B2', 'US20190098042A1', 'US7596600B2', 'EP2080324B1', 'US9501746B2', 'US10728239B2', 'US8041769B2', 'US9635042B2', 'US10181957B2', 'US10339306B1', 'US20190245885A1', 'US8935348B2', 'US7913302B2', 'US8010612B2', 'US9098459B2', 'US7870608B2', 'US10129195B1', 'US10764316B2', 'DE60316809T2', 'US20150341296A1']","
A measure of similarity between an identifier of a sender of the message and each identifier of one or more identifiers of each trusted contact of a plurality of trusted contacts of a recipient of the message is determined. In the event the sender of the message is not any of the trusted contacts but at least one of the measure of similarity between the identifier of the sender of the message and a selected identifier of a selected trusted contact of the plurality of trusted contacts meets a threshold, the message is modified, if applicable, to alter content of a data field that includes an identification of the sender of the message. The data field is one of a plurality of data fields included in a header of the message.
",H04,2019,"
a measure of similarity between an identifier of a sender of the message and each identifier of one or more identifiers of each trusted contact of a plurality of trusted contacts of a recipient of the message is determined in the event the sender of the message is not any of the trusted contacts but at least one of the measure of similarity between the identifier of the sender of the message and a selected identifier of a selected trusted contact of the plurality of trusted contacts meets a threshold the message is modified if applicable to alter content of a data field that includes an identification of the sender of the message the data field is one of a plurality of data fields included in a header of the message
",6,H04_6,2,2.0,26.0,3.0
US10715543B2,1046,Detecting computer security risk based on previously observed communications ,2020-07-14,"['US20190012478A1', 'US8990933B1', 'US10581898B1', 'US10848517B1', 'US8463861B2', 'US9501746B2', 'US10728239B2', 'US20200396237A1', 'US10530806B2', 'US10764316B2', 'US9635042B2', 'JP2020521383A', 'US9674145B2', 'US9787714B2', 'US10129195B1', 'US9853983B2', 'US20190098042A1', 'US9965937B2']","
Information about an electronic message that is from a sender for an intended recipient is received. It is determined whether an electronic message account of the sender of the electronic message is likely an independently controlled account. In response to the determination that the electronic message account of the sender of the electronic message is likely an independently controlled account, the electronic message is analyzed to determine whether the message is an automatically generated message. In response to the determination that the message is an automatically generated message, a security action is performed.
",H04,2020,"
information about an electronic message that is from a sender for an intended recipient is received it is determined whether an electronic message account of the sender of the electronic message is likely an independently controlled account in response to the determination that the electronic message account of the sender of the electronic message is likely an independently controlled account the electronic message is analyzed to determine whether the message is an automatically generated message in response to the determination that the message is an automatically generated message a security action is performed
",6,H04_6,2,2.0,26.0,3.0
US9563749B2,1066,Comparing applications and assessing differences ,2017-02-07,"['US10367815B2', 'US20170310703A1', 'US10834061B2', 'US10447708B2', 'US10516682B2', 'US9596257B2', 'US10333990B2', 'US10348771B2', 'US10681078B2', 'EP3028489B1', 'US9930071B2', 'US9740859B2', 'US9571512B2', 'US9582668B2', 'US10489588B2', 'US9967271B2', 'US10762206B2', 'US10515211B2', 'US9846776B1', 'US10742676B2']","
An analysis including a comparison is performed of first and second applications and a determination is made regarding whether the first is a counterfeit version of the second application, or vice-versa. Based on the analysis and comparison, and based on an assessment of the first application, an assessment of the second application may be generated.
",G06,2017,"
an analysis including a comparison is performed of first and second applications and a determination is made regarding whether the first is a counterfeit version of the second application or vice-versa based on the analysis and comparison and based on an assessment of the first application an assessment of the second application may be generated
",6,G06_6,2,9.0,121.0,3.0
US10027689B1,1121,Interactive infection visualization for improved exploit detection and signature generation for malware and malware families ,2018-07-17,"['US10063373B2', 'US10270789B2', 'US10445502B1', 'US10728263B1', 'AU2018217323B2', 'US9940454B2', 'US10516682B2', 'US10713362B1', 'US20180278631A1', 'US10673902B2', 'US9516064B2', 'US10798121B1', 'US20190260770A1', 'US20180343278A1', 'US10257199B2', 'US20180276378A1', 'US9740859B2', 'US9563749B2', 'US10587633B2', 'US9825976B1', 'JP6735021B2', 'US10511623B2', 'US10534906B1']","
According to one embodiment, a malware detection and visualization system comprises one or more processors; and a storage module communicatively coupled to the one or more processors, the storage module comprises logic, upon execution by the one or more processors, that accesses a first set of information that comprises (i) information directed to a plurality of observed events and (ii) information directed to one or more relationships that identify an association between different observed events of the plurality of observed events; and generates a reference model based on the first set of information, the reference model comprises at least a first event of the plurality of observed events, a second event of the plurality of observed events, and a first relationship that identifies that the second event is based on the first event, wherein at least one of (i) the plurality of observed events or (ii) the one or more relationships constitutes an anomalous behavior is provided.
",H04,2018,"
according to one embodiment a malware detection and visualization system comprises one or more processors; and a storage module communicatively coupled to the one or more processors the storage module comprises logic upon execution by the one or more processors that accesses a first set of information that comprises (i) information directed to a plurality of observed events and (ii) information directed to one or more relationships that identify an association between different observed events of the plurality of observed events; and generates a reference model based on the first set of information the reference model comprises at least a first event of the plurality of observed events a second event of the plurality of observed events and a first relationship that identifies that the second event is based on the first event wherein at least one of (i) the plurality of observed events or (ii) the one or more relationships constitutes an anomalous behavior is provided
",6,H04_6,2,9.0,121.0,3.0
US9773112B1,1122,Exploit detection of malware and malware families ,2017-09-26,"['US10270789B2', 'US10445502B1', 'RU2677378C2', 'US9940454B2', 'US20180367299A1', 'US10516682B2', 'US10778703B2', 'US10673902B2', 'US10043001B2', 'US9516064B2', 'US10798121B1', 'US20190260770A1', 'US20180343278A1', 'US10257199B2', 'US10581898B1', 'US20180276378A1', 'US9740859B2', 'US9563749B2', 'US9825976B1', 'JP6735021B2', 'US10762206B2', 'US10019338B1', 'US10511623B2', 'US10534906B1']","
According to one embodiment, a computerized method comprises, accessing information associated with one or more observed events, wherein one or more of the observed events constitutes an anomalous behavior; accessing a reference model based on a first plurality of events, the reference model comprises a first event of the first plurality of events, a second event of the first plurality of events and a relationship that identifies that the second event of the first plurality of events is based on the first event of the first plurality of events, wherein at least one of the first event and the second event constitutes an anomalous behavior; and comparing the information associated with the one or more observed events with the reference model to determine whether at least one observed event of the one or more observed events matches at least one of the first event of the first plurality of events or the second event of the first plurality of events that constitutes the anomalous behavior is provided.
",G06,2017,"
according to one embodiment a computerized method comprises accessing information associated with one or more observed events wherein one or more of the observed events constitutes an anomalous behavior; accessing a reference model based on a first plurality of events the reference model comprises a first event of the first plurality of events a second event of the first plurality of events and a relationship that identifies that the second event of the first plurality of events is based on the first event of the first plurality of events wherein at least one of the first event and the second event constitutes an anomalous behavior; and comparing the information associated with the one or more observed events with the reference model to determine whether at least one observed event of the one or more observed events matches at least one of the first event of the first plurality of events or the second event of the first plurality of events that constitutes the anomalous behavior is provided
",6,G06_6,2,9.0,121.0,3.0
US10805314B2,1245,Using message context to evaluate security of requested data ,2020-10-13,"['US10509910B2', 'US10326791B2', 'EP3272100B1', 'US9674145B2', 'US20190098042A1', 'US20170180378A1', 'US9998471B2', 'US10628582B2', 'US9912677B2', 'US10581780B1', 'US10848517B1', 'US9912687B1', 'US10581898B1', 'US9635042B2', 'US9521114B2', 'US10585967B2', 'EP3128459B1', 'US10462165B1', 'US20200228490A1', 'US9325727B1', 'US10764316B2']","
Information of an electronic message to be delivered to an intended recipient is received. For an original resource identifier included in the electronic message, a corresponding alternative resource identifier that can be at least in part used to obtain the original resource identifier and obtain context information associated with the electronic message is determined. The original resource identifier included in the electronic message is replaced with the alternative resource identifier to generate a modified electronic message. The modified electronic message with the alternative resource identifier is allowed to be delivered to the intended recipient instead of the electronic message with the original resource identifier. A request made using the alternative resource identifier in the modified message triggers a security action based at least in part on the context information associated with the electronic message.
",H04,2020,"
information of an electronic message to be delivered to an intended recipient is received for an original resource identifier included in the electronic message a corresponding alternative resource identifier that can be at least in part used to obtain the original resource identifier and obtain context information associated with the electronic message is determined the original resource identifier included in the electronic message is replaced with the alternative resource identifier to generate a modified electronic message the modified electronic message with the alternative resource identifier is allowed to be delivered to the intended recipient instead of the electronic message with the original resource identifier a request made using the alternative resource identifier in the modified message triggers a security action based at least in part on the context information associated with the electronic message
",6,H04_6,2,2.0,26.0,3.0
US10181957B2,1308,Systems and methods for detecting and/or handling targeted attacks in the email channel ,2019-01-15,"['US8307431B2', 'US10587550B1', 'US20170180378A1', 'US8468208B2', 'US20140380456A1', 'US10009362B2', 'CA2476349C', 'KR101512253B1', 'US7653695B2', 'US10212188B2', 'US10530806B2', 'US7409540B2', 'US6460050B1', 'US8291065B2', 'KR101150747B1', 'US9906539B2', 'US8589503B2', 'US9344449B2', 'US20190058724A1', 'US10878092B2', 'US8935348B2', 'US7979703B2', 'US8141132B2', 'US10129215B2', 'US10699246B2']","
Techniques for detecting and/or handling target attacks in an enterprise's email channel are provided. The techniques include receiving aspects of an incoming email message addressed to a first email account holder, selecting a recipient interaction profile and/or a sender profile from a plurality of predetermined profiles stored in a memory based upon the received properties, determining a message trust rating associated with the incoming email message based upon the incoming email message and the selected recipient interaction profile and/or the sender profile; and generating an alert identifying the incoming email message as including a security risk based upon the determined message trust rating. The recipient interaction profile includes information associating the first email account holder and a plurality of email senders from whom email messages have previously been received for the first email account holder, and the sender profile includes information associating a sender of the incoming email message with characteristics determined from a plurality of email messages previously received from the sender.
",H04,2019,"
techniques for detecting and/or handling target attacks in an enterprise's email channel are provided the techniques include receiving aspects of an incoming email message addressed to a first email account holder selecting a recipient interaction profile and/or a sender profile from a plurality of predetermined profiles stored in a memory based upon the received properties determining a message trust rating associated with the incoming email message based upon the incoming email message and the selected recipient interaction profile and/or the sender profile; and generating an alert identifying the incoming email message as including a security risk based upon the determined message trust rating the recipient interaction profile includes information associating the first email account holder and a plurality of email senders from whom email messages have previously been received for the first email account holder and the sender profile includes information associating a sender of the incoming email message with characteristics determined from a plurality of email messages previously received from the sender
",6,H04_6,2,2.0,26.0,3.0
US10742591B2,1337,System for domain reputation scoring ,2020-08-11,"['CN107743701B', 'US9443019B2', 'US20170324767A1', 'US10121000B1', 'US9270646B2', 'US9544278B2', 'US10270744B2', 'US10581908B2', 'US10666668B2', 'US8285704B2', 'US10848517B1', 'US10491614B2', 'US9191403B2', 'US10834120B2', 'CN106068639B', 'US9038181B2', 'JP2015146188A', 'US10185761B2', 'US9838407B1', 'EP3043585A1', 'US10728277B2']","
The disclosure is related to computer-implemented methods for domain name scoring. In one example, the method includes receiving a request to provide a reputation score of a domain name, receiving input data associated with the domain name, extracting a plurality of features from the input data and the domain name, generating a feature vector based on the plurality of features, and calculating the reputation score of the domain name by a machine-learning classifier based on a graph database, which includes feature vectors associated with at least a plurality of reference domain names, a plurality of servers, a plurality of domain name owners, and so forth. In another example, the method can calculate the reputation score by finding a similarity between the feature vector and one of domain name clusters in the graph database. The reputation score represents a probability that the domain name is associated with malicious activity.
",H04,2020,"
the disclosure is related to computer-implemented methods for domain name scoring in one example the method includes receiving a request to provide a reputation score of a domain name receiving input data associated with the domain name extracting a plurality of features from the input data and the domain name generating a feature vector based on the plurality of features and calculating the reputation score of the domain name by a machine-learning classifier based on a graph database which includes feature vectors associated with at least a plurality of reference domain names a plurality of servers a plurality of domain name owners and so forth in another example the method can calculate the reputation score by finding a similarity between the feature vector and one of domain name clusters in the graph database the reputation score represents a probability that the domain name is associated with malicious activity
",6,H04_6,2,2.0,143.0,3.0
US10587646B2,1423,Analyzing DNS requests for anomaly detection ,2020-03-10,"['US9525659B1', 'US10121000B1', 'US10681012B2', 'KR101512253B1', 'US10581908B2', 'US10237283B2', 'US20160294773A1', 'EP3291120A1', 'US10069857B2', 'US10848517B1', 'US10491614B2', 'US10834120B2', 'US10116677B2', 'US10181957B2', 'US10848401B2', 'US9516039B1', 'US20190173904A1', 'US10425383B2', 'US10135863B2', 'US10757101B2', 'US10097566B1', 'US10185761B2', 'US10630706B2']","
A computer-implemented method for detecting anomalies in DNS requests comprises receiving a plurality of DNS requests generated within a predetermined period. The predetermined period includes a plurality of DNS data fragments. The method further includes receiving a first DNS request and selecting a plurality of second DNS requests from the plurality of DNS requests such that each of the second DNS requests is a subset of the first DNS request. The method also includes calculating a count value for each of the DNS data fragments, where each of the count values represents a number of instances the second DNS requests appear within one of the DNS data fragments. In some embodiments, the count values for each of the DNS data fragments can be normalized. The method further includes determining an anomaly trend, for example, based on determining that at least one of the count values exceeds a predetermined threshold value.
",H04,2020,"
a computer-implemented method for detecting anomalies in dns requests comprises receiving a plurality of dns requests generated within a predetermined period the predetermined period includes a plurality of dns data fragments the method further includes receiving a first dns request and selecting a plurality of second dns requests from the plurality of dns requests such that each of the second dns requests is a subset of the first dns request the method also includes calculating a count value for each of the dns data fragments where each of the count values represents a number of instances the second dns requests appear within one of the dns data fragments in some embodiments the count values for each of the dns data fragments can be normalized the method further includes determining an anomaly trend for example based on determining that at least one of the count values exceeds a predetermined threshold value
",6,H04_6,2,2.0,143.0,3.0
US20180091453A1,2395,Multi-level security analysis and intermediate delivery of an electronic message ,2018-03-29,"['US8713677B2', 'US8578051B2', 'US20190098042A1', 'US9501746B2', 'US10728239B2', 'US10326779B2', 'US8776224B2', 'US10778626B2', 'US10581898B1', 'US10050917B2', 'US9635042B2', 'US20150222652A1', 'US10181957B2', 'US10339306B1', 'US8935348B2', 'US20190245885A1', 'EP2532136B1', 'US10129195B1', 'US9325727B1', 'US10764316B2']","
An initial risk of an electronic message is determined. Based on the initial risk, it is determined whether to modify the electronic message. In an event it is determined to modify the electronic message: the electronic message is modified; the modified electronic message is allowed to be delivered to an intended recipient of the electronic message; a secondary computer security risk assessment of the electronic message is automatically performed; and based on the secondary computer security risk assessment, the modified message is updated.
",H04,2018,"
an initial risk of an electronic message is determined based on the initial risk it is determined whether to modify the electronic message in an event it is determined to modify the electronic message: the electronic message is modified; the modified electronic message is allowed to be delivered to an intended recipient of the electronic message; a secondary computer security risk assessment of the electronic message is automatically performed; and based on the secondary computer security risk assessment the modified message is updated
",6,H04_6,2,2.0,26.0,3.0
US9083556B2,2552,System and method for detectng malicious mail from spam zombies ,2015-07-14,"['US8813228B2', 'US10193898B2', 'US10027665B2', 'US10505900B2', 'US9501746B2', 'US10462084B2', 'US10212188B2', 'US8776224B2', 'JP4960222B2', 'CA2467869C', 'US9356947B2', 'US8010609B2', 'US9961029B2', 'US9521114B2', 'US10181957B2', 'US10339306B1', 'US10878092B2', 'US10326735B2', 'US8935348B2', 'US20180375877A1', 'US7913302B2', 'US9009828B1', 'US7660865B2']","
In recent years, the use of spam zombies has become a preferred method of sending spam. In fact, it is estimated that over 90% of all spam comes from spam zombies. Although existing spam zombie detection mechanisms such as the Spamhaus XBL blacklist exist, these techniques are limited in that they cannot block spam from newly created spam zombies. The present invention relates to a system and method for detecting malicious e-mails from spam zombies, the system comprising a processor operable to process a server identification value of a sending source by separating the value into one or more domain level terms to allow each unique term to be tokenized with an index value and to apply the one or more tokenized values as a learning feature in a learning algorithm trained to identify spam zombies.
",H04,2015,"
in recent years the use of spam zombies has become a preferred method of sending spam in fact it is estimated that over 90% of all spam comes from spam zombies although existing spam zombie detection mechanisms such as the spamhaus xbl blacklist exist these techniques are limited in that they cannot block spam from newly created spam zombies the present invention relates to a system and method for detecting malicious e-mails from spam zombies the system comprising a processor operable to process a server identification value of a sending source by separating the value into one or more domain level terms to allow each unique term to be tokenized with an index value and to apply the one or more tokenized values as a learning feature in a learning algorithm trained to identify spam zombies
",6,H04_6,2,2.0,26.0,3.0
US10897480B2,3142,Machine learning data filtering in a cross-domain environment ,2021-01-19,"['US10445502B1', 'US9832216B2', 'US8381303B2', 'US10902117B1', 'US9781144B1', 'US10511636B2', 'US10713362B1', 'US9912691B2', 'US10200390B2', 'US9609015B2', 'US9152789B2', 'US20170083703A1', 'US10733539B2', 'US10225280B2', 'US20200285739A1', 'US9946877B2', 'US9294486B1', 'US9825989B1', 'US10505956B1', 'US10467411B1', 'US9690936B1']","
Techniques for transferring data from a first domain to a second domain in a cross-domain environment are presented. The techniques can include accepting computer readable data in the first domain for transfer to the second domain, passing the computer readable data to a first machine learning classifier at the first domain trained with at least malware files publicly identified as malicious, passing the computer readable data to a second machine learning classifier at the first domain trained with at least malware files specific to the first domain, and transferring the computer readable data to a destination in the second domain.
",H04,2021,"
techniques for transferring data from a first domain to a second domain in a cross-domain environment are presented the techniques can include accepting computer readable data in the first domain for transfer to the second domain passing the computer readable data to a first machine learning classifier at the first domain trained with at least malware files publicly identified as malicious passing the computer readable data to a second machine learning classifier at the first domain trained with at least malware files specific to the first domain and transferring the computer readable data to a destination in the second domain
",6,H04_6,2,2.0,99.0,3.0
WO2019141091A1,3232,"Method, system, and device for mail monitoring ",2019-07-25,"['US8510839B2', 'CN103198123B', 'US9686308B1', 'AU2018217323B2', 'US10121000B1', 'US9888024B2', 'US9560059B1', 'US9860212B2', 'US10530806B2', 'US10133866B1', 'US8914886B2', 'US9621570B2', 'US10069851B2', 'US9223778B2', 'US20160300059A1', 'EP2859495B1', 'RU2607229C2', 'US10911467B2', 'US10063584B1', 'US9906554B2', 'US10699011B2', 'US9929991B2', 'US10467411B1', 'US10176321B2']","
Disclosed are a method, system, and device for mail monitoring. The method comprises: acquiring an attachment carried by a new mail; employing a hash algorithm for computation with respect to the attachment to acquire a hash feature of the attachment; inputting the hash feature of the attachment into a preset filter model to acquire a predictive value of the attachment being malicious software; when the predictive value is greater than a set threshold, transmitting the attachment to a preset sandbox tool; identifying the attachment via the preset sandbox tool; when the attachment is identified as malicious software, adding a malicious software flag to the attachment and rejecting receipt of the new mail; and when the attachment is identified as suspicious software, adding a suspicious software flag to the attachment and generating a warning mail carrying the new mail. The method for mail monitoring allows quick and accurate identification of whether an attachment carried in a mail is malicious software and real-time filtration of any mail carrying malicious software, thus ensuring the security of a mail receiving end.
",H04,2019,"
disclosed are a method system and device for mail monitoring the method comprises: acquiring an attachment carried by a new mail; employing a hash algorithm for computation with respect to the attachment to acquire a hash feature of the attachment; inputting the hash feature of the attachment into a preset filter model to acquire a predictive value of the attachment being malicious software; when the predictive value is greater than a set threshold transmitting the attachment to a preset sandbox tool; identifying the attachment via the preset sandbox tool; when the attachment is identified as malicious software adding a malicious software flag to the attachment and rejecting receipt of the new mail; and when the attachment is identified as suspicious software adding a suspicious software flag to the attachment and generating a warning mail carrying the new mail the method for mail monitoring allows quick and accurate identification of whether an attachment carried in a mail is malicious software and real-time filtration of any mail carrying malicious software thus ensuring the security of a mail receiving end
",6,H04_6,2,2.0,99.0,3.0
US20190199745A1,3294,Using a measure of influence of sender in determining a security risk associated with an electronic message ,2019-06-27,"['US9015090B2', 'US9674145B2', 'US20190098042A1', 'US20200228563A1', 'US9501746B2', 'US10728239B2', 'US10212188B2', 'US10530806B2', 'JP6527590B2', 'US20190215335A1', 'US10581898B1', 'US20170085584A1', 'US9635042B2', 'US9521114B2', 'US10181957B2', 'US7422115B2', 'JP2019096339A', 'US10339306B1', 'EP2859494B1', 'US10462165B1', 'US7761583B2', 'US10764316B2', 'US7634810B2']","
A measure of influence of a sender entity is determined for a message receiving entity based at least in part on an analysis of previous electronic messages sent by the sender entity. An electronic message associated with the sender entity is received. The measure of influence of the sender entity is utilized to determine a security risk associated with the received electronic message.
",H04,2019,"
a measure of influence of a sender entity is determined for a message receiving entity based at least in part on an analysis of previous electronic messages sent by the sender entity an electronic message associated with the sender entity is received the measure of influence of the sender entity is utilized to determine a security risk associated with the received electronic message
",6,H04_6,2,2.0,26.0,3.0
JP2021503142A,3550,Analysis and reporting of suspicious emails ,2021-02-04,"['US20190245894A1', 'US10445502B1', 'AU2018217323B2', 'US9509715B2', 'US9888016B1', 'US10902117B1', 'US9027134B2', 'US10218740B1', 'US10728239B2', 'US10530806B2', 'US9674214B2', 'US10326779B2', 'US10348771B2', 'JP2019145107A', 'US10778626B2', 'US10181957B2', 'US10805321B2', 'US10063584B1', 'US10505956B1', 'US10467411B1', 'US9311476B2', 'US10764316B2']","

     Machine learning-based methods for analyzing and reporting suspicious emails are disclosed. In one aspect, there are methods that include displaying a user-selectable icon and reporting a suspicious electronic message. The method further includes accepting selection of electronic messages and user selectable icons. The method further comprises quarantining the electronic message in response to selection. The method further comprises communicating electronic messages electronically to the processor in response to selection to perform threat analysis. The method further comprises receiving a response message indicating the threat status of the electronic message in response to the threat analysis performed. The method further comprises processing the electronic message in response to the response message. Processing an electronic message involves at least one of deleting the electronic message, keeping the electronic message in quarantine, and / or moving the electronic message to a first folder.

",H04,2021,"

     machine learning-based methods for analyzing and reporting suspicious emails are disclosed in one aspect there are methods that include displaying a user-selectable icon and reporting a suspicious electronic message the method further includes accepting selection of electronic messages and user selectable icons the method further comprises quarantining the electronic message in response to selection the method further comprises communicating electronic messages electronically to the processor in response to selection to perform threat analysis the method further comprises receiving a response message indicating the threat status of the electronic message in response to the threat analysis performed the method further comprises processing the electronic message in response to the response message processing an electronic message involves at least one of deleting the electronic message keeping the electronic message in quarantine and / or moving the electronic message to a first folder

",6,H04_6,2,2.0,26.0,3.0
RU2601190C2,4415,System and methods for spam detection using frequency spectra of character strings ,2016-10-27,"['CN105590055B', 'US10187407B1', 'US20140337972A1', 'US9501746B2', 'US9912691B2', 'US10735458B1', 'US8205255B2', 'US10063584B1', 'US9930065B2', 'US9225741B1', 'US10530806B2', 'US9906554B2', 'CA2859126C', 'US10121000B1', 'US8448245B2', 'AU2015380394B2', 'US20180109480A1']","
FIELD: electronics.
SUBSTANCE: invention relates to classification of electronic messages. Method of detecting spam includes following steps: using at least one computer system processor to obtain a target string, which forms part of an electronic message; use of at least one processor to convert target line in a target signal, containing a sequence of numbers, wherein each character of target string is converted into a number of said sequence of numbers; in response to obtaining a target string - using at least one processor for determining string eligibility criterion according to target string; using at least one processor to pre-filter a corpus of reference strings according to string eligibility criterion, to produce a plurality of candidate strings; in response to selecting candidate strings, employing at least one processor perform a comparison between a frequency spectrum of target signal and a frequency spectrum determined for a candidate string of plurality of candidate strings, wherein determination of frequency spectrum of target signal comprises a representation of target signal in form of a group of frequency components of target signal, each frequency component has a separate frequency and amplitude, defined for said separate frequency; and using at least one processor to determine based on results of said comparison, whether or not electronic message is spam.
EFFECT: efficient detection of spam.
31 cl, 17 dwg

",H04,2016,"
field: electronics
substance: invention relates to classification of electronic messages method of detecting spam includes following steps: using at least one computer system processor to obtain a target string which forms part of an electronic message; use of at least one processor to convert target line in a target signal containing a sequence of numbers wherein each character of target string is converted into a number of said sequence of numbers; in response to obtaining a target string - using at least one processor for determining string eligibility criterion according to target string; using at least one processor to pre-filter a corpus of reference strings according to string eligibility criterion to produce a plurality of candidate strings; in response to selecting candidate strings employing at least one processor perform a comparison between a frequency spectrum of target signal and a frequency spectrum determined for a candidate string of plurality of candidate strings wherein determination of frequency spectrum of target signal comprises a representation of target signal in form of a group of frequency components of target signal each frequency component has a separate frequency and amplitude defined for said separate frequency; and using at least one processor to determine based on results of said comparison whether or not electronic message is spam
effect: efficient detection of spam
31 cl 17 dwg

",6,H04_6,2,2.0,26.0,3.0
US10097568B2,4631,DNS tunneling prevention ,2018-10-09,"['US20190268302A1', 'US10084814B2', 'US10742591B2', 'US10805314B2', 'US10834120B2', 'US10181957B2', 'US20200287925A1', 'JP6518844B1', 'US20190297096A1', 'KR20180095798A', 'JP6553524B2', 'US10326779B2', 'US10270744B2', 'US20170310703A1', 'US20190342309A1', 'US20190245885A1', 'US10250641B2', 'US10121000B1', 'US10637880B1', 'US10848517B1', 'US10505932B2', 'US20180113807A1', 'US9609008B2', 'US9191403B2']","
Embodiments for domain name service (DNS) tunneling prevention by a processor. A DNS tunneling detection operation is requested to be performed upon receiving a DNS query. A response is generated based on the DNS tunneling detection operation such that the DNS tunneling detection operation indicates in the response that the DNS query for a domain name is associated with DNS tunneling activity.
",H04,2018,"
embodiments for domain name service (dns) tunneling prevention by a processor a dns tunneling detection operation is requested to be performed upon receiving a dns query a response is generated based on the dns tunneling detection operation such that the dns tunneling detection operation indicates in the response that the dns query for a domain name is associated with dns tunneling activity
",6,H04_6,2,2.0,143.0,3.0
US10452839B1,5006,Cascade classifier ordering ,2019-10-22,"['US10666686B1', 'US10089582B2', 'US10218740B1', 'US9774614B2', 'US10089459B2', 'EP3528458B1', 'US20170286678A1', 'US9419989B2', 'US10445502B1', 'EP2916256B1', 'US10681012B2', 'US10242185B1', 'US10270744B2', 'US10447708B2', 'US9690606B1', 'KR101840156B1', 'EP3191960B1', 'US10121000B1', 'US10169585B1', 'US9684787B2', 'US10735458B1', 'US9571512B2', 'US10599846B2', 'CN107430660B']","
A method for improving cascade classifier ordering is described. In one embodiment, the method may include determining an efficacy rating of a first current configuration, generating a decreasing sequence of values for a control parameter, and selecting a current value of the control parameter according to the decreasing sequence of values. In some cases, the method may include randomly selecting a first test configuration among the plurality of configurations based at least in part on the current value of the control parameter, analyzing the first test configuration in relation to the first current configuration, and implementing, based at least in part on the analyzing of the first test configuration, the first test configuration in a machine learning classification system of a computing device to improve a data classification accuracy of the computing device.
",G06,2019,"
a method for improving cascade classifier ordering is described in one embodiment the method may include determining an efficacy rating of a first current configuration generating a decreasing sequence of values for a control parameter and selecting a current value of the control parameter according to the decreasing sequence of values in some cases the method may include randomly selecting a first test configuration among the plurality of configurations based at least in part on the current value of the control parameter analyzing the first test configuration in relation to the first current configuration and implementing based at least in part on the analyzing of the first test configuration the first test configuration in a machine learning classification system of a computing device to improve a data classification accuracy of the computing device
",6,G06_6,2,9.0,121.0,3.0
US10430586B1,5177,Methods of identifying heap spray attacks using memory anomaly detection ,2019-10-01,"['US10666686B1', 'EP3111330B1', 'US9203854B2', 'US10083302B1', 'US9825976B1', 'US9596257B2', 'US10476909B1', 'US10445502B1', 'US9560059B1', 'US9438613B1', 'US9860270B2', 'US9563749B2', 'US9576131B2', 'US8683593B2', 'US10891378B2', 'US9690606B1', 'US10834107B1', 'US10657251B1', 'US9594912B1', 'US10341363B1', 'US9639697B2', 'US10467406B2', 'US10873597B1', 'US9674215B2', 'US10210329B1']","
A non-transitory storage medium including instructions that are executable by one or more processors to perform operations including instrumenting a VM is shown. The VM is used to process an object to determine whether the object is associated with malware. Logic within the VM analyzes memory allocated for a process within the VM for a point of interest (POI), the POI being an address of one of a set predetermined instructions likely to be associated with malware. The VMM detects a memory violation during processing of the object and responsive to detecting the memory violation, injects a transition event at the POI on the page on which the POI is located in memory. Further, responsive to detecting an attempted execution of the transition event, the VMM (i) emulates an instruction located at the POI, and (ii) the logic within the VM performs one or more malware detection routines.
",G06,2019,"
a non-transitory storage medium including instructions that are executable by one or more processors to perform operations including instrumenting a vm is shown the vm is used to process an object to determine whether the object is associated with malware logic within the vm analyzes memory allocated for a process within the vm for a point of interest (poi) the poi being an address of one of a set predetermined instructions likely to be associated with malware the vmm detects a memory violation during processing of the object and responsive to detecting the memory violation injects a transition event at the poi on the page on which the poi is located in memory further responsive to detecting an attempted execution of the transition event the vmm (i) emulates an instruction located at the poi and (ii) the logic within the vm performs one or more malware detection routines
",6,G06_6,2,9.0,121.0,3.0
US20160012223A1,5604,Social engineering protection appliance ,2016-01-14,"['US10192052B1', 'US10063584B1', 'US9942250B2', 'US10218740B1', 'US9954890B1', 'US10581898B1', 'US10757120B1', 'US10097573B1', 'US10671694B2', 'US10855798B2', 'US10509911B2', 'US10530806B2', 'US10893073B2', 'US9563749B2', 'US10623434B1', 'JP2019106216A', 'US10778626B2', 'US9680866B2', 'US10200384B1', 'US10505956B1', 'US10637880B1', 'US10594722B2']","
This disclosure describes a system, method, and apparatus for determining the likelihood of whether a digital document contains potentially malicious content by a scoring module configured to provide a page score for the digital document representing the likelihood that the document contains potentially malicious content, the scoring module using at least one of a Word Expression. The Word Expression is an equation having at least one variable representing a number of occurrences of potentially malicious content in the digital document. The scoring module is capable of providing both a real-time and a post-production evaluation of the digital document, and contributes an output value representing the calculated likelihood of potentially malicious content being present in the digital document. The scoring module is also configured to utilize inheritance, such that the digital document score is based on formulas within its own report and also one or more of one or more parent reports.
",G06,2016,"
this disclosure describes a system method and apparatus for determining the likelihood of whether a digital document contains potentially malicious content by a scoring module configured to provide a page score for the digital document representing the likelihood that the document contains potentially malicious content the scoring module using at least one of a word expression the word expression is an equation having at least one variable representing a number of occurrences of potentially malicious content in the digital document the scoring module is capable of providing both a real-time and a post-production evaluation of the digital document and contributes an output value representing the calculated likelihood of potentially malicious content being present in the digital document the scoring module is also configured to utilize inheritance such that the digital document score is based on formulas within its own report and also one or more of one or more parent reports
",6,G06_6,2,2.0,121.0,3.0
US10616272B2,5735,Dynamically detecting abnormalities in otherwise legitimate emails containing uniform resource locators (URLs) ,2020-04-07,"['US10063584B1', 'US10911467B2', 'US9609007B1', 'US10218740B1', 'US9847973B1', 'JP2018510408A', 'US10050998B1', 'JP6013455B2', 'US9635052B2', 'US10749887B2', 'US10326779B2', 'JP2015167039A', 'US10819744B1', 'US10121000B1', 'US10182031B2', 'US10778626B2', 'US9509715B2', 'US20170357814A1', 'US10735458B1', 'EP3128459B1', 'US10339306B1']","
Dynamically detecting abnormalities in otherwise legitimate emails containing Uniform Resource Locators (URLs) is provided. An example method includes determining one or more rules defining normal patterns in a number of sending Top-Level Domains of previously received emails received via a computer network to a user or group of users; generating a trusted trends criteria for a received email, associated with the user or the group of users, by evaluating the received email against the one or more rules; determining whether the trusted trends criteria exceeds a predetermined threshold; in response to exceeding the predetermined threshold, generating a second URL and applying it to the received email by replacing a first URL of the received email with the second URL; and redetermining the one or more rules defining normal patterns in the number of sending Top-Level Domains based on the previously received emails and the received email.
",H04,2020,"
dynamically detecting abnormalities in otherwise legitimate emails containing uniform resource locators (urls) is provided an example method includes determining one or more rules defining normal patterns in a number of sending top-level domains of previously received emails received via a computer network to a user or group of users; generating a trusted trends criteria for a received email associated with the user or the group of users by evaluating the received email against the one or more rules; determining whether the trusted trends criteria exceeds a predetermined threshold; in response to exceeding the predetermined threshold generating a second url and applying it to the received email by replacing a first url of the received email with the second url; and redetermining the one or more rules defining normal patterns in the number of sending top-level domains based on the previously received emails and the received email
",6,H04_6,2,2.0,39.0,3.0
US20200287914A1,6442,Facet Whitelisting in Anomaly Detection ,2020-09-10,"['US10367830B2', 'US20200184073A1', 'US10581898B1', 'US9361463B2', 'US9288220B2', 'JP6334069B2', 'US10699011B2', 'US10673884B2', 'US10728263B1', 'EP2916256B1', 'US9438613B1', 'US9223972B1', 'US9311476B2', 'US9563749B2', 'US10162970B2', 'US10489606B2', 'US9483644B1', 'US9390268B1', 'US10735458B1', 'US10069851B2', 'US10873597B1', 'US9906539B2', 'US9419996B2', 'US10348771B2']","
A security server receives a full hash and a set of subhashes from a client. The security server determines that the full hash is whitelisted. The security server updates, for each subhash in the set of subhashes, an associated clean count. The security server adds a subhash to a subhash whitelist responsive to an associated clean count exceeding a threshold. The security server receives a second set of subhashes. The security server determines whether at least one of the subhashes in the second set of subhashes is included in the subhash whitelist. The security server reports to the client based on the determination.
",H04,2020,"
a security server receives a full hash and a set of subhashes from a client the security server determines that the full hash is whitelisted the security server updates for each subhash in the set of subhashes an associated clean count the security server adds a subhash to a subhash whitelist responsive to an associated clean count exceeding a threshold the security server receives a second set of subhashes the security server determines whether at least one of the subhashes in the second set of subhashes is included in the subhash whitelist the security server reports to the client based on the determination
",6,H04_6,2,2.0,121.0,3.0
EP3716110A1,6452,Computer-security event clustering and violation detection ,2020-09-30,"['EP3111330B1', 'US10902117B1', 'JP6388875B2', 'US9912691B2', 'US10735458B1', 'US10341363B1', 'US9910984B2', 'AU2016204072B2', 'US9237161B2', 'US9514246B2', 'US10445502B1', 'US10248910B2', 'US20190260804A1', 'US10121000B1', 'US9832216B2', 'US9419996B2', 'US10609059B2', 'US9294486B1']","
An event can be associated with a monitored computing device and a command-line record. An event vector can be determined for each of a plurality of events based at least in part on at least a portion of the respective command-line record and on a trained representation mapping. A respective reduced event vector can be determined having fewer elements. The reduced event vectors can be clustered to determine cluster identifiers. A first event can be determined to be associated with a security violation based on a corresponding cluster identifier matching a cluster identifier of a second event that is associated with a security violation. In some examples, a cluster can include a relatively larger first group of events and a relatively smaller second group of events. That cluster can be determined to satisfy a criterion based on the numbers of events in at least one of the groups.

",G06,2020,"
an event can be associated with a monitored computing device and a command-line record an event vector can be determined for each of a plurality of events based at least in part on at least a portion of the respective command-line record and on a trained representation mapping a respective reduced event vector can be determined having fewer elements the reduced event vectors can be clustered to determine cluster identifiers a first event can be determined to be associated with a security violation based on a corresponding cluster identifier matching a cluster identifier of a second event that is associated with a security violation in some examples a cluster can include a relatively larger first group of events and a relatively smaller second group of events that cluster can be determined to satisfy a criterion based on the numbers of events in at least one of the groups

",6,G06_6,2,2.0,99.0,3.0
EP3716111A1,6551,Computer-security violation detection using coordinate vectors ,2020-09-30,"['EP3111330B1', 'US10902117B1', 'JP6388875B2', 'US9912691B2', 'US10341363B1', 'AU2016204072B2', 'US9237161B2', 'US10560471B2', 'US10445502B1', 'US10248910B2', 'US20190260804A1', 'US9832216B2', 'US10121000B1', 'US9419996B2', 'US10609059B2', 'US9294486B1', 'US9602548B2']","
Event vectors can be determined for respective events based on respective command-line records and a trained representation mapping. Respective coordinate vectors can be determined, each having fewer elements than the respective event vector. Respective representations of at least some of the events can be presented via an electronic display at the respective coordinate vectors. A selection of a first representation can be received via a user interface. The events can be clustered based on the event vectors. A first cluster can be selected based on the selection. An indication of a tag can be received via the user interface. Each event of the first cluster can be associated with the tag. Some examples include transmitting a security command to cause a monitored computing device associated with an event in the first cluster to perform a mitigation action.
",G06,2020,"
event vectors can be determined for respective events based on respective command-line records and a trained representation mapping respective coordinate vectors can be determined each having fewer elements than the respective event vector respective representations of at least some of the events can be presented via an electronic display at the respective coordinate vectors a selection of a first representation can be received via a user interface the events can be clustered based on the event vectors a first cluster can be selected based on the selection an indication of a tag can be received via the user interface each event of the first cluster can be associated with the tag some examples include transmitting a security command to cause a monitored computing device associated with an event in the first cluster to perform a mitigation action
",6,G06_6,2,2.0,91.0,3.0
US20200279225A1,7077,Email security analysis ,2020-09-03,"['US20180152471A1', 'US10178115B2', 'US9501746B2', 'US8209381B2', 'US20190158530A1', 'US20170324767A1', 'US10805314B2', 'US10404745B2', 'JP5973017B2', 'US9479343B2', 'US20140250526A1', 'US10069865B2', 'US9411900B2', 'US10326735B2', 'US10771464B2', 'US9203852B2', 'US9521165B2', 'US8787567B2', 'US9356937B2', 'US6732157B1', 'US7178099B2', 'US10462164B2']","
The technology described herein visibly depicts hidden message traits to help users determine whether an email is genuine or deceptive. The hidden message traits are revealed by identifying and changing attributes that keep the hidden traits from being displayed in a rendered message. Spam messages, phishing messages, and messages that include or link to malicious programs (e.g., malware, ransomware) are examples of unwanted messages that can harm a recipient. These messages often rely on deception to get past email filtering systems and to trick a user into acting on content in a message. The deception often involves including hidden traits in a message that fool an automated filtering system. The technology described herein shows the visible traits to a user by including them in the rendered version of the message.
",G06,2020,"
the technology described herein visibly depicts hidden message traits to help users determine whether an email is genuine or deceptive the hidden message traits are revealed by identifying and changing attributes that keep the hidden traits from being displayed in a rendered message spam messages phishing messages and messages that include or link to malicious programs (eg malware ransomware) are examples of unwanted messages that can harm a recipient these messages often rely on deception to get past email filtering systems and to trick a user into acting on content in a message the deception often involves including hidden traits in a message that fool an automated filtering system the technology described herein shows the visible traits to a user by including them in the rendered version of the message
",6,G06_6,2,2.0,26.0,3.0
WO2018081016A1,7171,Multi-level security analysis and intermediate delivery of an electronic message ,2018-05-03,"['US9501746B2', 'US8578051B2', 'US10581898B1', 'US9325727B1', 'US10181957B2', 'US10129195B1', 'US10764316B2', 'US8935348B2', 'US10243904B1', 'US10326779B2', 'US10728239B2', 'US10326791B2', 'US8776224B2', 'US10050917B2', 'US9635042B2', 'US8713677B2', 'US20150222652A1', 'US20190098042A1', 'EP2532136B1', 'US10339306B1']","
An initial risk of an electronic message is determined. Based on the initial risk, it is determined whether to modify the electronic message. In an event it is determined to modify the electronic message: the electronic message is modified; the modified electronic message is allowed to be delivered to an intended recipient of the electronic message; a secondary computer security risk assessment of the electronic message is automatically performed; and based on the secondary computer security risk assessment, the modified message is updated.
",G06,2018,"
an initial risk of an electronic message is determined based on the initial risk it is determined whether to modify the electronic message in an event it is determined to modify the electronic message: the electronic message is modified; the modified electronic message is allowed to be delivered to an intended recipient of the electronic message; a secondary computer security risk assessment of the electronic message is automatically performed; and based on the secondary computer security risk assessment the modified message is updated
",6,G06_6,2,2.0,26.0,3.0
US20200351270A1,7246,Smart whitelisting for dns security ,2020-11-05,"['US9787714B2', 'US9838407B1', 'US10187408B1', 'US10805314B2', 'US10181957B2', 'US10412111B2', 'US10298602B2', 'US10084779B2', 'US20200366691A1', 'US10033754B2', 'US10567423B2', 'US10911470B2', 'US9501647B2', 'US9306962B1', 'JP6585131B2', 'US10121000B1', 'US10581908B2', 'US10305922B2', 'US9787642B2']","
Techniques for smart whitelisting for Domain Name System (DNS) security are provided. In some embodiments, a system/process/computer program product for smart whitelisting for DNS security in accordance with some embodiments includes receiving a set of network related event data, wherein the set of network related event data includes Domain Name System (DNS) related event data; receiving a set of network related threat data, wherein the set of network related threat data includes DNS related threat data; and generating a whitelist using the set of network related event data and the set of network related threat data, wherein the whitelist includes a subset of network domains included in the DNS related event data based on a data driven model of the DNS related event data and the DNS related threat data.
",H04,2020,"
techniques for smart whitelisting for domain name system (dns) security are provided in some embodiments a system/process/computer program product for smart whitelisting for dns security in accordance with some embodiments includes receiving a set of network related event data wherein the set of network related event data includes domain name system (dns) related event data; receiving a set of network related threat data wherein the set of network related threat data includes dns related threat data; and generating a whitelist using the set of network related event data and the set of network related threat data wherein the whitelist includes a subset of network domains included in the dns related event data based on a data driven model of the dns related event data and the dns related threat data
",6,H04_6,2,2.0,26.0,3.0
US20190130100A1,9291,Systems and methods for detecting data exfiltration ,2019-05-02,"['US10467411B1', 'US10218740B1', 'US9501639B2', 'US20200287925A1', 'US10264104B2', 'US20190260770A1', 'US9344457B2', 'US9762543B2', 'US10728263B1', 'US9311476B2', 'US10375026B2', 'US10268840B2', 'US10270744B2', 'US10567386B2', 'US10193909B2', 'US10121000B1', 'US10581908B2', 'US10735458B1', 'US10193929B2']","
Systems and methods for detecting data exfiltration using domain name system (DNS) queries include, in various embodiments, performing operations that include parsing a DNS query to determine whether that DNS query is likely to contain hidden data that is being exfiltrated from a system or network. Statistical methods can be used to analyze the DNS query to determine a likelihood whether each of a plurality of segments of the DNS query are indicative of data exfiltration methods. If one or multiple DNS queries are deemed suspicious based on the analysis, a security action on the DNS query can be performed, including sending an alert and/or blocking the DNS query from being forwarded.
",G06,2019,"
systems and methods for detecting data exfiltration using domain name system (dns) queries include in various embodiments performing operations that include parsing a dns query to determine whether that dns query is likely to contain hidden data that is being exfiltrated from a system or network statistical methods can be used to analyze the dns query to determine a likelihood whether each of a plurality of segments of the dns query are indicative of data exfiltration methods if one or multiple dns queries are deemed suspicious based on the analysis a security action on the dns query can be performed including sending an alert and/or blocking the dns query from being forwarded
",6,G06_6,2,2.0,99.0,3.0
