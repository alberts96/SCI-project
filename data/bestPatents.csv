code,Unnamed: 0,title,pub_date,citations,abstract,class,year,abstract_processed,topic,class_topic,core,louvain,topiclouvain,GTcore
JP6239807B1,41,Method and system for behavior analysis of mobile device behavior based on user persona information ,2017-11-29,"['KR101720930B1', 'CN106575327B', 'US9747430B2', 'US10089459B2', 'US20190108353A1', 'CN107077551B', 'KR20160138982A', 'US9378390B2', 'US10735432B2', 'JP5976780B2', 'KR101810346B1', 'US10728270B2', 'US20190281076A1', 'US10304114B2', 'US9779236B2', 'KR20170015129A', 'US20180375869A1', 'CN105531712B', 'US9747440B2', 'KR102057565B1', 'CN104272787B', 'US9756066B2', 'US20170353817A1']","

 The computing device processor identifies behavioral techniques and machine learning techniques to identify, prevent, correct, or otherwise respond to malicious or performance degrading behavior of computing devices. It may consist of processor executable instructions for implementing the method used. As part of these actions, the processor generates user persona information that characterizes the user based on the user's activity, preferences, age, occupation, habit, mood, emotional state, personality, device usage pattern, etc. Can do. The processor dynamically determines the number of device features that are monitored or evaluated within the computing device and is most relevant to determining if the device behavior does not match the pattern of normal usage of the computing device by the user The persona information of the user can be used to identify the device behavior to do and to better identify or respond better to the non-benign behavior of the computing device.

",G06,2017,"

 the computing device processor identifies behavioral techniques and machine learning techniques to identify prevent correct or otherwise respond to malicious or performance degrading behavior of computing devices it may consist of processor executable instructions for implementing the method used as part of these actions the processor generates user persona information that characterizes the user based on the user's activity preferences age occupation habit mood emotional state personality device usage pattern etc can do the processor dynamically determines the number of device features that are monitored or evaluated within the computing device and is most relevant to determining if the device behavior does not match the pattern of normal usage of the computing device by the user the persona information of the user can be used to identify the device behavior to do and to better identify or respond better to the non-benign behavior of the computing device

",0,G06_0,2,5.0,5.0,5.0
US10104107B2,162,Methods and systems for behavior-specific actuation for real-time whitelisting ,2018-10-16,"['JP6140808B2', 'JP6188956B2', 'US9596257B2', 'CN105830080B', 'CN106133642B', 'US8584242B2', 'US9779236B2', 'WO2018086544A1', 'US9189624B2', 'CN106716382B', 'US9753796B2', 'CN107580699A', 'KR102057565B1', 'US10762206B2', 'EP3271860B1', 'US10783254B2', 'JP6161807B2', 'US9756066B2', 'US10742676B2']","
Various embodiments include methods of evaluating device behaviors in a computing device and enabling white listing of particular behaviors. Various embodiments may include monitoring activities of a software application operating on the computing device, and generating a behavior vector information structure that characterizes a first monitored activity of the software application. The behavior vector information structure may be applied to a machine learning classifier model to generate analysis results. The analysis results may be used to classify the first monitored activity of the software application as one of benign, suspicious, and non-benign. A prompt may be displayed to the user that requests that the user select whether to whitelist the software application in response to classifying the first monitored activity of the software application as suspicious or non-benign. The first monitored activity may be added to a whitelist of device behaviors in response to receiving a user input.
",G06,2018,"
various embodiments include methods of evaluating device behaviors in a computing device and enabling white listing of particular behaviors various embodiments may include monitoring activities of a software application operating on the computing device and generating a behavior vector information structure that characterizes a first monitored activity of the software application the behavior vector information structure may be applied to a machine learning classifier model to generate analysis results the analysis results may be used to classify the first monitored activity of the software application as one of benign suspicious and non-benign a prompt may be displayed to the user that requests that the user select whether to whitelist the software application in response to classifying the first monitored activity of the software application as suspicious or non-benign the first monitored activity may be added to a whitelist of device behaviors in response to receiving a user input
",0,G06_0,2,5.0,5.0,5.0
US9910984B2,164,Methods and systems for on-device high-granularity classification of device behaviors using multi-label models ,2018-03-06,"['US9779236B2', 'KR102160659B1', 'EP2836955B1', 'US9747440B2', 'KR102057565B1', 'CN105830080B', 'US10762206B2', 'EP3271860B1', 'US9189624B2', 'US20190318089A1', 'JP6161807B2', 'US9756066B2', 'CN106133642B', 'JP6188956B2', 'CN106716382B', 'US9753796B2', 'US10742676B2']","
Various aspects include methods and computing devices implementing the methods for evaluating device behaviors in the computing devices. Aspect methods may include using a behavior-based machine learning technique to classify a device behavior as one of benign, suspicious, and non-benign. Aspect methods may include using one of a multi-label classification and a meta-classification technique to sub-classify the device behavior into one or more sub-categories. Aspect methods may include determining a relative importance of the device behavior based on the sub-classification, and determining whether to perform robust behavior-based operations based on the determined relative importance of the device behavior.
",G06,2018,"
various aspects include methods and computing devices implementing the methods for evaluating device behaviors in the computing devices aspect methods may include using a behavior-based machine learning technique to classify a device behavior as one of benign suspicious and non-benign aspect methods may include using one of a multi-label classification and a meta-classification technique to sub-classify the device behavior into one or more sub-categories aspect methods may include determining a relative importance of the device behavior based on the sub-classification and determining whether to perform robust behavior-based operations based on the determined relative importance of the device behavior
",0,G06_0,2,5.0,5.0,5.0
US9330257B2,183,Adaptive observation of behavioral features on a mobile device ,2016-05-03,"['US10015178B2', 'US10397262B2', 'TWI606360B', 'EP3375159B1', 'CN105830080B', 'US10505991B1', 'JP6709845B2', 'US10419458B2', 'JP6161807B2', 'US10516686B2', 'US10097561B2', 'US10681060B2', 'US10341363B1', 'US20190068627A1', 'US20180041537A1']","
Methods, devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently, dynamically, and/or adaptively determine computing device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the mobile device behaviors are to be observed. The various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing, memory, or energy resources.
",G06,2016,"
methods devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently dynamically and/or adaptively determine computing device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the mobile device behaviors are to be observed the various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing memory or energy resources
",0,G06_0,2,5.0,5.0,5.0
US9158604B1,184,Lightweight data-flow tracker for realtime behavioral analysis using control flow ,2015-10-13,"['JP6235000B2', 'US20180300484A1', 'US20140201807A1', 'KR102057565B1', 'CN105830080B', 'US10762206B2', 'US10122747B2', 'US9813445B2', 'US10063585B2', 'JP6161807B2', 'US9438620B2', 'US9753796B2', 'US8584242B2']","
Methods and devices for detecting performance-degrading behaviors include identifying a data source component that inputs data into an application executing on a mobile device, and identifying a data sink component that consumes data output from the application. Using a measured runtime control-flow parameter, a likelihood that the data source component is a critical data resource may be determined. Using the probability value, a behavior model that identifies a mobile device feature associated with the critical data resource may be updated and used to determine whether the software application is malicious. Measured runtime control-flow parameters may include a program execution distance between data source and sink components based on heuristics. Determining program execution distances between data sources and sinks may include computing call graph distances by comparing a source call stack length and a sink call stack length, or by counting method invocations or functional calls between data sources and sinks.
",G06,2015,"
methods and devices for detecting performance-degrading behaviors include identifying a data source component that inputs data into an application executing on a mobile device and identifying a data sink component that consumes data output from the application using a measured runtime control-flow parameter a likelihood that the data source component is a critical data resource may be determined using the probability value a behavior model that identifies a mobile device feature associated with the critical data resource may be updated and used to determine whether the software application is malicious measured runtime control-flow parameters may include a program execution distance between data source and sink components based on heuristics determining program execution distances between data sources and sinks may include computing call graph distances by comparing a source call stack length and a sink call stack length or by counting method invocations or functional calls between data sources and sinks
",0,G06_0,2,5.0,5.0,5.0
US9774614B2,190,Methods and systems for side channel analysis detection and protection ,2017-09-26,"['US20190245894A1', 'EP2850864B1', 'US9747440B2', 'US10762206B2', 'EP3271860B1', 'CN104541293B', 'US9742559B2', 'US10783254B2', 'JP6161807B2', 'CN106133642B', 'CN106716382B', 'US9753796B2', 'US10742676B2', 'US20180041537A1']","
A computing device may use machine learning techniques to determine whether a side channel attack is underway and perform obfuscation operations (e.g., operations to raise the noise floor) or other similar operations to stop or prevent a detected side channel attack. The computing device may determine that a side channel attack is underway in response to determining that the computing device is in airplane mode, that the battery of the computing device the battery has been replaced with a stable DC power supply, that the touch-screen display of the computing device has been disconnected, that there are continuous calls to a cipher application programming interface (API) using the same cipher key, that there has been tampering with a behavioral analysis engine of the computing device, or any combination thereof.
",H04,2017,"
a computing device may use machine learning techniques to determine whether a side channel attack is underway and perform obfuscation operations (eg operations to raise the noise floor) or other similar operations to stop or prevent a detected side channel attack the computing device may determine that a side channel attack is underway in response to determining that the computing device is in airplane mode that the battery of the computing device the battery has been replaced with a stable dc power supply that the touch-screen display of the computing device has been disconnected that there are continuous calls to a cipher application programming interface (api) using the same cipher key that there has been tampering with a behavioral analysis engine of the computing device or any combination thereof
",0,H04_0,2,5.0,5.0,5.0
US10762206B2,243,Automated behavioral and static analysis using an instrumented sandbox and machine learning classification for mobile security ,2020-09-01,"['US20190245894A1', 'US10482260B1', 'US10104107B2', 'US10509910B2', 'US9940454B2', 'US20190363893A1', 'US10121000B1', 'US10516531B2', 'US10673902B2', 'US10225286B2', 'US10382459B2', 'US10079859B2', 'US10558800B2', 'AU2015380394B2', 'US9563749B2', 'US9582668B2', 'US10609059B2', 'US10817602B2', 'US10162970B2', 'US10102372B2']","
A method comprises, based on receiving a request to analyze at least a first mobile application, scheduling the request for a first sandbox. The first mobile application is analyzed based on the request, wherein the analysis of the first mobile application comprises performing a behavioral analysis of the first mobile application within the first sandbox and performing a static analysis of the first mobile application. A first feature vector is generated based on data resulting from the analysis of the first mobile application. The first mobile application is determined to comprise malware based, at least in part, on comparing the first feature vector with at least a second feature vector, wherein the second feature vector was generated based on at least one of a static analysis and a behavioral analysis of malware.
",G06,2020,"
a method comprises based on receiving a request to analyze at least a first mobile application scheduling the request for a first sandbox the first mobile application is analyzed based on the request wherein the analysis of the first mobile application comprises performing a behavioral analysis of the first mobile application within the first sandbox and performing a static analysis of the first mobile application a first feature vector is generated based on data resulting from the analysis of the first mobile application the first mobile application is determined to comprise malware based at least in part on comparing the first feature vector with at least a second feature vector wherein the second feature vector was generated based on at least one of a static analysis and a behavioral analysis of malware
",0,G06_0,2,9.0,95.0,5.0
US20190068627A1,281,Cloud based security monitoring using unsupervised pattern recognition and deep learning ,2019-02-28,"['US10853161B2', 'JP2019153330A', 'US10484378B2', 'US10447708B2', 'US10735196B2', 'US9923905B2', 'US10541988B2', 'US9785795B2', 'US20190014153A1', 'JP6474890B2', 'EP3198472B1', 'US10348759B2', 'US9740859B2', 'US9571512B2', 'JP6412943B2', 'US9350749B2', 'JP6687799B2', 'US9548994B2', 'US9667661B2', 'US20190007441A1', 'US10375026B2', 'EP3271860B1', 'US10719625B2', 'EP3195560B1', 'EP3183666B1']","
Provided are systems and methods for a cloud security system that learns patterns of user behavior and uses the patterns to detect anomalous behavior in a network. Techniques discussed herein include obtaining activity data from a service provider system. The activity data describes actions performed during use of a cloud service over a period of time. A pattern corresponding to a series of actions performed over a subset of time can be identified. The pattern can be added a model associated with the cloud service. The model represents usage of the cloud service by the one or more users. Additional activity data can be obtained from the service provider system. Using the model, a set of actions can be identified in the additional activity data that do not correspond to the model. The set of actions and an indicator that identifies the set of actions as anomalous can be output.
",H04,2019,"
provided are systems and methods for a cloud security system that learns patterns of user behavior and uses the patterns to detect anomalous behavior in a network techniques discussed herein include obtaining activity data from a service provider system the activity data describes actions performed during use of a cloud service over a period of time a pattern corresponding to a series of actions performed over a subset of time can be identified the pattern can be added a model associated with the cloud service the model represents usage of the cloud service by the one or more users additional activity data can be obtained from the service provider system using the model a set of actions can be identified in the additional activity data that do not correspond to the model the set of actions and an indicator that identifies the set of actions as anomalous can be output
",0,H04_0,2,5.0,5.0,5.0
CN104541293B,293,Framework for client cloud behavior analyzer ,2018-02-06,"['US10104107B2', 'JP6630276B2', 'US10740358B2', 'US10140441B2', 'EP2447809B1', 'US20140123289A1', 'US10893055B2', 'CN107077551B', 'CN104348829B', 'US9152787B2', 'US9607146B2', 'JP6227666B2', 'JP6732317B2', 'US10803408B2', 'US20170227995A1', 'US9213831B2', 'EP2801049B1', 'US9613476B2', 'EP3271860B1', 'US9448859B2', 'US9781106B1']","
For generating method, system and the equipment of data model in client cloud communication system, it can be included using machine learning techniques to generate the sorter model of the first family of the cloud corpus of description behavior vector.These vectors can be analyzed, to identify there is highest possibility mobile device is fatefully determined that mobile device behavior is malice or benign factor in the sorter model of the first family.Based on the analysis, based on identified factor, the sorter model of second family can be generated, the factor significantly reduced and data point are identified as with enabling the mobile device fatefully to determine that the mobile device behavior is malice or benign relevant by the sorter model of the second family.Can the sorter model based on the second family generate mobile device classifier modules, and make it can be used for being downloaded by mobile device, including to equipment that behavior vector contributes.
",G06,2018,"
for generating method system and the equipment of data model in client cloud communication system it can be included using machine learning techniques to generate the sorter model of the first family of the cloud corpus of description behavior vectorthese vectors can be analyzed to identify there is highest possibility mobile device is fatefully determined that mobile device behavior is malice or benign factor in the sorter model of the first familybased on the analysis based on identified factor the sorter model of second family can be generated the factor significantly reduced and data point are identified as with enabling the mobile device fatefully to determine that the mobile device behavior is malice or benign relevant by the sorter model of the second familycan the sorter model based on the second family generate mobile device classifier modules and make it can be used for being downloaded by mobile device including to equipment that behavior vector contributes
",0,G06_0,2,5.0,5.0,5.0
US9721212B2,367,Efficient on-device binary analysis for auto-generated behavioral models ,2017-08-01,"['US20170250994A1', 'US9104864B2', 'CN104303538B', 'US20190363893A1', 'US20180027006A1', 'US9998484B1', 'US9213729B2', 'US9781143B1', 'CN105830080B', 'US9330257B2', 'CN106133642B', 'JP2015153428A', 'KR20170015129A', 'CN106716382B', 'US20190068627A1', 'JP2020510926A', 'US8688601B2', 'KR102057565B1', 'US10762206B2', 'US10783254B2', 'US9756066B2', 'US10742676B2']","
Various aspects provide methods implemented by at least one processor executing on a mobile communication device to efficiently identify, classify, model, prevent, and/or correct the non-benign (e.g., performance degrading) conditions and/or behaviors that are related to an application operating on the device. Specifically, in various aspects, the mobile computing device may derive or extract application-specific features by performing a binary analysis of an application and may determine the application's category (e.g., a games, entertainment, or news category) based on the application-specific features. The mobile computing device may also obtain a classifier model associated with the application's category that includes various conditions, features, behaviors and corrective actions that may be used to quickly identify and correct non-benign behaviors (e.g., undesirable, malicious, and/or performance-degrading behaviors) occurring on the mobile computing device that are related to the application.
",G06,2017,"
various aspects provide methods implemented by at least one processor executing on a mobile communication device to efficiently identify classify model prevent and/or correct the non-benign (eg performance degrading) conditions and/or behaviors that are related to an application operating on the device specifically in various aspects the mobile computing device may derive or extract application-specific features by performing a binary analysis of an application and may determine the application's category (eg a games entertainment or news category) based on the application-specific features the mobile computing device may also obtain a classifier model associated with the application's category that includes various conditions features behaviors and corrective actions that may be used to quickly identify and correct non-benign behaviors (eg undesirable malicious and/or performance-degrading behaviors) occurring on the mobile computing device that are related to the application
",0,G06_0,2,5.0,5.0,5.0
CN110119621B,375,"Attack defense method, system and defense device for abnormal system call ",2020-08-21,"['US10356107B1', 'US9563843B2', 'KR101826865B1', 'US10104107B2', 'CN104303538B', 'AU2017254815B2', 'US10248910B2', 'US10089582B2', 'US20160055335A1', 'US9043905B1', 'US20170024660A1', 'US20140279762A1', 'US9324034B2', 'KR101848576B1', 'US20160078362A1', 'US9774614B2', 'US9721212B2', 'US9910984B2', 'US20170046510A1', 'US20160078347A1', 'US20140187177A1']","
The invention relates to an attack defense method, a system and a defense device for abnormal system call, wherein the attack defense method comprises the following steps: when detecting that a program is executed, acquiring a system calling sequence from an operating system, and returning the system calling sequence to a server side; performing feature coding on the system calling sequence through a second encoder to obtain a corresponding second feature vector set, wherein the second encoder is constructed according to coding parameters of a first encoder in a self-coding and decoding module transmitted from a server; and comparing the second feature vectors in the feature space through a regression equation, and determining whether the system call sequence is normal system call according to the comparison result, wherein the regression equation is obtained by the server side performing regression equation operation on the first feature vector set and is transmitted. By implementing the technical scheme of the invention, the detection effectiveness of unseen malicious software can be effectively improved, and the operation resources can be effectively distributed and the hardware overhead cost can be reduced.
",G06,2020,"
the invention relates to an attack defense method a system and a defense device for abnormal system call wherein the attack defense method comprises the following steps: when detecting that a program is executed acquiring a system calling sequence from an operating system and returning the system calling sequence to a server side; performing feature coding on the system calling sequence through a second encoder to obtain a corresponding second feature vector set wherein the second encoder is constructed according to coding parameters of a first encoder in a self-coding and decoding module transmitted from a server; and comparing the second feature vectors in the feature space through a regression equation and determining whether the system call sequence is normal system call according to the comparison result wherein the regression equation is obtained by the server side performing regression equation operation on the first feature vector set and is transmitted by implementing the technical scheme of the invention the detection effectiveness of unseen malicious software can be effectively improved and the operation resources can be effectively distributed and the hardware overhead cost can be reduced
",0,G06_0,2,5.0,5.0,5.0
US9324034B2,380,On-device real-time behavior analyzer ,2016-04-26,"['US20180167402A1', 'CN105830081B', 'US9369476B2', 'US10045218B1', 'KR20140137003A', 'US9672355B2', 'CN104541293B', 'US20190245876A1', 'US10419458B2', 'EP2908495A1', 'KR101837923B1', 'US10728270B2', 'KR101626243B1', 'US9756066B2', 'US10742676B2', 'JP6050560B1']","
Methods, systems and devices for generating data models in a communication system may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors. Such behavior vectors may be used to compute a weight value for one or more nodes of the boosted decision tree. Classifier models factors having a high probably of determining whether a mobile device behavior is benign or not benign based on the computed weight values may be identified. Computing weight values for boosted decision tree nodes may include computing an exclusive answer ratio for generated boosted decision tree nodes. The identified factors may be applied to the corpus of behavior vectors to generate a second family of classifier models identifying fewer factors and data points relevant for enabling the mobile device to determine whether a behavior is benign or not benign.
",G06,2016,"
methods systems and devices for generating data models in a communication system may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors such behavior vectors may be used to compute a weight value for one or more nodes of the boosted decision tree classifier models factors having a high probably of determining whether a mobile device behavior is benign or not benign based on the computed weight values may be identified computing weight values for boosted decision tree nodes may include computing an exclusive answer ratio for generated boosted decision tree nodes the identified factors may be applied to the corpus of behavior vectors to generate a second family of classifier models identifying fewer factors and data points relevant for enabling the mobile device to determine whether a behavior is benign or not benign
",0,G06_0,2,5.0,5.0,5.0
US20170046510A1,382,Methods and Systems of Building Classifier Models in Computing Devices ,2017-02-16,"['EP3080741A2', 'AU2016204068B2', 'US9779236B2', 'CN105590055B', 'KR20170015129A', 'JP2020510926A', 'US9369476B2', 'KR102057565B1', 'CN104541293B', 'US9742559B2', 'US10122747B2', 'US10419458B2', 'KR101626243B1', 'US9756066B2', 'CN106133642B', 'CN106716382B', 'US9753796B2', 'US20190068627A1']","
Methods, and computing devices implementing the methods, use application-based classifier models to improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system predicting whether a software application is causing undesirable or performance depredating behavior. The application-based classifier models may include a reduced and more focused subset of the decision nodes that are included in a full or more complete classifier model that may be received or generated in the computing device. The application groups may be represented by application groups formed of computing device applications sharing related features, and may be generated using one or more clustering algorithms. Lean classifier models may be generated for each of the application group and may incorporate historical user input regarding execution permissions for features of applications within an application group.
",G06,2017,"
methods and computing devices implementing the methods use application-based classifier models to improve the efficiency and performance of a comprehensive behavioral monitoring and analysis system predicting whether a software application is causing undesirable or performance depredating behavior the application-based classifier models may include a reduced and more focused subset of the decision nodes that are included in a full or more complete classifier model that may be received or generated in the computing device the application groups may be represented by application groups formed of computing device applications sharing related features and may be generated using one or more clustering algorithms lean classifier models may be generated for each of the application group and may incorporate historical user input regarding execution permissions for features of applications within an application group
",0,G06_0,2,5.0,5.0,5.0
US9438620B2,406,Control flow graph representation and classification ,2016-09-06,"['US9147072B2', 'US10140451B2', 'EP3404948B1', 'US10176321B2', 'US10104107B2', 'US20200137097A1', 'US9686023B2', 'US10831893B2', 'US10762206B2', 'EP3191960B1', 'US10834124B2', 'US10121000B1', 'US9607146B2', 'US9189624B2', 'US10248910B2', 'US9756066B2', 'US9774614B2', 'US20190297096A1']","
A software sample is identified that includes code and a control flow graph is generated for each of a plurality of functions included in the sample. Features are identified in each of the functions that correspond to instances of a set of control flow fragment types. A feature set is generated for the sample from the identified features.
",H04,2016,"
a software sample is identified that includes code and a control flow graph is generated for each of a plurality of functions included in the sample features are identified in each of the functions that correspond to instances of a set of control flow fragment types a feature set is generated for the sample from the identified features
",0,H04_0,2,5.0,95.0,5.0
US10783254B2,669,Systems and methods for risk rating framework for mobile applications ,2020-09-22,"['US10148667B2', 'US20190245894A1', 'US10114950B2', 'US9411965B2', 'US9686023B2', 'US9721212B2', 'US10762206B2', 'JP6014286B2', 'US20190311134A1', 'US9357397B2', 'EP2756437B1', 'US20190363893A1', 'US9621570B2', 'US9158604B1', 'US9753796B2', 'US10742676B2', 'US9596257B2', 'US20180041537A1']","
Systems, methods and computer readable medium for training a risk rating system for assessing a risk of a mobile application are disclosed. One or more features representing operational characteristics of mobile applications and malware are extracted. A first learning classifier and a second learning classifier are trained using the extracted features. A machine learning risk rating model is generated, based on the combination of the first learning classifier and the second learning classifier to calculate a risk rating based on the features and a correlation of the features. Systems, methods, and computer readable medium for assessing a risk for a mobile application are also disclosed. One or more features of a mobile application are extracted. A learning classifier is applied to the extracted features. A risk rating is determined based on the result of the classifier.
",G06,2020,"
systems methods and computer readable medium for training a risk rating system for assessing a risk of a mobile application are disclosed one or more features representing operational characteristics of mobile applications and malware are extracted a first learning classifier and a second learning classifier are trained using the extracted features a machine learning risk rating model is generated based on the combination of the first learning classifier and the second learning classifier to calculate a risk rating based on the features and a correlation of the features systems methods and computer readable medium for assessing a risk for a mobile application are also disclosed one or more features of a mobile application are extracted a learning classifier is applied to the extracted features a risk rating is determined based on the result of the classifier
",0,G06_0,2,5.0,5.0,5.0
US9753796B2,698,"Distributed monitoring, evaluation, and response for multiple devices ",2017-09-05,"['US20190245894A1', 'US9344431B2', 'US9852292B2', 'US10482260B1', 'US10104107B2', 'US9411955B2', 'US20190392174A1', 'US10516682B2', 'US10516531B2', 'JP6227666B2', 'US10348771B2', 'US9609456B2', 'US10382459B2', 'US20180041537A1', 'JP2016181265A', 'US10063654B2', 'US10558800B2', 'EP3262815B1', 'US10348759B2', 'US9582668B2', 'US10657277B2', 'US9756066B2']","
Data is collected from a set of devices. The data is associated with the devices, mobile application programs (apps), web applications, users, or combinations of these. A norm is established using the collected data. The norm is compared with data collected from a particular device. If there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device, a response is initiated.
",G06,2017,"
data is collected from a set of devices the data is associated with the devices mobile application programs (apps) web applications users or combinations of these a norm is established using the collected data the norm is compared with data collected from a particular device if there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device a response is initiated
",0,G06_0,2,9.0,5.0,5.0
US10742676B2,699,Distributed monitoring and evaluation of multiple devices ,2020-08-11,"['US20190245894A1', 'US9344431B2', 'US9852292B2', 'US10482260B1', 'US10104107B2', 'US20190392174A1', 'US20190363893A1', 'US10516682B2', 'US20200322372A1', 'US10516531B2', 'JP6227666B2', 'US9330257B2', 'US10348771B2', 'US10382459B2', 'US20180041537A1', 'US10063654B2', 'US10558800B2', 'EP3262815B1', 'US10348759B2', 'US10509911B2', 'US10657277B2', 'US10817602B2', 'US20190349377A1', 'US9756066B2']","
Data is collected from a set of devices according to a data collection policy. The data is associated with device configuration, device state, or device behavior. A norm is established using the collected data. A different data collection policy is established based on the norm. Data is collected from a particular device according to the different data collection policy. The norm is compared to the data collected from the particular device. If there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device, a message is transmitted to an administrator.
",H04,2020,"
data is collected from a set of devices according to a data collection policy the data is associated with device configuration device state or device behavior a norm is established using the collected data a different data collection policy is established based on the norm data is collected from a particular device according to the different data collection policy the norm is compared to the data collected from the particular device if there is a deviation outside of a threshold deviation between the norm and the data collected from the particular device a message is transmitted to an administrator
",0,H04_0,2,9.0,5.0,5.0
CN105531712B,703,The behavioural analysis based on data flow in mobile device ,2018-07-27,"['CN105229612B', 'US20170228603A1', 'JP6732317B2', 'JP6510610B2', 'US9609456B2', 'US9357397B2', 'CN104704472B', 'US8843346B2', 'CN105556482B', 'US9684870B2', 'US9652362B2', 'JP6050560B1', 'CN102859565B', 'US9613476B2', 'KR102057565B1', 'TWI530141B', 'CN107430660B', 'US9491187B2', 'US9756066B2', 'CN104221026B']","
Method, apparatus and system for detecting suspicious or deterioration performance mobile device behavior, the computing device behavior that intelligently, dynamically and/or adaptively determination will be observed, the behavior to be observed quantity and will be to details or granularity level that mobile device behavior is observed.Various aspects efficiently identify suspicious or deterioration performance mobile device behavior without excessive processing, memory or energy resource amount.
",G06,2018,"
method apparatus and system for detecting suspicious or deterioration performance mobile device behavior the computing device behavior that intelligently dynamically and/or adaptively determination will be observed the behavior to be observed quantity and will be to details or granularity level that mobile device behavior is observedvarious aspects efficiently identify suspicious or deterioration performance mobile device behavior without excessive processing memory or energy resource amount
",0,G06_0,2,5.0,5.0,5.0
US9357397B2,753,Methods and systems for detecting malware and attacks that target behavioral security mechanisms of a mobile device ,2016-05-31,"['EP2850524B1', 'US10701091B1', 'US20180025157A1', 'US20170134405A1', 'JP2017538186A', 'US9832214B2', 'US10025929B2', 'US9369476B2', 'US8607340B2', 'US20200014734A1', 'US9104864B2', 'US20200076804A1', 'US9210182B2', 'US20190363893A1', 'US10742676B2', 'US20180041537A1']","
A behavior-based security system of a computing device may be protected from non-benign behavior, malware, and cyber attacks by configuring the device to work in conjunction with another component (e.g., a server) to monitor the accuracy and performance of the security system, and determine whether the system is working correctly, efficiently, or as expected. This may be accomplished via the server generating artificial attack software, sending the generated artificial attack software to the mobile device to simulate non-benign behavior in the mobile device, such as a cyber attack, and determining whether the behavior-based security system of the mobile device responded adequately to the simulated non-benign behavior. The sever may send a dead-man signal to the mobile device in response to determining that the behavior-based security system of the mobile device did not respond adequately to the simulated non-benign behavior.
",H04,2016,"
a behavior-based security system of a computing device may be protected from non-benign behavior malware and cyber attacks by configuring the device to work in conjunction with another component (eg a server) to monitor the accuracy and performance of the security system and determine whether the system is working correctly efficiently or as expected this may be accomplished via the server generating artificial attack software sending the generated artificial attack software to the mobile device to simulate non-benign behavior in the mobile device such as a cyber attack and determining whether the behavior-based security system of the mobile device responded adequately to the simulated non-benign behavior the sever may send a dead-man signal to the mobile device in response to determining that the behavior-based security system of the mobile device did not respond adequately to the simulated non-benign behavior
",0,H04_0,2,5.0,5.0,5.0
KR20180013940A,788,Cross-module behavioral validation ,2018-02-07,"['KR20180044295A', 'US10104107B2', 'US9858525B2', 'US9323929B2', 'US9684775B2', 'US9690635B2', 'US9330257B2', 'US9609456B2', 'US9357397B2', 'US20140150100A1', 'CN102509039B', 'JP6239807B1', 'US9519775B2', 'US9189624B2', 'JP2018508071A', 'US9774614B2', 'CN106716382B', 'US10187415B2', 'EP3271860B1', 'US9448859B2', 'US9491187B2', 'US20170161478A1']","
Various aspects of systems, methods, and devices enable a method of cross-module behavior verification. A plurality of observer modules of the system may observe the behavior or behaviors of the observed modules of the system. Each of the observer modules may generate a behavioral representation based on the behavior or behavior of the observed module. Each observer module may apply the behavior representation to a suitable behavior classifier model for each observer module. The observer modules may aggregate the groupings of behaviors of the observed module as determined by each of the observer modules. Observer modules may determine whether the observed module is behaving abnormally based on the aggregated classification.

 

",G06,2018,"
various aspects of systems methods and devices enable a method of cross-module behavior verification a plurality of observer modules of the system may observe the behavior or behaviors of the observed modules of the system each of the observer modules may generate a behavioral representation based on the behavior or behavior of the observed module each observer module may apply the behavior representation to a suitable behavior classifier model for each observer module the observer modules may aggregate the groupings of behaviors of the observed module as determined by each of the observer modules observer modules may determine whether the observed module is behaving abnormally based on the aggregated classification

 

",0,G06_0,2,5.0,5.0,5.0
US9448859B2,790,Exploiting hot application programming interfaces (APIs) and action patterns for efficient storage of API logs on mobile devices for behavioral analysis ,2016-09-20,"['US10691824B2', 'US20180167402A1', 'US10657277B2', 'US9973517B2', 'CN104303538B', 'JP6239808B1', 'US9311480B2', 'US9787681B2', 'US10122747B2', 'US20130227641A1', 'JP2015508540A', 'US9438620B2', 'US9787718B2', 'CN106716382B', 'US9753796B2', 'US8584242B2', 'JP6320532B2', 'US9439077B2']","
Methods and devices for detecting suspicious or performance-degrading mobile device behaviors may include performing behavior monitoring and analysis operations to intelligently, dynamically, and/or adaptively determine the mobile device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the behaviors are to be observed. Such behavior monitoring and analysis operations may be performed continuously (or near continuously) in a mobile device without consuming an excessive amount of processing, memory, or energy resources of the mobile device by identifying hot application programming interfaces (APIs) and hot action patterns that are invoked or used most frequently by software applications of the mobile device and storing information regarding these hot APIs and hot action patterns separately and more efficiently.
",G06,2016,"
methods and devices for detecting suspicious or performance-degrading mobile device behaviors may include performing behavior monitoring and analysis operations to intelligently dynamically and/or adaptively determine the mobile device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the behaviors are to be observed such behavior monitoring and analysis operations may be performed continuously (or near continuously) in a mobile device without consuming an excessive amount of processing memory or energy resources of the mobile device by identifying hot application programming interfaces (apis) and hot action patterns that are invoked or used most frequently by software applications of the mobile device and storing information regarding these hot apis and hot action patterns separately and more efficiently
",0,G06_0,2,5.0,5.0,5.0
US9536072B2,841,Machine-learning behavioral analysis to detect device theft and unauthorized device usage ,2017-01-03,"['US10798113B2', 'KR102005110B1', 'US10104107B2', 'US20170293748A1', 'TWI530141B', 'US9448859B2', 'US10546113B2', 'US10089459B2', 'US9495537B2', 'US9690635B2', 'US9324034B2', 'US9357397B2', 'JP2017524172A', 'US9609456B2', 'US9455988B2', 'US20190327237A1', 'US10803408B2', 'US9652362B2']","
The disclosure relates to machine-learning behavioral analysis to detect device theft and unauthorized device usage. In particular, during a training phase, an electronic device may generate a local user profile that represents observed user-specific behaviors according to a centroid sequence, wherein the local user profile may be classified into a baseline profile model that represents aggregate behaviors associated with various users over time. Accordingly, during an authentication phase, the electronic device may generate a current user profile model comprising a centroid sequence re-expressing user-specific behaviors observed over an authentication interval, wherein the current user profile model may be compared to plural baseline profile models to identify the baseline profile model closest to the current user profile model. As such, an operator change may be detected where the baseline profile model closest to the current user profile model differs from the baseline profile model in which the electronic device has membership.
",G06,2017,"
the disclosure relates to machine-learning behavioral analysis to detect device theft and unauthorized device usage in particular during a training phase an electronic device may generate a local user profile that represents observed user-specific behaviors according to a centroid sequence wherein the local user profile may be classified into a baseline profile model that represents aggregate behaviors associated with various users over time accordingly during an authentication phase the electronic device may generate a current user profile model comprising a centroid sequence re-expressing user-specific behaviors observed over an authentication interval wherein the current user profile model may be compared to plural baseline profile models to identify the baseline profile model closest to the current user profile model as such an operator change may be detected where the baseline profile model closest to the current user profile model differs from the baseline profile model in which the electronic device has membership
",0,G06_0,2,5.0,5.0,5.0
US9495537B2,1219,Adaptive observation of behavioral features on a mobile device ,2016-11-15,"['US9767013B1', 'EP2836955B1', 'KR20180080227A', 'US9438620B2', 'KR102057565B1', 'CN105830080B', 'CN104541293B', 'US9311480B2', 'US10038702B2', 'US9740859B2', 'CN104272786B', 'US9571512B2', 'US10681060B2', 'CN106716382B', 'US10742676B2', 'US20190068627A1']","
Methods, devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently, dynamically, and/or adaptively determine computing device behaviors that are to be observed, the number of behaviors that are to be observed, and the level of detail or granularity at which the mobile device behaviors are to be observed. The various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing, memory, or energy resources.
",G06,2016,"
methods devices and systems for detecting suspicious or performance-degrading mobile device behaviors intelligently dynamically and/or adaptively determine computing device behaviors that are to be observed the number of behaviors that are to be observed and the level of detail or granularity at which the mobile device behaviors are to be observed the various aspects efficiently identify suspicious or performance-degrading mobile device behaviors without requiring an excessive amount of processing memory or energy resources
",0,G06_0,2,5.0,5.0,5.0
US9147072B2,1243,Method and system for performing behavioral analysis operations in a mobile device based on application state ,2015-09-29,"['KR101720930B1', 'JP6140808B2', 'US9973517B2', 'US9378390B2', 'CN105830080B', 'US9438620B2', 'US8584242B2', 'CN104541293B', 'WO2018086544A1', 'CN105531712B', 'CN106716382B', 'US9753796B2', 'US20190068627A1', 'US10762206B2', 'CN104272787B', 'US10776463B2', 'JP6161807B2', 'WO2016054384A1', 'US10742676B2']","
Methods, systems and devices use operating system execution states while monitoring applications executing on a mobile device to perform comprehensive behavioral monitoring and analysis include configuring a mobile device to monitor an activity of a software application, generate a shadow feature value that identifies an operating system execution state of the software application during that activity, generate a behavior vector that associates the monitored activity with the shadow feature value, and determine whether the activity is malicious or benign based on the generated behavior vector, shadow feature value and/or operating system execution states. The mobile device may also be configured to intelligently determine whether the operating system execution state of a software application is relevant to determining whether any of the monitored mobile device behaviors are malicious or suspicious, and monitor only the operating system execution states of the software applications for which such determinations are relevant.
",G06,2015,"
methods systems and devices use operating system execution states while monitoring applications executing on a mobile device to perform comprehensive behavioral monitoring and analysis include configuring a mobile device to monitor an activity of a software application generate a shadow feature value that identifies an operating system execution state of the software application during that activity generate a behavior vector that associates the monitored activity with the shadow feature value and determine whether the activity is malicious or benign based on the generated behavior vector shadow feature value and/or operating system execution states the mobile device may also be configured to intelligently determine whether the operating system execution state of a software application is relevant to determining whether any of the monitored mobile device behaviors are malicious or suspicious and monitor only the operating system execution states of the software applications for which such determinations are relevant
",0,G06_0,2,5.0,5.0,5.0
CN104205111A,2404,Computing device to detect malware ,2014-12-10,"['US9147072B2', 'US9536072B2', 'US20170024660A1', 'US10104107B2', 'US9607146B2', 'JP6227666B2', 'US8479296B2', 'US10783254B2', 'US9910984B2', 'KR101848576B1', 'US9330257B2', 'US9324034B2', 'CN106133642B', 'CN106716382B', 'US10708288B2', 'US9998484B1']","
Disclosed is an apparatus and method for a computing device to determine if an application is malware. The computing device may include: a query logger to log the behavior of the application on the computing device to generate a log; a behavior analysis engine to analyze the log from the query logger to generate a behavior vector that characterizes the behavior of the application; and a classifier to classify the behavior vector for the application as benign or malware.
",H04,2014,"
disclosed is an apparatus and method for a computing device to determine if an application is malware the computing device may include: a query logger to log the behavior of the application on the computing device to generate a log; a behavior analysis engine to analyze the log from the query logger to generate a behavior vector that characterizes the behavior of the application; and a classifier to classify the behavior vector for the application as benign or malware
",0,H04_0,2,5.0,5.0,5.0
US20190260778A1,2980,Unsupervised spoofing detection from traffic data in mobile networks ,2019-08-22,"['US10038710B2', 'US10104107B2', 'US10248910B2', 'CN106796753B', 'US20170024660A1', 'US9330257B2', 'US9324034B2', 'US9639699B1', 'CN106133642B', 'US9357397B2', 'US20190260770A1', 'US20210014258A1', 'US9369479B2', 'US9712554B2', 'JP6239807B1', 'CN107209818B', 'EP2860937B1', 'KR102057565B1', 'US9910984B2', 'US20180268292A1']","
A method for detecting spoofing attacks from network traffic log data is presented. The method includes training a spoofing attack detector with the network traffic log data received from one or more mobile networks by extracting features that are relevant to spoofing attacks for training data, building a first set of vector representations for the network traffic log data, training an anomaly detection model by employing DAGMM, and obtaining learned parameters of DAGMM. The method includes testing the spoofing attack detector with the network traffic log data received from the one or more mobile networks by extracting features that are relevant to spoofing attacks for testing data, building a second set of vector representations for the network traffic log data, obtaining latent representations of the testing data, computing a z-score of the testing data, and creating a spoofing attack alert report listing traffic logs generating z-scores exceeding a predetermined threshold.
",H04,2019,"
a method for detecting spoofing attacks from network traffic log data is presented the method includes training a spoofing attack detector with the network traffic log data received from one or more mobile networks by extracting features that are relevant to spoofing attacks for training data building a first set of vector representations for the network traffic log data training an anomaly detection model by employing dagmm and obtaining learned parameters of dagmm the method includes testing the spoofing attack detector with the network traffic log data received from the one or more mobile networks by extracting features that are relevant to spoofing attacks for testing data building a second set of vector representations for the network traffic log data obtaining latent representations of the testing data computing a z-score of the testing data and creating a spoofing attack alert report listing traffic logs generating z-scores exceeding a predetermined threshold
",0,H04_0,2,5.0,5.0,5.0
US10681080B1,4269,System and method for assessing android applications malware risk ,2020-06-09,"['US10474817B2', 'US8782792B1', 'US10176321B2', 'US9594904B1', 'US20170161496A1', 'US20170024660A1', 'US10783254B2', 'US9448859B2', 'US10872151B1', 'US10516638B2', 'US9147072B2', 'US9158604B1', 'US10104107B2', 'US10834107B1', 'US8756432B1', 'US9684787B2', 'US9910984B2', 'KR101691719B1', 'US9781144B1', 'US8176559B2']","
A system and method for malware assessment of an unknown application file are provided. The system and method are particularly applicable to malware assessment for Android operating system based applications. The malware assessment increases the confidence in an assessment that an application is benign or malware.
",H04,2020,"
a system and method for malware assessment of an unknown application file are provided the system and method are particularly applicable to malware assessment for android operating system based applications the malware assessment increases the confidence in an assessment that an application is benign or malware
",0,H04_0,2,5.0,5.0,5.0
CN109684837A,6670,A kind of mobile application malware detection method and system towards electric power enterprise ,2019-04-26,"['US9898602B2', 'CN106133642B', 'US10412115B1', 'US20170286678A1', 'US20200014734A1', 'US9607146B2', 'US10762206B2', 'US10181033B2', 'US9495537B2', 'US9324034B2', 'US9703962B2', 'CN104541293B', 'CN105426760B', 'US20160006757A1', 'US20190068627A1', 'KR101848576B1', 'JP6650439B2', 'US10152594B2', 'TWI461952B', 'US9609456B2', 'JP6050560B1']","
A kind of mobile application malware detection method towards electric power enterprise characterized by comprising obtain software to be detected, and the source code that decompiling obtains the software under testing is carried out to the software under testingThe feature vector of the source code is extracted, and the feature vector of the source code is input to the support vector machines disaggregated model constructed in advance and is compared, determines whether the software to be detected is MalwareWherein, the svm classifier model includes: SVM classifier, and the SVM classifier is based on dual weight increment method and is iterated update.Technical solution of the present invention solves the classification learning that support vector machines is not suitable for great amount of samples, the present invention propose it is a kind of based on the SVM Incremental Learning Algorithm of double weighting functions to application sample carry out learning classification, this method can be under the premise of guaranteeing that application class precision does not decline, learning time is reduced to greatest extent, is improved learning efficiency.
",G06,2019,"
a kind of mobile application malware detection method towards electric power enterprise characterized by comprising obtain software to be detected and the source code that decompiling obtains the software under testing is carried out to the software under testingthe feature vector of the source code is extracted and the feature vector of the source code is input to the support vector machines disaggregated model constructed in advance and is compared determines whether the software to be detected is malwarewherein the svm classifier model includes: svm classifier and the svm classifier is based on dual weight increment method and is iterated updatetechnical solution of the present invention solves the classification learning that support vector machines is not suitable for great amount of samples the present invention propose it is a kind of based on the svm incremental learning algorithm of double weighting functions to application sample carry out learning classification this method can be under the premise of guaranteeing that application class precision does not decline learning time is reduced to greatest extent is improved learning efficiency
",0,G06_0,2,5.0,5.0,5.0
EP3751476A1,6830,A system to mitigate against adversarial samples for machine learning and artificial intelligence models ,2020-12-16,"['US9721212B2', 'US9787695B2', 'US9898602B2', 'US9686023B2', 'US9684775B2', 'JP6235681B2', 'US9760716B1', 'US9774614B2', 'KR101789962B1', 'US9948663B1', 'EP3077949B1', 'US9448859B2', 'JP6661768B2', 'US10776463B2', 'US10754845B2', 'US20150286500A1', 'US10104107B2', 'US10254936B2', 'US9767013B1', 'JP6239807B1', 'US9910984B2', 'US20180157638A1', 'JP6650439B2', 'US9330257B2', 'US20180299943A1']","
Embodiments of the disclosure disclose a system to mitigate against adversarial input samples for machine learning (ML)/artificial intelligence (AI) models. According to one embodiment, a system receives a query from a client for a ML service. The system calculates a similarity score for the query based on a number of prior queries received from the client, the similarity score representing a similarity between the received query and the prior queries. The system determines that the query is an adversarial query in response to determining that the similarity score is above a predetermined threshold.
",G06,2020,"
embodiments of the disclosure disclose a system to mitigate against adversarial input samples for machine learning (ml)/artificial intelligence (ai) models according to one embodiment a system receives a query from a client for a ml service the system calculates a similarity score for the query based on a number of prior queries received from the client the similarity score representing a similarity between the received query and the prior queries the system determines that the query is an adversarial query in response to determining that the similarity score is above a predetermined threshold
",0,G06_0,2,5.0,5.0,5.0
US10032010B2,30,"System, device, and method of visual login and stochastic cryptography ",2018-07-24,"['US9071969B2', 'US10839065B2', 'US20190364019A1', 'JP6239808B1', 'US10686818B2', 'CN105229596B', 'US10754935B2', 'US9971891B2', 'US10356069B2', 'US9794228B2', 'JP2017528055A', 'CN104408341B', 'JP6190897B2', 'US9813446B2', 'US10587601B2', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. A log-in process or a user-authentication process, is augmented or enriched by one or more incidental tasks, which force the user to perform additional on-screen interactions or input-unit interactions, which in turn enrich and augment the pool of user interactions from which the system extracts one or more user-specific features. The extracted user-specific features are used as part of the user authentication process, and are further used to differentiate among users.
",G06,2018,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker a log-in process or a user-authentication process is augmented or enriched by one or more incidental tasks which force the user to perform additional on-screen interactions or input-unit interactions which in turn enrich and augment the pool of user interactions from which the system extracts one or more user-specific features the extracted user-specific features are used as part of the user authentication process and are further used to differentiate among users
",1,G06_1,2,0.0,1.0,6.0
US9547766B2,31,"Device, system, and method of detecting malicious automatic script and code injection ",2017-01-17,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9813446B2', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10055560B2,35,"Device, method, and system of detecting multiple users accessing the same account ",2018-08-21,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10397262B2', 'US10164985B2', 'US10839065B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US9225737B2', 'US10686818B2', 'US10834090B2', 'US10586036B2', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2018,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US20170193526A1,36,"Device, system, and method of differentiating among users based on detection of hardware components ",2017-07-06,"['US10164985B2', 'US10395018B2', 'KR101721032B1', 'US20180082304A1', 'US10839065B2', 'US9485275B2', 'US10735432B2', 'US10834090B2', 'US20190236250A1', 'US10157273B2', 'US10686818B2', 'AU2016315900B2', 'US9813441B2', 'CN106716958B', 'US9552470B2', 'US9071969B2', 'US20190364019A1', 'US9264419B1', 'CN104408341B']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, detecting a possible attacker, and flagging a particular financial transaction or a particular retail transaction as being possibly-fraudulent. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are analyzed, and enable extraction of hardware-specific features of a computer mouse, a touchpad, a touch-screen, a keyboard, or other input unit. In some methods, detection of different mouse polling rates or different mouse DPI values, across two different usage sessions in the same financial account, enables the method to detect a possibly-fraudulent transaction.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service detecting a possible attacker and flagging a particular financial transaction or a particular retail transaction as being possibly-fraudulent the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are analyzed and enable extraction of hardware-specific features of a computer mouse a touchpad a touch-screen a keyboard or other input unit in some methods detection of different mouse polling rates or different mouse dpi values across two different usage sessions in the same financial account enables the method to detect a possibly-fraudulent transaction
",1,G06_1,2,0.0,1.0,6.0
US9848009B2,38,Identification of computerized bots and automated cyber-attack modules ,2017-12-19,"['US20160021117A1', 'KR101977845B1', 'US10044730B1', 'US10740758B2', 'US10091180B1', 'EP3368973B1', 'US10735432B2', 'US20170235954A1', 'CN106575401B', 'JP6239808B1', 'US10068076B1', 'CN105229596B', 'US9794228B2', 'US9813446B2', 'US9526006B2', 'US9552470B2', 'US10223517B2', 'US9071969B2', 'US20190364019A1', 'US20200244633A1', 'US10558792B2', 'CN104408341B']","
Devices, systems, and methods of detecting whether an electronic device or computerized device or computer, is being controlled by a legitimate human user, or by an automated cyber-attack unit or malware or automatic script. The system monitors interactions performed via one or more input units of the electronic device. The system searches for abnormal input-user interactions; or for an abnormal discrepancy between: the input-unit gestures that were actually registered by the input unit, and the content that the electronic device reports as allegedly entered via such input units. A discrepancy or abnormality indicates that more-possibly, or necessarily or certainly, a malware or automated script is controlling the electronic device, rather than a legitimate human user. Optionally, an input-output aberration or interference is injected, in order to check for manual corrective actions that only a human user, and not an automated script, is able to perform.
",H04,2017,"
devices systems and methods of detecting whether an electronic device or computerized device or computer is being controlled by a legitimate human user or by an automated cyber-attack unit or malware or automatic script the system monitors interactions performed via one or more input units of the electronic device the system searches for abnormal input-user interactions; or for an abnormal discrepancy between: the input-unit gestures that were actually registered by the input unit and the content that the electronic device reports as allegedly entered via such input units a discrepancy or abnormality indicates that more-possibly or necessarily or certainly a malware or automated script is controlling the electronic device rather than a legitimate human user optionally an input-output aberration or interference is injected in order to check for manual corrective actions that only a human user and not an automated script is able to perform
",1,H04_1,2,0.0,1.0,6.0
US9526006B2,42,"System, method, and device of detecting identity of a user of an electronic device ",2016-12-20,"['US9531710B2', 'KR101977845B1', 'US9531733B2', 'US10032010B2', 'US9547766B2', 'US10740758B2', 'US20170270289A1', 'US10586036B2', 'US10069852B2', 'US20170193526A1', 'US20180107836A1', 'US9921659B2', 'CN107077551B', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'US9477826B2', 'US9621567B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'US9280652B1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2016,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
US9838373B2,43,"System, device, and method of detecting a remote access user ",2017-12-05,"['US10049209B2', 'US9071969B2', 'US20180039990A1', 'US10839065B2', 'US20190364019A1', 'AU2016315900B2', 'CN105229596B', 'US10686818B2', 'US10754935B2', 'US10579784B2', 'US10476873B2', 'US10356069B2', 'US9794228B2', 'CN104408341B', 'US10587601B2', 'CN106716958B', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US9071969B2,44,"System, device, and method of detecting identity of a user of an electronic device ",2015-06-30,"['US9122456B2', 'US9531710B2', 'US9531733B2', 'US10032010B2', 'US9547766B2', 'US10164985B2', 'US20170270289A1', 'US10069852B2', 'US9418221B2', 'US20180107836A1', 'US9921659B2', 'CN104951681B', 'US10565569B2', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'US10621585B2', 'US9477826B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2015,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
US10586036B2,69,"System, device, and method of recovery and resetting of user authentication factor ",2020-03-10,"['US9207772B2', 'US10740758B2', 'US10567376B2', 'JP6820062B2', 'US20200327458A1', 'US20180160309A1', 'CN107077551B', 'US9703953B2', 'US9712558B2', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'US10079853B2', 'US10157273B2', 'US9794228B2', 'US10200360B2', 'US10523680B2', 'US9838373B2', 'US10114935B2', 'US8806610B2', 'US10558792B2', 'JP6565230B2']","
Devices, systems, and methods of password recovery and password reset, as well as resetting or recovering other types of user-authentication factor. A system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service. The system defines a user-specific task or challenge, in which the user is requested to enter a phrase or perform a task. A user-specific feature is extracted from the manner in which the user performs the task. Subsequently, that user-specific feature is utilized instead of a security question, in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task, and monitoring the manner in which the user performs the fresh task.
",G06,2020,"
devices systems and methods of password recovery and password reset as well as resetting or recovering other types of user-authentication factor a system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service the system defines a user-specific task or challenge in which the user is requested to enter a phrase or perform a task a user-specific feature is extracted from the manner in which the user performs the task subsequently that user-specific feature is utilized instead of a security question in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task and monitoring the manner in which the user performs the fresh task
",1,G06_1,2,0.0,1.0,6.0
US10735432B2,88,Personalized inferred authentication for virtual assistance ,2020-08-04,"['US10505926B2', 'US10032010B2', 'US10164985B2', 'US10740758B2', 'US10009327B2', 'US9813454B2', 'US10586036B2', 'US20190363893A1', 'US10509907B2', 'US10257127B2', 'US9848009B2', 'US20170180332A1', 'JP2018033162A', 'US9455988B2', 'US10769635B2', 'JP2019061688A', 'US10032008B2', 'US10044761B2', 'US9794228B2', 'US20200257781A1', 'EP3198911B1', 'US10057227B1', 'KR20200092368A']","
Aspects of the technology described herein provide a mechanism for controlling access to secure computing resources based on inferred user authentication. A current user may be authenticated and access to secure computing resources permitted based on a determined probability that the current user is a legitimate user associated with the secure computing resource. Legitimacy of the current user may be inferred based on a comparison of user-related activity of the current user to a persona model, which may comprise behavior patterns, rules, or other information for identifying a legitimate user. If it is determined that the current user is likely legitimate, then access to secure information may be permitted. However, if it is determined that the current user is likely illegitimate, than a verification procedure may be provided to the current user, such as a temporal, dynamic security challenge based on recent activity conducted by the legitimate user.
",H04,2020,"
aspects of the technology described herein provide a mechanism for controlling access to secure computing resources based on inferred user authentication a current user may be authenticated and access to secure computing resources permitted based on a determined probability that the current user is a legitimate user associated with the secure computing resource legitimacy of the current user may be inferred based on a comparison of user-related activity of the current user to a persona model which may comprise behavior patterns rules or other information for identifying a legitimate user if it is determined that the current user is likely legitimate then access to secure information may be permitted however if it is determined that the current user is likely illegitimate than a verification procedure may be provided to the current user such as a temporal dynamic security challenge based on recent activity conducted by the legitimate user
",1,H04_1,2,0.0,1.0,6.0
US10164985B2,142,"Device, system, and method of recovery and resetting of user authentication factor ",2018-12-25,"['US9207772B2', 'US10740758B2', 'US10567376B2', 'JP6820062B2', 'KR101721032B1', 'US20200327458A1', 'US20180160309A1', 'CN107077551B', 'US9712558B2', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'US10079853B2', 'US10157273B2', 'US10200360B2', 'US9838373B2', 'US10114935B2', 'US8806610B2', 'US10558792B2', 'CN104408341B']","
Devices, systems, and methods of password recovery and password reset, as well as resetting or recovering other types of user-authentication factor. A system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service. The system defines a user-specific task or challenge, in which the user is requested to enter a phrase or perform a task. A user-specific feature is extracted from the manner in which the user performs the task. Subsequently, that user-specific feature is utilized instead of a security question, in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task, and monitoring the manner in which the user performs the fresh task.
",H04,2018,"
devices systems and methods of password recovery and password reset as well as resetting or recovering other types of user-authentication factor a system monitors and tracks user-interactions that are performed by a user of an electronic device or a computerized service the system defines a user-specific task or challenge in which the user is requested to enter a phrase or perform a task a user-specific feature is extracted from the manner in which the user performs the task subsequently that user-specific feature is utilized instead of a security question in order to verify the identity of the user and to allow the user to perform password reset or to perform a reset of another user-authentication factor; by presenting to the user the same task or a similar task and monitoring the manner in which the user performs the fresh task
",1,H04_1,2,0.0,1.0,6.0
US9477826B2,240,"Device, system, and method of detecting multiple users accessing the same account ",2016-10-25,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10686818B2,268,Method and apparatus to detect non-human users on computer systems ,2020-06-16,"['AU2019210493B2', 'US10110619B2', 'US20170085587A1', 'US9547766B2', 'US9626677B2', 'US9690915B2', 'US10579784B2', 'US20200387588A1', 'US20180034850A1', 'US9213990B2', 'US9779423B2', 'JP6239808B1']","
Methods and systems for malicious non-human user detection on computing devices are described. The method includes collecting, by a processing device, raw data corresponding to a user action, converting, by the processing device, the raw data to features, wherein the features represent characteristics of a human user or a malicious code acting as if it were the human user, and comparing, by the processing device, at least one of the features against a corresponding portion of a characteristic model to differentiate the human user from the malicious code acting as if it were the human user.
",H04,2020,"
methods and systems for malicious non-human user detection on computing devices are described the method includes collecting by a processing device raw data corresponding to a user action converting by the processing device the raw data to features wherein the features represent characteristics of a human user or a malicious code acting as if it were the human user and comparing by the processing device at least one of the features against a corresponding portion of a characteristic model to differentiate the human user from the malicious code acting as if it were the human user
",1,H04_1,2,0.0,1.0,6.0
US9690915B2,270,"Device, method, and system of detecting remote access users and differentiating among users ",2017-06-27,"['US10164985B2', 'US9788203B2', 'US10586036B2', 'US20190373018A1', 'KR101721032B1', 'US10230718B2', 'US10049209B2', 'US10187408B1', 'US10754935B2', 'US10735432B2', 'US10834090B2', 'US20170201540A1', 'US20200045076A1', 'US20190236250A1', 'AU2016315900B2', 'US10686818B2', 'US10019744B2', 'US9071969B2', 'US10476873B2', 'US10558792B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, detecting a possible cyber-attacker, detecting a remote access user, and detecting an automated script or malware. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service detecting a possible cyber-attacker detecting a remote access user and detecting an automated script or malware the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,G06_1,2,0.0,1.0,6.0
US10685355B2,575,"Method, device, and system of detecting mule accounts and accounts used for money laundering ",2020-06-16,"['US10164985B2', 'US9788203B2', 'US10740758B2', 'US10586036B2', 'KR101721032B1', 'US10637853B2', 'JP6433978B2', 'US10735432B2', 'US10834090B2', 'US20180189475A1', 'US10769635B2', 'US10108791B1', 'JP6594542B2', 'US10686818B2', 'US9813446B2', 'US20200257781A1', 'US8528091B2', 'US20190364019A1', 'US10476873B2', 'US10356069B2', 'US10037421B2']","
Method, device, and system of detecting a mule bank account, or a bank account used for terror funding or money laundering. A method includes: monitoring interactions of a user with a computing device during online access with a banking account; and based on the monitoring, determining that the online banking account is utilized as a mule bank account to illegally receive and transfer money. The method takes into account one or more indicators, such as, utilization of a remote access channel, utilization of a virtual machine or a proxy server, unique behavior across multiple different account, temporal correlation among operations, detection of a set of operations that follow a pre-defined mule account playbook, detection of multiple incoming fund transfers from multiple countries that are followed by a single outgoing fund transfer to a different country, and other suitable indicators.
",G06,2020,"
method device and system of detecting a mule bank account or a bank account used for terror funding or money laundering a method includes: monitoring interactions of a user with a computing device during online access with a banking account; and based on the monitoring determining that the online banking account is utilized as a mule bank account to illegally receive and transfer money the method takes into account one or more indicators such as utilization of a remote access channel utilization of a virtual machine or a proxy server unique behavior across multiple different account temporal correlation among operations detection of a set of operations that follow a pre-defined mule account playbook detection of multiple incoming fund transfers from multiple countries that are followed by a single outgoing fund transfer to a different country and other suitable indicators
",1,G06_1,2,0.0,1.0,6.0
US10476873B2,577,"Device, system, and method of password-less user authentication and password-less detection of user identity ",2019-11-12,"['US9207772B2', 'US9531733B2', 'US9547766B2', 'US10579784B2', 'US20170193526A1', 'US10055560B2', 'US10565569B2', 'US9519769B2', 'US10685355B2', 'CN106575401B', 'US9779423B2', 'US8646060B1', 'US10298614B2', 'US9477826B2', 'US10200360B2', 'US9838373B2', 'CN104318138B', 'EP3100152B1', 'US10558792B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting possible attackers; as well as password-less user authentication, and password-less detection of user identity. A system or a computing device requires a user to perform a particular unique non-user-defined task, the task optionally being an on-screen connect-the-dots task. The system monitors user interactions, extracts user-specific features that characterizes the manner in which the user performs the tasks; and subsequently relies on such user-specific features as a means for user authentication, optionally without utilizing a password or passphrase. Optionally, a user interface anomaly or interference is intentionally introduced in order to elicit the user to perform corrective gestures, which are optionally used for extraction of additional user-specific features.
",H04,2019,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting possible attackers; as well as password-less user authentication and password-less detection of user identity a system or a computing device requires a user to perform a particular unique non-user-defined task the task optionally being an on-screen connect-the-dots task the system monitors user interactions extracts user-specific features that characterizes the manner in which the user performs the tasks; and subsequently relies on such user-specific features as a means for user authentication optionally without utilizing a password or passphrase optionally a user interface anomaly or interference is intentionally introduced in order to elicit the user to perform corrective gestures which are optionally used for extraction of additional user-specific features
",1,H04_1,2,0.0,1.0,6.0
US10037421B2,578,"Device, system, and method of three-dimensional spatial user authentication ",2018-07-31,"['US9531733B2', 'US10740758B2', 'US10567376B2', 'US10735196B2', 'US9208492B2', 'US20200327458A1', 'EP2733635B1', 'US20160269411A1', 'US10735432B2', 'US9529987B2', 'CN106575401B', 'EP3108397B1', 'US9621567B2', 'US9794228B2', 'US9526006B2', 'US10200360B2', 'US9838373B2', 'US9071969B2', 'US8856543B2', 'US10558792B2', 'CN104408341B', 'US10728761B2', 'CN103797752B']","
Devices, systems, and methods of user authentication. A system includes a spatial challenge unit to distinguish between a human user and a non-human user. The spatial challenge unit requires the user to perform one or more spatial operations that modify the spatial properties of an electronic device operated by the user. Correct performance of the required spatial operations, indicates that the user is human. The system also includes a spatial password unit, which tracks a manner in which a human user handles the electronic device while the user enters a password; and then utilizes this user-specific manner for user authentication, by checking whether a manner in which the user enters his password matches a reference manner of password entry or a historical manner of password entry. The system also utilizes sequence of spatial operations or spatial gestures, as a pure spatial password or purely-spatial user-authentication factor.
",G06,2018,"
devices systems and methods of user authentication a system includes a spatial challenge unit to distinguish between a human user and a non-human user the spatial challenge unit requires the user to perform one or more spatial operations that modify the spatial properties of an electronic device operated by the user correct performance of the required spatial operations indicates that the user is human the system also includes a spatial password unit which tracks a manner in which a human user handles the electronic device while the user enters a password; and then utilizes this user-specific manner for user authentication by checking whether a manner in which the user enters his password matches a reference manner of password entry or a historical manner of password entry the system also utilizes sequence of spatial operations or spatial gestures as a pure spatial password or purely-spatial user-authentication factor
",1,G06_1,2,0.0,1.0,6.0
US9552470B2,600,"Method, device, and system of generating fraud-alerts for cyber-attacks ",2017-01-24,"['US9531733B2', 'US10044730B1', 'US9547766B2', 'US20200396237A1', 'US10474815B2', 'US9971891B2', 'AU2019219712B9', 'US10749887B2', 'US10055560B2', 'US9027134B2', 'US10187408B1', 'US9690915B2', 'US9621570B2', 'US10230746B2', 'US9477826B2', 'US9621566B2', 'US10182031B2', 'US10749884B2', 'US20200304522A1', 'US10728761B2', 'US10192051B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a cyber-attacker. An end-user device (a desktop computer, a laptop computer, a smartphone, a tablet, or the like) interacts and communicates with a server of a computerized server (a banking website, an electronic commerce website, or the like). The interactions are monitored, tracked and logged. User Interface (UI) interferences are intentionally introduced to the communication session; and the server tracks the response or the reaction of the end-user to such communication interferences. The system determines whether the user is a legitimate human user; or a cyber-attacker posing as the legitimate human user. The system displays gauges indicating cyber fraud scores or cyber-attack threat-levels. The system extrapolates from observed fraud incidents and utilizes a rules engine to automatically search for similar fraud events and to automatically detect fraud events or cyber-attackers.
",G06,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a cyber-attacker an end-user device (a desktop computer a laptop computer a smartphone a tablet or the like) interacts and communicates with a server of a computerized server (a banking website an electronic commerce website or the like) the interactions are monitored tracked and logged user interface (ui) interferences are intentionally introduced to the communication session; and the server tracks the response or the reaction of the end-user to such communication interferences the system determines whether the user is a legitimate human user; or a cyber-attacker posing as the legitimate human user the system displays gauges indicating cyber fraud scores or cyber-attack threat-levels the system extrapolates from observed fraud incidents and utilizes a rules engine to automatically search for similar fraud events and to automatically detect fraud events or cyber-attackers
",1,G06_1,2,0.0,1.0,6.0
US9531733B2,710,"Device, system, and method of detecting a remote access user ",2016-12-27,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US10754935B2', 'AU2016315900B2', 'US10735432B2', 'US10686818B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US9621567B2,843,"Device, system, and method of detecting hardware components ",2017-04-11,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US20190364019A1', 'US10686818B2', 'AU2016315900B2', 'US10735432B2', 'US10754935B2', 'US10834090B2', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2017,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US9450971B2,1445,"Device, system, and method of visual login and stochastic cryptography ",2016-09-20,"['US10230718B2', 'US10049209B2', 'US9071969B2', 'US10164985B2', 'US10839065B2', 'US10754935B2', 'AU2016315900B2', 'US10735432B2', 'US10686818B2', 'US10834090B2', 'RU2626337C1', 'US10558792B2', 'KR101721032B1', 'US20200327212A1', 'US9552470B2', 'US20190236250A1']","
Devices, systems, and methods of detecting user identity, differentiating between users of a computerized service, and detecting a possible attacker. The methods include monitoring of user-side input-unit interactions, in general and in response to an interference introduced to user-interface elements. The monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script, as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account.
",H04,2016,"
devices systems and methods of detecting user identity differentiating between users of a computerized service and detecting a possible attacker the methods include monitoring of user-side input-unit interactions in general and in response to an interference introduced to user-interface elements the monitored interactions are used for detecting an attacker that utilizes a remote access channel; for detecting a malicious automatic script as well as malicious code injection; to identify a particular hardware assembly; to perform user segmentation or user characterization; to enable a visual login process with implicit two-factor authentication; to enable stochastic cryptography; and to detect that multiple users are utilizing the same subscription account
",1,H04_1,2,0.0,1.0,6.0
US20190156034A1,1977,"System, device, and method of detecting vishing attacks ",2019-05-23,"['US9787723B2', 'US9531733B2', 'US9547766B2', 'US10164985B2', 'US10740758B2', 'US10037531B2', 'KR20180016232A', 'CN107077551B', 'US10776464B2', 'US9674218B2', 'US10754935B2', 'US9558339B2', 'US10735432B2', 'EP3256976B1', 'JP6239808B1', 'US9799080B2', 'US10778626B2', 'US9369479B2', 'US9477826B2', 'US9621567B2', 'US10154134B1', 'US10354054B2', 'US10057227B1', 'US10303864B2']","
Devices, systems, and methods of detecting a vishing attack, in which an attacker provides to a victim step-by-step over-the-phone instructions that command the victim to log-in to his bank account and to perform a dictated banking transaction. The system monitors transactions, online operations, user interactions, gestures performed via input units, and user engagement with User Interface elements. The system detects that the operations performed by the victim, follow a pre-defined playbook of a vishing attack. The system detects that the victim operates under duress or under dictated instructions, as exhibited in irregular doodling activity, data entry rhythm, typographical error introduction rhythm, unique posture of the user, alternating pattern of listening to phone instructions and performing online operations via a computer, and device orientation changes or spatial changes that characterize a device being used to perform an online transaction while also talking on the phone.
",G06,2019,"
devices systems and methods of detecting a vishing attack in which an attacker provides to a victim step-by-step over-the-phone instructions that command the victim to log-in to his bank account and to perform a dictated banking transaction the system monitors transactions online operations user interactions gestures performed via input units and user engagement with user interface elements the system detects that the operations performed by the victim follow a pre-defined playbook of a vishing attack the system detects that the victim operates under duress or under dictated instructions as exhibited in irregular doodling activity data entry rhythm typographical error introduction rhythm unique posture of the user alternating pattern of listening to phone instructions and performing online operations via a computer and device orientation changes or spatial changes that characterize a device being used to perform an online transaction while also talking on the phone
",1,G06_1,2,0.0,1.0,6.0
US10747305B2,3331,"Method, system, and device of authenticating identity of a user of an electronic device ",2020-08-18,"['US9122456B2', 'US9531733B2', 'US10032010B2', 'US10164985B2', 'JP2019021327A', 'US20170270289A1', 'US10069852B2', 'US20170193526A1', 'US20180107836A1', 'US9921659B2', 'CN107077551B', 'US9848009B2', 'US9626677B2', 'US9450971B2', 'AU2015255652B2', 'US9477826B2', 'US9621567B2', 'US9542541B1', 'US9838373B2', 'US20190347632A1', 'JP6542324B2', 'US10037421B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",H04,2020,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,H04_1,2,0.0,1.0,6.0
EP3011483A1,5057,"System, device, and method of detecting identity of a user of a mobile electronic device ",2016-04-27,"['CN104408341B', 'JP6542324B2', 'AU2015255652B2', 'US9921659B2', 'US10037421B2', 'US9542541B1', 'US9848009B2', 'US20190347632A1', 'US9531710B2', 'US10740758B2', 'US9832206B2', 'US20170270289A1', 'US10032010B2', 'US10164985B2', 'US9838373B2', 'US10565569B2', 'US10586036B2', 'US20170193526A1', 'US9280652B1', 'US20180107836A1', 'US9203835B2']","
A method for confirming identity of a user of a mobile electronic device, the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating, generating a user-specific trait indicative of said user. The method further includes storing a reference value of the user-specific trait, indicative of said user; in a subsequent usage session of the mobile electronic device, generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait, determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device.
",G06,2016,"
a method for confirming identity of a user of a mobile electronic device the method including: receiving touch data from a touch-screen of the mobile electronic device; receiving acceleration data from an accelerometer of the mobile electronic device; correlating between the touch data and the acceleration data; based on the correlating generating a user-specific trait indicative of said user the method further includes storing a reference value of the user-specific trait indicative of said user; in a subsequent usage session of the mobile electronic device generating a current value of the user-specific trait correlating between touch data and acceleration data; and based on a comparison between the current value of the user-specific trait and the reference value of the user-specific trait determining whether or not a current user of the mobile electronic device is an authorized user of the mobile electronic device
",1,G06_1,2,0.0,1.0,6.0
US9866218B2,402,Boolean logic in a state machine lattice ,2018-01-09,"['KR101474598B1', 'JP2004537106A', 'US10380446B2', 'US9164945B2', 'US10817569B2', 'US20190147278A1', 'US8725961B2', 'EP2580659B1', 'US9348784B2', 'TWI506556B', 'CN103443767B', 'TWI489300B', 'KR20050083667A', 'US9104828B2', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US7392229B2', 'US10152113B2', 'US10157208B2', 'CN1759393B', 'US9026485B2', 'US20190087243A1']","
Disclosed are methods and devices, among which is a device that includes a finite state machine lattice. The lattice may includes a programmable Boolean logic cell that may be programmed to perform various logic functions on a data stream. The programmability includes an inversion of a first input to the Boolean logic cell, an inversion of a last output of the Boolean logic cell, and a selection of an AND gate or an OR gate as a final output of the Boolean logic cell. The Boolean logic cell also includes end of data circuitry configured to cause the Boolean logic cell to only output after an end of data signifying the end of a data stream is received at the Boolean logic cell.
",other,2018,"
disclosed are methods and devices among which is a device that includes a finite state machine lattice the lattice may includes a programmable boolean logic cell that may be programmed to perform various logic functions on a data stream the programmability includes an inversion of a first input to the boolean logic cell an inversion of a last output of the boolean logic cell and a selection of an and gate or an or gate as a final output of the boolean logic cell the boolean logic cell also includes end of data circuitry configured to cause the boolean logic cell to only output after an end of data signifying the end of a data stream is received at the boolean logic cell
",2,other_2,2,6.0,14.0,5.0
US9817678B2,403,Methods and systems for detection in a state machine ,2017-11-14,"['KR101474598B1', 'EP2386081B1', 'US10380446B2', 'CN107729989B', 'US10817569B2', 'JP5857072B2', 'US20190147278A1', 'US8725961B2', 'US9348784B2', 'CN103547998B', 'US9104828B2', 'EP1532496B1', 'US10417236B2', 'US10180922B2', 'US9164940B2', 'JP4921638B2', 'US9916145B2', 'US7392229B2', 'US10152113B2', 'US10157208B2', 'US20200285604A1', 'CN1759393B', 'US9026485B2', 'US20190087243A1']","
A device including a data analysis element including a plurality of memory cells. The memory cells analyze at least a portion of a data stream and output a result of the analysis. The device also includes a detection cell. The detection cell includes an AND gate. The AND gate receives result of the analysis as a first input. The detection cell also includes a D flip-flop including an output coupled to a second input of the AND gate.
",G06,2017,"
a device including a data analysis element including a plurality of memory cells the memory cells analyze at least a portion of a data stream and output a result of the analysis the device also includes a detection cell the detection cell includes an and gate the and gate receives result of the analysis as a first input the detection cell also includes a d flip-flop including an output coupled to a second input of the and gate
",2,G06_2,2,6.0,14.0,5.0
US10817569B2,404,Methods and devices for saving and/or restoring a state of a pattern-recognition processor ,2020-10-27,"['KR101996961B1', 'US9866218B2', 'US7680852B2', 'TWI569206B', 'US20040059443A1', 'TWI590096B', 'CN104067282B', 'TWI602120B', 'CN105912992B', 'US8583896B2', 'TWI492062B', 'US6392910B1', 'US10606787B2', 'KR101908768B1', 'KR101012623B1', 'JP6181074B2', 'US10691799B2', 'US9916145B2', 'US9934034B2', 'CN103988212B', 'US10089086B2', 'CN102232216B', 'CN102272776B', 'JP3670160B2', 'US20190087243A1']","
Systems and methods are disclosed for saving and restoring the search state of a pattern-recognition processor. Embodiments include a pattern-recognition processor having a state variable array and a state variable storage array stored in on-chip memory (on-silicon memory with the processor). State variable storage control logic of the pattern-recognition processor may control the saving of state variables from the state variable array to the state variable storage array. The state variable storage control logic may also control restoring of the state variables from the state variable storage array to restore a search state.
",G06,2020,"
systems and methods are disclosed for saving and restoring the search state of a pattern-recognition processor embodiments include a pattern-recognition processor having a state variable array and a state variable storage array stored in on-chip memory (on-silicon memory with the processor) state variable storage control logic of the pattern-recognition processor may control the saving of state variables from the state variable array to the state variable storage array the state variable storage control logic may also control restoring of the state variables from the state variable storage array to restore a search state
",2,G06_2,2,6.0,14.0,5.0
US10366009B2,405,Methods and systems for handling data received by a state machine engine ,2019-07-30,"['US8843523B2', 'EP3709224A1', 'US10380446B2', 'CN107729989B', 'CN103003792B', 'US9164945B2', 'US10817569B2', 'US8131659B2', 'JP5857072B2', 'US20190147278A1', 'US8725961B2', 'TWI506556B', 'KR101033429B1', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US7392229B2', 'US9639493B2', 'US10157208B2', 'CN1759393B', 'US9026485B2']","
A data analysis system to analyze data. The data analysis system includes a data buffer configured to receive data to be analyzed. The data analysis system also includes a state machine lattice. The state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis. The data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice.
",G06,2019,"
a data analysis system to analyze data the data analysis system includes a data buffer configured to receive data to be analyzed the data analysis system also includes a state machine lattice the state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis the data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice
",2,G06_2,2,6.0,14.0,5.0
US7392229B2,793,General purpose set theoretic processor ,2008-06-24,"['US9535861B2', 'US9866218B2', 'US9817678B2', 'US10417236B2', 'US9886017B2', 'US10152113B2', 'US10817569B2', 'US10909452B2', 'US10733508B2', 'US10572414B2', 'US10366009B2', 'US8725961B2', 'US9164940B2']","
A general purpose processor architecture (methods and apparatuses) that can discern all subsets of a serial data stream which fulfill an arbitrarily complex reference pattern. The invention comprises an ordered set of Detection Cells conditionally interconnected according to the reference pattern and operationally controlling one another's states through the network. The invention preferably includes a Host Interface to enable reporting of Results from a search session as well as the input and control of reference patterns and source data.
",G06,2008,"
a general purpose processor architecture (methods and apparatuses) that can discern all subsets of a serial data stream which fulfill an arbitrarily complex reference pattern the invention comprises an ordered set of detection cells conditionally interconnected according to the reference pattern and operationally controlling one another's states through the network the invention preferably includes a host interface to enable reporting of results from a search session as well as the input and control of reference patterns and source data
",2,G06_2,2,6.0,14.0,5.0
US10152113B2,794,Dynamic power-down of a block of a pattern-recognition processor ,2018-12-11,"['KR102061754B1', 'KR101996961B1', 'US9866218B2', 'CN106852185B', 'US7680852B2', 'TWI569206B', 'CN104067282B', 'US7451143B2', 'KR20050085299A', 'CN105912992B', 'JP6122121B2', 'US8583896B2', 'US6392910B1', 'US10366009B2', 'US20190278612A1', 'KR102168930B1', 'JP6207605B2', 'JP6181074B2', 'CN103988212B', 'JP6041987B2', 'US7392229B2', 'CN102232216B', 'JP2008547106A', 'US9792097B2']","
A device includes a pattern-recognition processor. The pattern recognition processor includes blocks, such that each of the blocks include a plurality of feature cells configured to analyze at least a portion of data to be analyzed and to selectively provide a result of the analysis. The pattern recognition processor also includes block deactivation logic configured to dynamically power-down the block.
",G06,2018,"
a device includes a pattern-recognition processor the pattern recognition processor includes blocks such that each of the blocks include a plurality of feature cells configured to analyze at least a portion of data to be analyzed and to selectively provide a result of the analysis the pattern recognition processor also includes block deactivation logic configured to dynamically power-down the block
",2,G06_2,2,6.0,14.0,5.0
US9164940B2,799,Methods and systems to accomplish variable width data input ,2015-10-20,"['TWI569206B', 'US7539032B2', 'US10733508B2', 'CN104067282B', 'JP2014182810A', 'US10366009B2', 'US20080071780A1', 'US10606787B2', 'KR101873619B1', 'JP2745949B2', 'EP1994474B1', 'CN102741859B', 'CA1181866A', 'KR101012623B1', 'US10909452B2', 'JP6207605B2', 'JP6181074B2', 'US20050232020A1', 'US9934034B2', 'CN103988212B', 'CN102272714B', 'US4384325A', 'US20050050237A1', 'US7533273B2', 'US7308561B2']","
Disclosed are methods and systems for variable width data input to a pattern-recognition processor. A variable width data input method may include receiving bytes over a data bus having a first width and receiving one or more signals indicating the validity of each of the one or more bytes. The valid bytes may be sequentially provided to a pattern-recognition processor in an 8-bit wide data stream. In an embodiment, a system may include one or more address lines configured to provide the one or more signals indicating the validity of the bytes transferred over the data bus. The system may include a buffer and control logic to sequentially process the valid bytes.
",G06,2015,"
disclosed are methods and systems for variable width data input to a pattern-recognition processor a variable width data input method may include receiving bytes over a data bus having a first width and receiving one or more signals indicating the validity of each of the one or more bytes the valid bytes may be sequentially provided to a pattern-recognition processor in an 8-bit wide data stream in an embodiment a system may include one or more address lines configured to provide the one or more signals indicating the validity of the bytes transferred over the data bus the system may include a buffer and control logic to sequentially process the valid bytes
",2,G06_2,2,6.0,14.0,5.0
US9026485B2,977,Pattern-recognition processor with matching-data reporting module ,2015-05-05,"['JP4365162B2', 'US9817678B2', 'US7680852B2', 'US20170261956A1', 'US10733508B2', 'US9454322B2', 'TWI502502B', 'CN104011723B', 'KR20050073429A', 'US10606787B2', 'JP2511435B2', 'CN102741859B', 'KR101012623B1', 'US9787706B1', 'US10558804B2', 'JP6051212B2', 'US7792810B1', 'US9934034B2', 'CN102232216B', 'CN102272776B', 'US20200117977A1', 'US7146643B2', 'KR101858311B1']","
Disclosed are methods and devices, among which is a device that includes a pattern-recognition processor. The pattern-recognition processor may include a matching-data reporting module, which may have a buffer and a match event table. The buffer may be coupled to a data stream and configured to store at least part of the data stream, and the match event table may be configured to store data indicative of a buffer location corresponding with a start of a search criterion being satisfied.
",G06,2015,"
disclosed are methods and devices among which is a device that includes a pattern-recognition processor the pattern-recognition processor may include a matching-data reporting module which may have a buffer and a match event table the buffer may be coupled to a data stream and configured to store at least part of the data stream and the match event table may be configured to store data indicative of a buffer location corresponding with a start of a search criterion being satisfied
",2,G06_2,2,6.0,14.0,5.0
US9164945B2,1127,"Devices, systems, and methods to synchronize parallel processing of a single data stream ",2015-10-20,"['US8601013B2', 'TWI488110B', 'CN104603742B', 'US20040059443A1', 'US20130124823A1', 'CN104067282B', 'US7451143B2', 'CN104011723B', 'JP6122121B2', 'US20190079984A1', 'US8583896B2', 'KR20050083877A', 'US4152762A', 'CN103999035B', 'JP2745949B2', 'CN102741859B', 'JP6207605B2', 'CN103988212B', 'CN102272714B', 'US10089086B2', 'CN104011736B', 'CN102232216B', 'US20050050237A1', 'JP6017034B2', 'TWI625631B']","
Disclosed are methods and devices, among which is a system that includes one or more pattern-recognition processors, such as in a pattern-recognition cluster. The pattern-recognition processors may be activated to perform a search of a data stream individually using a chip select or in parallel using a universal select signal. In this manner, the plurality of pattern-recognition processors may be enabled concurrently for synchronized processing of the data stream.
",G06,2015,"
disclosed are methods and devices among which is a system that includes one or more pattern-recognition processors such as in a pattern-recognition cluster the pattern-recognition processors may be activated to perform a search of a data stream individually using a chip select or in parallel using a universal select signal in this manner the plurality of pattern-recognition processors may be enabled concurrently for synchronized processing of the data stream
",2,G06_2,2,6.0,14.0,5.0
US10671295B2,2893,Methods and systems for using state vector data in a state machine engine ,2020-06-02,"['EP2386081B1', 'EP3709224A1', 'US10380446B2', 'CN107729989B', 'US9164945B2', 'US10817569B2', 'JP5753091B2', 'US20190147278A1', 'WO2017124644A1', 'US8725961B2', 'TWI506556B', 'CN103443767B', 'KR101033429B1', 'US9104828B2', 'WO2018205708A1', 'US10417236B2', 'US9164940B2', 'US9916145B2', 'US20140129802A1', 'US10152113B2', 'US8442927B2', 'US10157208B2', 'CN1759393B', 'US9026485B2']","
A state machine engine includes a state vector system. The state vector system includes an input buffer configured to receive state vector data from a restore buffer and to provide state vector data to a state machine lattice. The state vector system also includes an output buffer configured to receive state vector data from the state machine lattice and to provide state vector data to a save buffer.
",G06,2020,"
a state machine engine includes a state vector system the state vector system includes an input buffer configured to receive state vector data from a restore buffer and to provide state vector data to a state machine lattice the state vector system also includes an output buffer configured to receive state vector data from the state machine lattice and to provide state vector data to a save buffer
",2,G06_2,2,6.0,14.0,5.0
US10915450B2,7267,Methods and systems for padding data received by a state machine engine ,2021-02-09,"['US10380446B2', 'US10817569B2', 'CN1759393B', 'US9164945B2', 'US9916145B2', 'JP5387866B2', 'US8725961B2', 'US20160320829A1', 'US9164940B2', 'US20190147278A1', 'US7451459B2', 'KR101033429B1', 'US9639493B2', 'US7392229B2', 'US10157208B2', 'JP6258034B2', 'TWI506556B', 'WO2019085655A1', 'CN103003792B', 'TWI512625B', 'CN107729989B', 'US10417236B2', 'JP5857072B2', 'JP2004537106A', 'US9026485B2']","
A data analysis system to analyze data. The data analysis system includes a data buffer configured to receive data to be analyzed. The data analysis system also includes a state machine lattice. The state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis. The data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice.
",G06,2021,"
a data analysis system to analyze data the data analysis system includes a data buffer configured to receive data to be analyzed the data analysis system also includes a state machine lattice the state machine lattice includes multiple data analysis elements and each data analysis element includes multiple memory cells configured to analyze at least a portion of the data and to output a result of the analysis the data analysis system includes a buffer interface configured to receive the data from the data buffer and to provide the data to the state machine lattice
",2,G06_2,2,6.0,14.0,5.0
CN109447048B,1209,Artificial intelligence early warning system ,2020-12-25,"['CN103578240B', 'CN103273982B', 'CN201893807U', 'US10867398B2', 'CN102981467B', 'US20180048693A1', 'CN103116825B', 'CN104052151A', 'CN105765565A', 'AU2016331221B2', 'CN105023188B', 'CN103839346B', 'CN104537788B', 'CN105187771A', 'CN102545386B', 'CN107211515A', 'CN105427221A', 'CN103839373B', 'US10768625B2', 'CN101795395B', 'CN102724478B', 'CN203799428U']","
The invention relates to an artificial intelligence early warning system which comprises an intelligent internet of things and risk factor data acquisition system (100), a risk factor management system (200), cloud computing (300), cloud storage (400), a cloud database (500), an artificial intelligence early warning operating system (600), an artificial intelligence early warning server (700), an internet + distributed early warning kiosk (800), a five-level artificial intelligence early warning system (900), a four-level artificial intelligence early warning system (1000), a three-level artificial intelligence early warning system (1100), a two-level artificial intelligence early warning system (1200) and a one-level artificial intelligence early warning system (1300). According to the invention, an artificial intelligent early warning system is used for collecting, contrastively analyzing, reasoning, evaluating, cloud computing, cloud storage, grading alarm and coping prevention and control on risk factors; the all-weather 24-hour monitoring on the peripheral control points of the police kiosk is realized, the information sharing can be realized for users, the utilization rate of information resources is improved, and the safety guarantee is increased for maintaining the frontier stability.
",G06,2020,"
the invention relates to an artificial intelligence early warning system which comprises an intelligent internet of things and risk factor data acquisition system (100) a risk factor management system (200) cloud computing (300) cloud storage (400) a cloud database (500) an artificial intelligence early warning operating system (600) an artificial intelligence early warning server (700) an internet + distributed early warning kiosk (800) a five-level artificial intelligence early warning system (900) a four-level artificial intelligence early warning system (1000) a three-level artificial intelligence early warning system (1100) a two-level artificial intelligence early warning system (1200) and a one-level artificial intelligence early warning system (1300) according to the invention an artificial intelligent early warning system is used for collecting contrastively analyzing reasoning evaluating cloud computing cloud storage grading alarm and coping prevention and control on risk factors; the all-weather 24-hour monitoring on the peripheral control points of the police kiosk is realized the information sharing can be realized for users the utilization rate of information resources is improved and the safety guarantee is increased for maintaining the frontier stability
",3,G06_3,2,4.0,78.0,2.0
CN104537788A,3367,High voltage electric transmission line external damage-proof intelligent image pre-warning system and method ,2015-04-22,"['CN103021109A', 'CN204024115U', 'CN205656469U', 'CN202196177U', 'CN203465572U', 'CN203204743U', 'CN104079874B', 'CN105187769B', 'CN103203087A', 'CN207092737U', 'CN104700586B', 'CN105989682A', 'CN202331743U', 'CN103065409B', 'CN102821525B', 'CN109447048B', 'CN103514700A', 'CN103281364B', 'CN202067379U', 'CN102931724A', 'CN102231227B', 'CN102446390A', 'CN103578228B', 'CN201773460U', 'CN103676857B']","
The invention discloses a high voltage electric transmission line external damage-proof intelligent image pre-warning system and method. The system comprises front side monitor equipment, a rear side server and user side moving monitor terminals. The front side monitor equipment is arranged on high voltage line iron towers to monitor areas to be monitored. When an objective of hazardous operation is detected, a site image is sent to the server, warning messages and the link of the site image on the server are sent to the moving monitor terminals of corresponding electric inspection personnel, and the rear side server receives image information and performs image preservation and management, log management, and log-in information management of inspection personnel. The user side moving monitor terminals are cell phones which receive the image information and warning message information and send control instructions to the front side monitor equipment to warn in a voice mode. Through adopting an intelligent image recognition algorithm, the high voltage electric transmission line external damage-proof intelligent image pre-warning system and method can monitor field operation in high voltage line areas to be monitored automatically and provide an effective method to high voltage damage-proof applying requirements.
",other,2015,"
the invention discloses a high voltage electric transmission line external damage-proof intelligent image pre-warning system and method the system comprises front side monitor equipment a rear side server and user side moving monitor terminals the front side monitor equipment is arranged on high voltage line iron towers to monitor areas to be monitored when an objective of hazardous operation is detected a site image is sent to the server warning messages and the link of the site image on the server are sent to the moving monitor terminals of corresponding electric inspection personnel and the rear side server receives image information and performs image preservation and management log management and log-in information management of inspection personnel the user side moving monitor terminals are cell phones which receive the image information and warning message information and send control instructions to the front side monitor equipment to warn in a voice mode through adopting an intelligent image recognition algorithm the high voltage electric transmission line external damage-proof intelligent image pre-warning system and method can monitor field operation in high voltage line areas to be monitored automatically and provide an effective method to high voltage damage-proof applying requirements
",3,other_3,2,4.0,78.0,2.0
CN107748786A,3898,Alert big data management system ,2018-03-02,"['CN203720890U', 'CN107046578A', 'CN103441571A', 'CN104517432A', 'CN205507540U', 'CN104852992A', 'CN105554059B', 'CN103391432A', 'CN103955174A', 'CN104040601B', 'CN103327122A', 'CN109447048B', 'CN206069114U', 'CN103607467B', 'CN106709580A', 'CN104537788A', 'CN102023599B', 'WO2017059395A1', 'CN105427221A', 'CN107016057A', 'CN102063690A', 'CN105096508A', 'CN103096032B', 'CN107193375A', 'CN105050224B']","
The invention discloses alert big data management system to includeData prediction subsystem, for anticipating alert data to reduce error in dataConvergence subsystem, for by alert tidal data recovering and being stored in databaseData analytics subsystem, for analyzing and processing deposit to the alert data of databaseData application subsystem, for establishing the algorithm model based on alert data, multiple data warehouses simultaneously carry out data analysis and computingData display subsystem, for showing the data and information that need to showMonitoring management subsystem, for monitoring alert big data management system normal operation.Data prediction subsystem, convergence analyzing and processing subsystem, form data connection between data application subsystem and data display subsystem.The present invention is advantageous in that, there is provided a kind of alert big data management system that can timely and effectively handle alert data.
",G06,2018,"
the invention discloses alert big data management system to includedata prediction subsystem for anticipating alert data to reduce error in dataconvergence subsystem for by alert tidal data recovering and being stored in databasedata analytics subsystem for analyzing and processing deposit to the alert data of databasedata application subsystem for establishing the algorithm model based on alert data multiple data warehouses simultaneously carry out data analysis and computingdata display subsystem for showing the data and information that need to showmonitoring management subsystem for monitoring alert big data management system normal operationdata prediction subsystem convergence analyzing and processing subsystem form data connection between data application subsystem and data display subsystemthe present invention is advantageous in that there is provided a kind of alert big data management system that can timely and effectively handle alert data
",3,G06_3,2,4.0,78.0,2.0
CN103955174A,3899,Building health monitoring system based on building information model technology ,2014-07-30,"['CN201628558U', 'CN201937337U', 'CN206594781U', 'CN106979798B', 'CN100538759C', 'CN107748945A', 'CN202033053U', 'CN203365585U', 'CN205003813U', 'CN102156180B', 'CN103078673A', 'CN109447048B', 'CN103852744A', 'CN203490806U', 'CN103514700A', 'CN107831285B', 'CN104092750B', 'CN102735966A', 'CN105550824A', 'CN102721741B', 'CN101266254A', 'CN102162773B', 'CN102592424A']","
The invention discloses a building health monitoring system based on the building information model technology, and relates to the field of health performance monitoring of high-rise buildings and super high-rise buildings. The system is composed of an alarm system, a composite detection subsystem, an indication light subsystem and a remote management subsystem. Units of the system conduct information interchange through buses. The building information model technology is adopted in the system, so that the building information integration degree is greatly increased; an information sharing platform is provided, and the status, the change rule and the development tendency of a building can be integrally analyzed and evaluated. Wireless communication nodes are arranged between the composite detection subsystem and the remote management subsystem, wireless network coverage of a local area is achieved, and overall reliability and overall applicability of the system are enhanced. Composite detection nodes in the composite detection subsystem are of a multihop clustering network structure, communication energy consumption can be effectively reduced, service loads between the nodes are balanced, and extendibility of a network is improved.
",other,2014,"
the invention discloses a building health monitoring system based on the building information model technology and relates to the field of health performance monitoring of high-rise buildings and super high-rise buildings the system is composed of an alarm system a composite detection subsystem an indication light subsystem and a remote management subsystem units of the system conduct information interchange through buses the building information model technology is adopted in the system so that the building information integration degree is greatly increased; an information sharing platform is provided and the status the change rule and the development tendency of a building can be integrally analyzed and evaluated wireless communication nodes are arranged between the composite detection subsystem and the remote management subsystem wireless network coverage of a local area is achieved and overall reliability and overall applicability of the system are enhanced composite detection nodes in the composite detection subsystem are of a multihop clustering network structure communication energy consumption can be effectively reduced service loads between the nodes are balanced and extendibility of a network is improved
",3,other_3,2,4.0,78.0,2.0
CN104318732B,4184,Transformer substation field worker monitoring and management system and method based on video analysis and RFID ,2017-02-15,"['CN101909203B', 'CN104122842B', 'CN201003413Y', 'CN100485558C', 'CN106779447A', 'CN102169614B', 'US20090122143A1', 'CN102375140A', 'CN201212325Y', 'CN201681464U', 'CN202854920U', 'CN201503601U', 'CN103680028B', 'CN203773681U', 'CN105913037A', 'CN205015693U', 'CN103248534A', 'CN103854233A', 'CN204884045U', 'CN103617699A', 'CN104463174A', 'CN102509428A', 'CN108206932A', 'CN104155959B', 'CN103108159B']","
The invention discloses a transformer substation field worker monitoring and management system and method based on video analysis and RFID. The management system comprises a video monitoring module for acquiring video data of a field zone, a danger zone and a key device zone, an RFID identification module for reading RFID identifier information of workers in a wireless mode and transmitting the RFID identifier information to a monitoring center through the Ethernet  to conduct worker permission analysis; a voice early warning module connected with the monitoring center and used for sending early warning prompt information according to video analysis and the worker authority analysis, and the monitoring center for analyzing received monitoring videos and RFID identifier information results of the workers. The transformer substation field worker monitoring and management system and method can identify whether the field workers wear safety helmets or not and identify colors by means of a video analysis technology, utilizes an RFID technology to identify the identity permissions of the workers, can completely eradicate the potential safety hazard that the workers who do not wear the safety helmets enter a field and stray into a restricted zone and can achieve an anti-theft function.
",other,2017,"
the invention discloses a transformer substation field worker monitoring and management system and method based on video analysis and rfid the management system comprises a video monitoring module for acquiring video data of a field zone a danger zone and a key device zone an rfid identification module for reading rfid identifier information of workers in a wireless mode and transmitting the rfid identifier information to a monitoring center through the ethernet  to conduct worker permission analysis; a voice early warning module connected with the monitoring center and used for sending early warning prompt information according to video analysis and the worker authority analysis and the monitoring center for analyzing received monitoring videos and rfid identifier information results of the workers the transformer substation field worker monitoring and management system and method can identify whether the field workers wear safety helmets or not and identify colors by means of a video analysis technology utilizes an rfid technology to identify the identity permissions of the workers can completely eradicate the potential safety hazard that the workers who do not wear the safety helmets enter a field and stray into a restricted zone and can achieve an anti-theft function
",3,other_3,2,4.0,3.0,2.0
CN106092191B,5694,A kind of laboratory environment monitoring wireless sensing device and safety pre-warning system ,2018-12-07,"['CN205942994U', 'CN110291489A', 'US20200145906A1', 'AU2017209096B2', 'CN103984315A', 'AU2014101617A4', 'CN203465820U', 'CN104334075B', 'WO2016061365A1', 'CN206069114U', 'CN103325080B', 'CN103839373B', 'CN104318732B', 'US10467885B2', 'US20180365950A1', 'CN109447048B', 'US20170372568A1', 'CN105632101A', 'US20120047083A1', 'US7755480B2', 'CN104799826A', 'CN105581411B', 'CN105247587B', 'US20150119069A1']","
The present invention provides a kind of laboratory environment monitoring wireless sensing device and safety pre-warning systems, comprising: sensing module detection obtains sensitive informationDangerous discernment module obtains the security information of ambient enviroment according to sensitive information and is sent to control moduleControl module is used for: module is established to be wirelessly connected with preset laboratory environment monitoring wireless sensing device automatically by wireless communication sets up sensor network, and determines leader node and member node with the laboratory environment monitoring wireless sensing device being connected according to preset voting protocolWherein, laboratory environment monitoring wireless sensing device is as member node, and control module also sends security information to leader node when security level is preset range, or response sends sensitive information from the received cooperation order of leader node to leader nodeOr laboratory environment monitoring wireless sensing device, as leader node, received security information is also forwarded to server by control module, and/or sends cooperation order to all member nodes.
",other,2018,"
the present invention provides a kind of laboratory environment monitoring wireless sensing device and safety pre-warning systems comprising: sensing module detection obtains sensitive informationdangerous discernment module obtains the security information of ambient enviroment according to sensitive information and is sent to control modulecontrol module is used for: module is established to be wirelessly connected with preset laboratory environment monitoring wireless sensing device automatically by wireless communication sets up sensor network and determines leader node and member node with the laboratory environment monitoring wireless sensing device being connected according to preset voting protocolwherein laboratory environment monitoring wireless sensing device is as member node and control module also sends security information to leader node when security level is preset range or response sends sensitive information from the received cooperation order of leader node to leader nodeor laboratory environment monitoring wireless sensing device as leader node received security information is also forwarded to server by control module and/or sends cooperation order to all member nodes
",3,other_3,2,4.0,3.0,2.0
CN105957305A,6485,Prison anti-terrorism early warning system based on visual identification and big data technology ,2016-09-21,"['CN201111180Y', 'CN106355714B', 'CN101290704B', 'CN108297058B', 'CN103325164A', 'CN104537788A', 'CN102591275B', 'CN203799428U', 'CN105913037A', 'CN103839346B', 'CN101093603A', 'CN103839373B', 'CN104318732B', 'CN103268680B', 'CN101610396A', 'CN104052151A', 'CN103714648B', 'CN103297751A', 'CN109447048B', 'WO2017059395A1', 'CN103578240B', 'CN106100672A', 'US20130173062A1', 'CN105119998B', 'CN103273982B']","
The invention discloses a prison anti-terrorism early warning system based on visual identification and big data technology. The system comprises infrared identification code prison uniforms, wherein the infrared identification code prison uniforms are specially-made prison uniforms printed with invisible infrared identification codes, which are in unique correspondence to prison numbers of prisoners, and serve as identity symbols of the prisoners; dormitories, playground, dining rooms and factories and the like are equipped with digital high-definition cameras; and each digital high-definition camera is provided with a data temporary storage module and a wireless transmitter-receiver device, and can identify the invisible infrared identification codes on the prison uniforms in the view field. The system reduces monitoring work load of prison guards, saves manning quotas and labors, greatly improves prison anti-terrorism early warning capability and effect, solves various problems, facilitates superior leaders to monitor the states of terminals in real time, reduces study and judge time and improves decision-making efficiency; and after a prison anti-terrorism cloud is established, through the big data technology, it is hopeful that prisoner intention early warning is realized in the very early time, and the problems are nipped in the bud.
",other,2016,"
the invention discloses a prison anti-terrorism early warning system based on visual identification and big data technology the system comprises infrared identification code prison uniforms wherein the infrared identification code prison uniforms are specially-made prison uniforms printed with invisible infrared identification codes which are in unique correspondence to prison numbers of prisoners and serve as identity symbols of the prisoners; dormitories playground dining rooms and factories and the like are equipped with digital high-definition cameras; and each digital high-definition camera is provided with a data temporary storage module and a wireless transmitter-receiver device and can identify the invisible infrared identification codes on the prison uniforms in the view field the system reduces monitoring work load of prison guards saves manning quotas and labors greatly improves prison anti-terrorism early warning capability and effect solves various problems facilitates superior leaders to monitor the states of terminals in real time reduces study and judge time and improves decision-making efficiency; and after a prison anti-terrorism cloud is established through the big data technology it is hopeful that prisoner intention early warning is realized in the very early time and the problems are nipped in the bud
",3,other_3,2,4.0,78.0,2.0
US9838405B1,55,Systems and methods for determining types of malware infections on computing devices ,2017-12-05,"['US8806625B1', 'JP6689992B2', 'CA2804258C', 'US9401925B1', 'US9882920B2', 'US9407664B1', 'US9100426B1', 'US9948663B1', 'US9529990B2', 'US9154466B2', 'JP2018530066A', 'JP6335315B2', 'US9800606B1', 'US8850517B2', 'US9256739B1', 'CA2895265C', 'US10032033B2', 'US9223966B1', 'US9736178B1', 'US9998480B1', 'US9846772B1', 'US8806641B1']","
The disclosed computer-implemented method for determining types of malware infections on computing devices may include (1) identifying multiple types of security events generated by a group of endpoint devices that describe suspicious activities on the endpoint devices, each of the endpoint devices having one or more types of malware infections, (2) determining correlations between each type of security event generated by the group of endpoint devices and each type of malware infection within the group of endpoint devices, (3) identifying a set of security events generated on a target endpoint device that potentially has a malware infection, and (4) detecting, based on both the set of security events generated on the target endpoint device and the correlations between the types of malware infections and the types of security events, at least one type of malware infection likely present on the target endpoint device.
",H04,2017,"
the disclosed computer-implemented method for determining types of malware infections on computing devices may include (1) identifying multiple types of security events generated by a group of endpoint devices that describe suspicious activities on the endpoint devices each of the endpoint devices having one or more types of malware infections (2) determining correlations between each type of security event generated by the group of endpoint devices and each type of malware infection within the group of endpoint devices (3) identifying a set of security events generated on a target endpoint device that potentially has a malware infection and (4) detecting based on both the set of security events generated on the target endpoint device and the correlations between the types of malware infections and the types of security events at least one type of malware infection likely present on the target endpoint device
",4,H04_4,2,10.0,0.0,9.0
US9300693B1,57,Systems and methods for preventing data loss over virtualized networks ,2016-03-29,"['US9245123B1', 'JP6689992B2', 'US20140283079A1', 'US9294442B1', 'CA2972467C', 'US10686809B2', 'JP6730997B2', 'EP3374922B1', 'US9529990B2', 'JP5963966B2', 'JP6560368B2', 'US9892265B1', 'US9800606B1', 'US10009381B2', 'US9223966B1', 'US9336384B2', 'CA2964301C', 'US9736178B1', 'JP6205062B2', 'US9998480B1', 'US9141790B2', 'CN107431712B', 'US9514309B1', 'US10073864B1', 'US9256739B1']","
The disclosed computer-implemented method for preventing data loss over virtualized networks may include (1) receiving, by a data loss prevention callout driver registered to a switch, a network packet from a virtual machine, (2) identifying, by the data loss prevention callout driver registered to the switch, flow context information that specifies a context associated with transmitting the network packet, (3) providing the flow context information and the network packet to a data loss prevention service, and (4) applying, by the data loss prevention service, a data loss prevention policy to the network packet based on the flow context information. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for preventing data loss over virtualized networks may include (1) receiving by a data loss prevention callout driver registered to a switch a network packet from a virtual machine (2) identifying by the data loss prevention callout driver registered to the switch flow context information that specifies a context associated with transmitting the network packet (3) providing the flow context information and the network packet to a data loss prevention service and (4) applying by the data loss prevention service a data loss prevention policy to the network packet based on the flow context information various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9116768B1,59,Systems and methods for deploying applications included in application containers ,2015-08-25,"['JP6689992B2', 'US9268935B2', 'EP3362938B1', 'US9401925B1', 'US9185119B1', 'US9781143B1', 'JP6314267B2', 'US9009836B1', 'EP3374922B1', 'US9529990B2', 'EP3087531B1', 'JP6560368B2', 'US9800606B1', 'JP6166839B2', 'US8060940B2', 'US9600320B2', 'US10623418B2', 'US9223966B1', 'US20200137097A1', 'EP3207487B1', 'US9846772B1', 'US9514309B1', 'US10073864B1', 'JP6122555B2', 'US9141790B2']","
The disclosed computer-implemented method for deploying applications included in application containers may include (1) identifying an application container that includes an application and facilitates transferring the application to a deployment environment, (2) performing a reconnaissance analysis on the deployment environment by identifying one or more properties of the deployment environment, (3) determining, based at least in part on the reconnaissance analysis, that the deployment environment meets a predetermined threshold of requirements for securely executing the application, and then (4) transferring the application included in the application container to the deployment environment in response to determining that the deployment environment meets the predetermined threshold. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
the disclosed computer-implemented method for deploying applications included in application containers may include (1) identifying an application container that includes an application and facilitates transferring the application to a deployment environment (2) performing a reconnaissance analysis on the deployment environment by identifying one or more properties of the deployment environment (3) determining based at least in part on the reconnaissance analysis that the deployment environment meets a predetermined threshold of requirements for securely executing the application and then (4) transferring the application included in the application container to the deployment environment in response to determining that the deployment environment meets the predetermined threshold various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9223966B1,60,Systems and methods for replicating computing system environments ,2015-12-29,"['US9245123B1', 'US10169585B1', 'JP6689992B2', 'AU2015374078B2', 'US9838405B1', 'US10511636B2', 'EP3374922B1', 'EP3087531B1', 'JP6560368B2', 'US9300693B1', 'CA2868752C', 'US9852289B1', 'US9800606B1', 'JP5978365B2', 'JP6166839B2', 'US9166997B1', 'US9116768B1', 'US10331879B1', 'CA2964301C', 'US9736178B1', 'US8782792B1', 'US9998480B1', 'US10073864B1', 'US9256739B1', 'JP6101408B2']","
The disclosed computer-implemented method for replicating computing system environments may include (1) identifying each application installed on a plurality of computing systems, (2) creating, within a virtual machine image, virtual containers that store each application installed on the plurality of computing systems, (3) determining that a potentially malicious file is directed to a target computing system within the plurality of computing systems, (4) identifying each application installed on the target computing system, (5) in response to determining that the file is directed to the target computing system, replicating a configuration of the target computing system within the virtual machine image by, for each application installed on the target computing system, activating a virtual container that stores the application, and (6) determining how the file would affect the target computing system by sending the file to the virtual machine image and analyzing how the file impacts the virtual machine image.
",G06,2015,"
the disclosed computer-implemented method for replicating computing system environments may include (1) identifying each application installed on a plurality of computing systems (2) creating within a virtual machine image virtual containers that store each application installed on the plurality of computing systems (3) determining that a potentially malicious file is directed to a target computing system within the plurality of computing systems (4) identifying each application installed on the target computing system (5) in response to determining that the file is directed to the target computing system replicating a configuration of the target computing system within the virtual machine image by for each application installed on the target computing system activating a virtual container that stores the application and (6) determining how the file would affect the target computing system by sending the file to the virtual machine image and analyzing how the file impacts the virtual machine image
",4,G06_4,2,10.0,8.0,9.0
US9294284B1,62,Systems and methods for validating application signatures ,2016-03-22,"['CN105453102B', 'EP3411825B1', 'US9407664B1', 'US9838405B1', 'US9948663B1', 'EP3087531B1', 'US8904503B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9852289B1', 'US9800606B1', 'JP5978365B2', 'JP6166839B2', 'US9166997B1', 'US9116768B1', 'US9342705B1', 'US10032033B2', 'US9223966B1', 'US9148441B1', 'CA2964301C', 'US9736178B1', 'US9998480B1', 'CN107567699B', 'US9141790B2']","
A computer-implemented method for validating application signatures may include maintaining a signature-validation database that associates application publishers with signature keys by, for each application in a set of applications, (1) identifying a key used to sign the application, (2) determining that the application claims to be provided by a publisher, (3) verifying that the claimed publisher provides the application, and (4) maintaining, in response to verifying that the claimed publisher provides the application, an association that indicates that the publisher of the application is authorized to use the key. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for validating application signatures may include maintaining a signature-validation database that associates application publishers with signature keys by for each application in a set of applications (1) identifying a key used to sign the application (2) determining that the application claims to be provided by a publisher (3) verifying that the claimed publisher provides the application and (4) maintaining in response to verifying that the claimed publisher provides the application an association that indicates that the publisher of the application is authorized to use the key various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9852289B1,319,Systems and methods for protecting files from malicious encryption attempts ,2017-12-26,"['US9043922B1', 'US7657941B1', 'US9246944B1', 'US8806641B1', 'US9401925B1', 'US9596257B2', 'US10375086B2', 'EP3087531B1', 'JP6560368B2', 'US9571509B1', 'US9729579B1', 'US9223966B1', 'US10671724B2', 'US9148441B1', 'US9336384B2', 'EP3207487B1', 'US9736178B1', 'US9230099B1', 'US8756432B1', 'US9998480B1', 'EP2316092B1', 'US9846776B1', 'US9256739B1', 'JP6101408B2']","
A computer-implemented method for protecting files from malicious encryption attempts may include (1) detecting an attempt to alter a file, (2) identifying at least one characteristic of the attempt to alter the file, (3) determining, based on the characteristic of the attempt to alter the file, that the attempt to alter the file represents a malicious attempt by a third party to encrypt the file, and (4) performing a security action in response to determining that the attempt to alter the file represents a malicious attempt by the third party to encrypt the file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for protecting files from malicious encryption attempts may include (1) detecting an attempt to alter a file (2) identifying at least one characteristic of the attempt to alter the file (3) determining based on the characteristic of the attempt to alter the file that the attempt to alter the file represents a malicious attempt by a third party to encrypt the file and (4) performing a security action in response to determining that the attempt to alter the file represents a malicious attempt by the third party to encrypt the file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US10250617B1,348,Systems and methods for detecting malware using machine learning ,2019-04-02,"['US8806625B1', 'JP6689992B2', 'CA2804258C', 'US9330273B2', 'US9767013B1', 'US9100426B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'US9300693B1', 'JP6335315B2', 'US9852289B1', 'US9160766B2', 'US9166997B1', 'US9116768B1', 'US8291497B1', 'US8943587B2', 'US9223966B1', 'US9148441B1', 'US9336384B2', 'US9736178B1', 'US9998480B1', 'US10073864B1', 'US9424136B1']","
A computer-implemented method for detecting malware using machine learning may include (1) identifying data to be analyzed for malware, (2) classifying, using a classifier created by a combination of at least one deep learning neural network and at least one supervised data mining method, the data to be analyzed for malware, (3) determining, based on a predefined threshold, that the classification of the data indicates potential malware on the computing device, and (4) performing a security action based on the determination of potential malware on the computing device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
a computer-implemented method for detecting malware using machine learning may include (1) identifying data to be analyzed for malware (2) classifying using a classifier created by a combination of at least one deep learning neural network and at least one supervised data mining method the data to be analyzed for malware (3) determining based on a predefined threshold that the classification of the data indicates potential malware on the computing device and (4) performing a security action based on the determination of potential malware on the computing device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US8806625B1,349,Systems and methods for performing security scans ,2014-08-12,"['JP5586216B2', 'JP6689992B2', 'JP2017507414A', 'US8806641B1', 'US9407664B1', 'US8719935B2', 'US9529990B2', 'US9171156B1', 'US9571509B1', 'EP2831798B1', 'US9852289B1', 'US9166997B1', 'US9256739B1', 'US10032033B2', 'US8612594B1', 'US10331879B1', 'US9148441B1', 'US8725702B1', 'US9736178B1', 'US8667489B2', 'US9998480B1', 'US10496823B2', 'US10073864B1', 'US8578496B1', 'US9141790B2']","
A computer-implemented method for performing security scans may include 1) generating a first hash of a first file, 2) performing a first security scan on the first file, 3) storing the first hash to indicate a result of the first security scan of the first file, 4) identifying a second file and generating a second hash of the second file, 5) determining that the second hash of the second file is equivalent to the first hash of the first file and, in response, determining that the result of the first security scan of the first file applies to the second file, 6) identifying a third file and determining that the third file is volatile, and 7) performing a second security scan on the third file instead of generating a third hash of the third file. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2014,"
a computer-implemented method for performing security scans may include 1) generating a first hash of a first file 2) performing a first security scan on the first file 3) storing the first hash to indicate a result of the first security scan of the first file 4) identifying a second file and generating a second hash of the second file 5) determining that the second hash of the second file is equivalent to the first hash of the first file and in response determining that the result of the first security scan of the first file applies to the second file 6) identifying a third file and determining that the third file is volatile and 7) performing a second security scan on the third file instead of generating a third hash of the third file various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US9336384B2,354,Systems and methods for replacing application methods at runtime ,2016-05-10,"['US9052935B1', 'US9563457B2', 'US10073966B2', 'EP3411825B1', 'US10372919B1', 'US9465652B1', 'JP5816198B2', 'CA2770419C', 'EP3374922B1', 'US8561193B1', 'US9300693B1', 'US9571509B1', 'US8387046B1', 'JP6335315B2', 'US9852289B1', 'JP5978365B2', 'US9983891B1', 'US9342705B1', 'US10623418B2', 'US8725702B1', 'US9319380B2', 'US9230099B1', 'US8782792B1', 'US9424136B1']","
A computer-implemented method for replacing application methods at runtime may include identifying an application at runtime that includes a target method to replace at runtime with a source method, locating a target address of a target method data structure (that includes a target code pointer to method code of the target method) within memory at runtime that is referenced by a target class, determining a source address of a source method data structure (that includes a source code pointer to method code of the source method) within memory at runtime that describes the source method, and modifying the application at runtime to have the target class reference the source method instead of the target method by copying the source method data structure from the source address to the target address and, thereby, replacing the target code pointer with the source code pointer. Various other methods and systems are also disclosed.
",G06,2016,"
a computer-implemented method for replacing application methods at runtime may include identifying an application at runtime that includes a target method to replace at runtime with a source method locating a target address of a target method data structure (that includes a target code pointer to method code of the target method) within memory at runtime that is referenced by a target class determining a source address of a source method data structure (that includes a source code pointer to method code of the source method) within memory at runtime that describes the source method and modifying the application at runtime to have the target class reference the source method instead of the target method by copying the source method data structure from the source address to the target address and thereby replacing the target code pointer with the source code pointer various other methods and systems are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10073864B1,355,Systems and methods for automated aggregation of information-source metadata ,2018-09-11,"['US8806625B1', 'US8060596B1', 'US9100440B1', 'US9246944B1', 'US9202057B2', 'JP6360927B2', 'JP6314267B2', 'US9529990B2', 'JP6560368B2', 'US9300693B1', 'US9571509B1', 'US9727491B2', 'US9160766B2', 'US9800606B1', 'US8977661B2', 'US9166997B1', 'US9116768B1', 'US9223966B1', 'US8688601B2', 'US20200137097A1', 'CA2964301C', 'US9736178B1', 'US8458186B2', 'JP5978383B2', 'US20140019497A1']","
The disclosed computer-implemented method for automated aggregation of information-source metadata may include (1) receiving metadata of an information asset, the metadata of the information asset having been generated by a data-management system, (2) determining that the metadata of the information asset includes metadata of an information source that contains the information asset, (3) extracting the metadata of the information source from the metadata of the information asset, (4) storing the metadata of the information source in an information-source metadata repository such that the metadata of the information source is associated with the information source, and (5) providing access to the metadata of the information source stored in the information-source metadata repository to (a) the data-management system, (b) an additional data-management system, and/or (c) the entity. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for automated aggregation of information-source metadata may include (1) receiving metadata of an information asset the metadata of the information asset having been generated by a data-management system (2) determining that the metadata of the information asset includes metadata of an information source that contains the information asset (3) extracting the metadata of the information source from the metadata of the information asset (4) storing the metadata of the information source in an information-source metadata repository such that the metadata of the information source is associated with the information source and (5) providing access to the metadata of the information source stored in the information-source metadata repository to (a) the data-management system (b) an additional data-management system and/or (c) the entity various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US8756432B1,369,Systems and methods for detecting malicious digitally-signed applications ,2014-06-17,"['JP5586216B2', 'JP6689992B2', 'US8869305B1', 'US8806641B1', 'US9596257B2', 'JP5816198B2', 'US8671449B1', 'EP3374922B1', 'US9171156B1', 'US8826426B1', 'US9571509B1', 'US9852289B1', 'JP6166839B2', 'US8918387B1', 'US9166997B1', 'US9116768B1', 'US9256739B1', 'US8612594B1', 'US9223966B1', 'US10331879B1', 'US8302193B1', 'US9230099B1', 'US9998480B1', 'US8060596B1', 'US9141790B2']","
A computer-implemented method for detecting malicious digitally-signed applications. The method may include 1) identifying an application package file that has been digitally signed, wherein the application package file is used to distribute an application, 2) comparing the application package file to a set of known application package files, 3) determining that the application package file has been repackaged from a known application package file, 4) comparing a public key associated with a digital signature of the application package file to a public key associated with a digital signature of the known application package file, 5) determining that the public key associated with the digital signature of the application package file and the public key associated with the digital signature of the known application package file are different, and 6) performing a security action on the application. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for detecting malicious digitally-signed applications the method may include 1) identifying an application package file that has been digitally signed wherein the application package file is used to distribute an application 2) comparing the application package file to a set of known application package files 3) determining that the application package file has been repackaged from a known application package file 4) comparing a public key associated with a digital signature of the application package file to a public key associated with a digital signature of the known application package file 5) determining that the public key associated with the digital signature of the application package file and the public key associated with the digital signature of the known application package file are different and 6) performing a security action on the application various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,7.0,9.0
US9846772B1,370,Systems and methods for detecting misplaced applications using functional categories ,2017-12-19,"['EP3210364B1', 'US9330273B2', 'US9888032B2', 'JP6314267B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9300693B1', 'US9571509B1', 'US9852289B1', 'US9160766B2', 'US9800606B1', 'US8495705B1', 'US9166997B1', 'US9116768B1', 'US9223966B1', 'US9148441B1', 'US8688601B2', 'US9736178B1', 'US9998480B1', 'EP2316092B1', 'US10073864B1', 'JP6122555B2', 'US9256739B1', 'JP6101408B2']","
A computer-implemented method for detecting misplaced applications using functional categories may include (1) identifying a functional category assigned to an application located on a computing system, the functional category describing a field of functionality that the application performs, (2) identifying an additional functional category assigned to at least one of the computing system and another application located on the computing system, (3) applying a security policy to both the functional category assigned to the application and the additional functional category to determine whether the application belongs on the computing system according to the security policy, and (4) performing a security action to protect users based on the application of the security policy to the functional category assigned to the application and the additional functional category. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
a computer-implemented method for detecting misplaced applications using functional categories may include (1) identifying a functional category assigned to an application located on a computing system the functional category describing a field of functionality that the application performs (2) identifying an additional functional category assigned to at least one of the computing system and another application located on the computing system (3) applying a security policy to both the functional category assigned to the application and the additional functional category to determine whether the application belongs on the computing system according to the security policy and (4) performing a security action to protect users based on the application of the security policy to the functional category assigned to the application and the additional functional category various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9800606B1,384,Systems and methods for evaluating network security ,2017-10-24,"['US10367815B2', 'US9832217B2', 'JP6689992B2', 'US9210182B2', 'US10516682B2', 'EP3362938B1', 'US10652273B2', 'US10686809B2', 'US9686293B2', 'US9948663B1', 'US9529990B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9166997B1', 'US9516062B2', 'US9223966B1', 'US9148441B1', 'US10817602B2', 'US20200137097A1', 'US9736178B1', 'US10515211B2', 'US9998480B1', 'US8990948B2', 'US20170126731A1']","
A computer-implemented method for evaluating network security may include (1) receiving, by a security server, a request to report a network risk score for an organization based on telemetry data describing file downloads at computers managed by the organization over a specified period of time, (2) identifying the telemetry data describing file downloads at the computers managed by the organization over the specified period of time, (3) searching the telemetry data to match file downloads over the specified period of time to at least one file that was previously categorized, prior to the request, as a hacking tool, (4) calculating the network risk score based on the telemetry data, and (5) reporting, automatically by the security server in response to the request, the calculated network risk score. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for evaluating network security may include (1) receiving by a security server a request to report a network risk score for an organization based on telemetry data describing file downloads at computers managed by the organization over a specified period of time (2) identifying the telemetry data describing file downloads at the computers managed by the organization over the specified period of time (3) searching the telemetry data to match file downloads over the specified period of time to at least one file that was previously categorized prior to the request as a hacking tool (4) calculating the network risk score based on the telemetry data and (5) reporting automatically by the security server in response to the request the calculated network risk score various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US8739284B1,431,Systems and methods for blocking and removing internet-traversing malware ,2014-05-27,"['US9680849B2', 'JP6689992B2', 'US8806638B1', 'AU2018217323B2', 'US9210182B2', 'US20160180087A1', 'US7650639B2', 'US10348771B2', 'US9529990B2', 'US8646079B2', 'JP6560368B2', 'US9571509B1', 'US8607340B2', 'EP2486507B1', 'US9852289B1', 'US8161556B2', 'US9800606B1', 'US8479296B2', 'US10282548B1', 'EP2774039B1', 'US9418222B1', 'US9736178B1', 'US8782792B1', 'US9846776B1']","
A computer-implemented method for blocking and removing Internet-traversing malware may include: 1) identifying a persistent storage object of an Internet client application, 2) identifying an attempt by an executable object to access the persistent storage object, 3) determining that the executable object is not authorized to access the persistent storage object, and then 4) performing a security action based on the determination. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2014,"
a computer-implemented method for blocking and removing internet-traversing malware may include: 1) identifying a persistent storage object of an internet client application 2) identifying an attempt by an executable object to access the persistent storage object 3) determining that the executable object is not authorized to access the persistent storage object and then 4) performing a security action based on the determination various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9729579B1,503,Systems and methods for increasing security on computing systems that launch application containers ,2017-08-08,"['CN105453102B', 'US9245123B1', 'US8806625B1', 'JP6689992B2', 'US9246944B1', 'TWI530872B', 'US9401925B1', 'US9888032B2', 'JP6471233B2', 'EP3374922B1', 'US9258122B1', 'EP3087531B1', 'US9300693B1', 'US9852289B1', 'US8788763B2', 'JP5978365B2', 'US9934407B2', 'US9223966B1', 'US10176095B2', 'US10331879B1', 'US9319380B2', 'US9088560B1', 'US8756432B1', 'US9141790B2']","
A computer-implemented method for increasing security on computing systems that launch application containers may include (1) authenticating an application container that facilitates launching at least one application on a host computing system by verifying that the application container meets a certain trustworthiness threshold, (2) intercepting, via a policy-enforcement proxy, a command to perform a deployment action on the host computing system in connection with the authenticated application container, (3) determining that the deployment action potentially violates a security policy applied to the authenticated application container, and then in response to determining that the deployment action potentially violates the security policy, (4) modifying, via the policy-enforcement proxy, the command to prevent the potential violation of the security policy. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2017,"
a computer-implemented method for increasing security on computing systems that launch application containers may include (1) authenticating an application container that facilitates launching at least one application on a host computing system by verifying that the application container meets a certain trustworthiness threshold (2) intercepting via a policy-enforcement proxy a command to perform a deployment action on the host computing system in connection with the authenticated application container (3) determining that the deployment action potentially violates a security policy applied to the authenticated application container and then in response to determining that the deployment action potentially violates the security policy (4) modifying via the policy-enforcement proxy the command to prevent the potential violation of the security policy various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9246944B1,560,Systems and methods for enforcing data loss prevention policies on mobile devices ,2016-01-26,"['US9330273B2', 'US9401925B1', 'EP3411825B1', 'JP6182589B2', 'JP6314267B2', 'US9529990B2', 'US8904503B2', 'US9300693B1', 'US9571509B1', 'JP6335315B2', 'US9852289B1', 'US9800606B1', 'US8966287B2', 'US10140370B1', 'JP6336675B2', 'US8612594B1', 'US10331879B1', 'US9077541B2', 'US8688601B2', 'US20200137097A1', 'US9336384B2', 'US20150081644A1', 'US9998480B1', 'US8544060B1', 'US9141790B2']","
A computer-implemented method for enforcing data loss prevention policies on mobile devices may include (1) identifying a mobile device that connected to a network and that may include sensitive data and that is in a predetermined state that is designated for transferring data for data loss prevention analysis, (2) requesting, from a data loss prevention policy database via the network, a data loss prevention policy category for the sensitive data based on an analysis the sensitive data, (3) receiving the data loss prevention policy category, tagging, based on the data loss prevention policy category, the sensitive data on the mobile device with a data loss prevention policy tag and (4) enforcing on the mobile device, based on the data loss prevention policy tag, a data loss prevention rule for the data loss prevention category of the sensitive data. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for enforcing data loss prevention policies on mobile devices may include (1) identifying a mobile device that connected to a network and that may include sensitive data and that is in a predetermined state that is designated for transferring data for data loss prevention analysis (2) requesting from a data loss prevention policy database via the network a data loss prevention policy category for the sensitive data based on an analysis the sensitive data (3) receiving the data loss prevention policy category tagging based on the data loss prevention policy category the sensitive data on the mobile device with a data loss prevention policy tag and (4) enforcing on the mobile device based on the data loss prevention policy tag a data loss prevention rule for the data loss prevention category of the sensitive data various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,3.0,9.0
US9407664B1,562,Systems and methods for enforcing enterprise data access control policies in cloud computing environments ,2016-08-02,"['US9171154B2', 'JP6689992B2', 'US9100440B1', 'EP3430559B1', 'US9401925B1', 'US9935971B2', 'US9781143B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'US9300693B1', 'US9571509B1', 'US9246948B2', 'US9729579B1', 'US9852289B1', 'JP6166839B2', 'US9342705B1', 'CA2895265C', 'US10623418B2', 'US9223966B1', 'US8756432B1', 'US10073864B1', 'JP6122555B2', 'JP6101408B2']","
A computer-implemented method for enforcing enterprise data access control policies in cloud computing environments may include (1) intercepting, at a proxy, an attempt to configure a computing instance on a cloud computing platform with a permission that would provide the computing instance with access to secured data on the cloud computing platform, (2) identifying a user within an enterprise that initiated the attempt to configure the computing instance with the permission, (3) determining, based on a data access control policy for the enterprise, that the user is not entitled to access the secured data, and (4) blocking the attempt to configure the computing instance with the permission based on determining that the user is not entitled to access the secured data. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
a computer-implemented method for enforcing enterprise data access control policies in cloud computing environments may include (1) intercepting at a proxy an attempt to configure a computing instance on a cloud computing platform with a permission that would provide the computing instance with access to secured data on the cloud computing platform (2) identifying a user within an enterprise that initiated the attempt to configure the computing instance with the permission (3) determining based on a data access control policy for the enterprise that the user is not entitled to access the secured data and (4) blocking the attempt to configure the computing instance with the permission based on determining that the user is not entitled to access the secured data various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
CN108701188A,618,In response to detecting the potential system and method for extorting software for modification file backup ,2018-10-23,"['US9043922B1', 'US8739284B1', 'US9246944B1', 'US9330273B2', 'US9401925B1', 'US9781143B1', 'JP6314267B2', 'US9948663B1', 'US9529990B2', 'US9679160B1', 'US9300693B1', 'US9571509B1', 'CN105874464B', 'US9729579B1', 'US9852289B1', 'US9160766B2', 'US9166997B1', 'US9946877B2', 'CN106133741B', 'US9223966B1', 'CN106257481B', 'US9736178B1', 'US9998480B1', 'US10073864B1', 'US9141790B2']","
The invention discloses a kind of in response to detecting the potential computer implemented method for extorting software for modification file backup, the method may include that (1) detects the exception for potentially indicating to extort software on computing device during file backup process, (2) in response to detecting that the exception of software is extorted in potentially instruction, backup copies are stored in the position detached with other backup copies, (3) confirm and extort software on the abnormal instruction computing device, (4) backup policy is adjusted in response to the confirmation for extorting software on the abnormal instruction computing device, and (5) manage the backup copies based on the adjusted backup policy.The invention also discloses various other methods, system and computer-readable mediums.
",H04,2018,"
the invention discloses a kind of in response to detecting the potential computer implemented method for extorting software for modification file backup the method may include that (1) detects the exception for potentially indicating to extort software on computing device during file backup process (2) in response to detecting that the exception of software is extorted in potentially instruction backup copies are stored in the position detached with other backup copies (3) confirm and extort software on the abnormal instruction computing device (4) backup policy is adjusted in response to the confirmation for extorting software on the abnormal instruction computing device and (5) manage the backup copies based on the adjusted backup policythe invention also discloses various other methods system and computer-readable mediums
",4,H04_4,2,10.0,49.0,9.0
US9401925B1,619,Systems and methods for detecting security threats based on user profiles ,2016-07-26,"['US9171154B2', 'US8495747B1', 'US9330273B2', 'US8806641B1', 'EP3411825B1', 'US9888032B2', 'JP6314267B2', 'EP3374922B1', 'US10623435B2', 'US9948663B1', 'US9529990B2', 'EP3087531B1', 'JP2018501591A', 'US10270769B2', 'US9852289B1', 'US9116768B1', 'US10257220B2', 'US9223966B1', 'US9148441B1', 'US9736178B1', 'US9998480B1', 'EP2316092B1', 'US9846776B1', 'US10230750B2', 'US9256739B1']","
A computer-implemented method for detecting security threats based on user profiles may include 1) identifying behavior on a computing system that is potentially indicative of a security threat, 2) identifying a user profile for a user of the computing system that estimates a level of the user's technical sophistication, 3) comparing the identified behavior with the estimated level of the user's technical sophistication, and 4) determining whether the identified behavior indicates a security threat based at least in part on the comparison of the identified behavior with the estimated level of the user's technical sophistication. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2016,"
a computer-implemented method for detecting security threats based on user profiles may include 1) identifying behavior on a computing system that is potentially indicative of a security threat 2) identifying a user profile for a user of the computing system that estimates a level of the user's technical sophistication 3) comparing the identified behavior with the estimated level of the user's technical sophistication and 4) determining whether the identified behavior indicates a security threat based at least in part on the comparison of the identified behavior with the estimated level of the user's technical sophistication various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9100440B1,1198,Systems and methods for applying data loss prevention policies to closed-storage portable devices ,2015-08-04,"['US9245123B1', 'US8806625B1', 'JP6689992B2', 'US8943546B1', 'US8726392B1', 'CA2989160C', 'CA2527526C', 'US9838405B1', 'US9529990B2', 'US9300693B1', 'US9852289B1', 'US9800606B1', 'JP6166839B2', 'AU2013371346B2', 'US9166997B1', 'US9223966B1', 'US9148441B1', 'US9418222B1', 'CA2964301C', 'JP6205062B2', 'US9998480B1', 'US9141790B2', 'JP6122555B2', 'US9256739B1', 'US20190199732A1']","
A computer-implemented method for applying data loss prevention policies to closed-storage portable devices may include (1) injecting a data loss prevention component into at least one application process that is running on a computing device, (2) intercepting, via the data loss prevention component, an attempt by the application process to transfer a file to a closed-storage portable device that is connected to the computing device, (3) identifying a data loss prevention policy that applies to the attempt by the application process to transfer the file, (4) determining that the attempt by the application process to transfer the file violates the data loss prevention policy, and (5) performing a security action in response to determining that the attempt by the application process to transfer the file violates the data loss prevention policy. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2015,"
a computer-implemented method for applying data loss prevention policies to closed-storage portable devices may include (1) injecting a data loss prevention component into at least one application process that is running on a computing device (2) intercepting via the data loss prevention component an attempt by the application process to transfer a file to a closed-storage portable device that is connected to the computing device (3) identifying a data loss prevention policy that applies to the attempt by the application process to transfer the file (4) determining that the attempt by the application process to transfer the file violates the data loss prevention policy and (5) performing a security action in response to determining that the attempt by the application process to transfer the file violates the data loss prevention policy various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US9485272B1,2760,Systems and methods for estimating confidence scores of unverified signatures ,2016-11-01,"['JP6689992B2', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'JP6560368B2', 'US8561193B1', 'JP6335315B2', 'US9729579B1', 'US9852289B1', 'US9800606B1', 'US9298724B1', 'US9166997B1', 'US9116768B1', 'US10331879B1', 'US9223966B1', 'US9336384B2', 'US8225406B1', 'US9736178B1', 'JP6205062B2', 'US8756432B1', 'US9998480B1', 'US9846772B1', 'JP6122555B2', 'US9256739B1', 'JP6101408B2']","
The disclosed computer-implemented method for estimating confidence scores of unverified signatures may include (1) detecting a potentially malicious event that triggers a malware signature whose confidence score is above a certain threshold, (2) detecting another event that triggers another signature whose confidence score is unknown, (3) determining that the potentially malicious event and the other event occurred within a certain time period of one another, and then (4) assigning, to the other signature, a confidence score based at least in part on the potentially malicious event and the other event occurring within the certain time period of one another. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for estimating confidence scores of unverified signatures may include (1) detecting a potentially malicious event that triggers a malware signature whose confidence score is above a certain threshold (2) detecting another event that triggers another signature whose confidence score is unknown (3) determining that the potentially malicious event and the other event occurred within a certain time period of one another and then (4) assigning to the other signature a confidence score based at least in part on the potentially malicious event and the other event occurring within the certain time period of one another various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,8.0,9.0
US10546123B1,3167,Systems and methods for identifying malicious computer files ,2020-01-28,"['US8739284B1', 'JP6689992B2', 'US8627469B1', 'US9246944B1', 'US9401925B1', 'EP3374922B1', 'US9948663B1', 'US9529990B2', 'US9171156B1', 'EP3087531B1', 'US9300693B1', 'JP6335315B2', 'US9160766B2', 'US9800606B1', 'US9116768B1', 'US8943587B2', 'US9223966B1', 'US9148441B1', 'US9336384B2', 'US9736178B1', 'US8756432B1', 'US9998480B1', 'US9514309B1', 'US10073864B1', 'US8806641B1']","
A computer-implemented method for identifying malicious computer files may include (i) receiving, by a computing device, a set of files from a set of client devices, (ii) performing, by the computing device, a machine learning classification of file attributes on the set of files, (iii) determining, based on the machine learning classification, a node pattern of a suspicious file in the set of files, (iv) calculating, by hashing the node pattern, a file prevalence score of the suspicious file, and (v) performing, by the computing device, a security action based on the file prevalence score of the suspicious file. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2020,"
a computer-implemented method for identifying malicious computer files may include (i) receiving by a computing device a set of files from a set of client devices (ii) performing by the computing device a machine learning classification of file attributes on the set of files (iii) determining based on the machine learning classification a node pattern of a suspicious file in the set of files (iv) calculating by hashing the node pattern a file prevalence score of the suspicious file and (v) performing by the computing device a security action based on the file prevalence score of the suspicious file various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10326772B2,4232,Systems and methods for anonymizing log entries ,2019-06-18,"['US9148441B1', 'US9998480B1', 'US9838405B1', 'US9846772B1', 'US10073864B1', 'US8281399B1', 'US9300693B1', 'US9888032B2', 'US10140370B1', 'US9160766B2', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'JP2017142821A', 'JP6689992B2', 'US9230099B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'US9800606B1', 'US9529990B2', 'EP3207487B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for anonymizing log entries may include (1) detecting a data pattern in a group of log entries documenting events performed by at least one process executing on at least one device, (2) identifying, in the data pattern, at least one data field in the log entries that contains variable data, (3) evaluating the data field containing variable data to determine whether the data field contains sensitive data, and (4) in response to determining whether the data field contains sensitive data, applying a data-anonymization policy to the data field to anonymize the log entries. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2019,"
the disclosed computer-implemented method for anonymizing log entries may include (1) detecting a data pattern in a group of log entries documenting events performed by at least one process executing on at least one device (2) identifying in the data pattern at least one data field in the log entries that contains variable data (3) evaluating the data field containing variable data to determine whether the data field contains sensitive data and (4) in response to determining whether the data field contains sensitive data applying a data-anonymization policy to the data field to anonymize the log entries various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US9659176B1,4812,Systems and methods for generating repair scripts that facilitate remediation of malware side-effects ,2017-05-23,"['US9100426B1', 'US9148441B1', 'US9998480B1', 'US10073864B1', 'US9948663B1', 'US9300693B1', 'US9438560B2', 'US9729579B1', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'JP6335315B2', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9582669B1', 'US9800606B1', 'US9529990B2', 'US8756432B1', 'US8561193B1', 'JP6122555B2', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for generating repair scripts that facilitate remediation of malware side-effects may include (1) identifying a potentially malicious file located on a computing system, (2) determining at least one potential side-effect of the potentially malicious file, (3) generating, based at least in part on the potential side-effect of the potentially malicious file, a repair script that facilitates remediation of the potential side-effect, and then (4) remedying the potential side-effect by directing the computing system to execute the repair script. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2017,"
the disclosed computer-implemented method for generating repair scripts that facilitate remediation of malware side-effects may include (1) identifying a potentially malicious file located on a computing system (2) determining at least one potential side-effect of the potentially malicious file (3) generating based at least in part on the potential side-effect of the potentially malicious file a repair script that facilitates remediation of the potential side-effect and then (4) remedying the potential side-effect by directing the computing system to execute the repair script various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9398042B1,5994,Systems and methods for capturing input from users to prevent data loss ,2016-07-19,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9800560B1', 'US9998480B1', 'US9838405B1', 'US9330273B2', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'US8806625B1', 'US9245123B1', 'US9166997B1', 'EP3039609B1', 'JP6689992B2', 'JP6335315B2', 'US9223966B1', 'US9336384B2', 'US9852289B1', 'EP3374922B1', 'EP3241331B1', 'US9800606B1', 'JP6101408B2', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for capturing input from users to prevent data loss may include (1) intercepting, as part of a data-loss-prevention application, user input intended for a data-processing application that would, if received by the data-processing application, cause the data-processing application to perform an operation on data that may violate a data-loss-prevention policy, (2) upon intercepting the user input, causing the data-processing application to perform an alternative operation on the data that makes the data accessible to the data-loss-prevention application, (3) scanning, while the data-processing application is prevented from performing the operation, the data for compliance with the data-loss-prevention policy, (4) determining, based on a result of the scanning, that the data complies with the data-loss-prevention policy, and (5) causing, in response to determining that the data complies with the data-loss-prevention policy, the data-processing application to perform the operation. Various other methods, systems, and computer-readable media are also disclosed.
",H04,2016,"
the disclosed computer-implemented method for capturing input from users to prevent data loss may include (1) intercepting as part of a data-loss-prevention application user input intended for a data-processing application that would if received by the data-processing application cause the data-processing application to perform an operation on data that may violate a data-loss-prevention policy (2) upon intercepting the user input causing the data-processing application to perform an alternative operation on the data that makes the data accessible to the data-loss-prevention application (3) scanning while the data-processing application is prevented from performing the operation the data for compliance with the data-loss-prevention policy (4) determining based on a result of the scanning that the data complies with the data-loss-prevention policy and (5) causing in response to determining that the data complies with the data-loss-prevention policy the data-processing application to perform the operation various other methods systems and computer-readable media are also disclosed
",4,H04_4,2,10.0,0.0,9.0
US10803188B1,7214,Systems and methods for preventing sensitive data sharing ,2020-10-13,"['US9246944B1', 'US9116768B1', 'US9998480B1', 'US9838405B1', 'JP6560368B2', 'CA2964301C', 'US9846772B1', 'US10073864B1', 'US9300693B1', 'US9729579B1', 'US9166997B1', 'JP2017507414A', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US9294284B1', 'US9852289B1', 'EP2316092B1', 'US8281410B1', 'US9529990B2', 'JP6101408B2', 'US10331879B1', 'US9043922B1', 'JP6205062B2', 'US9736178B1']","
The disclosed computer-implemented method for preventing sensitive data sharing may include a computing device determining that a content item is to be shared with an application. The content idem may be intercepted before the content item is shared with the application. The data of the content item may be analyzed. In response to analyzing the data of the content item, a security action may be performed to protect the computing device from computer malware or prevent sharing of sensitive data of the computing device. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2020,"
the disclosed computer-implemented method for preventing sensitive data sharing may include a computing device determining that a content item is to be shared with an application the content idem may be intercepted before the content item is shared with the application the data of the content item may be analyzed in response to analyzing the data of the content item a security action may be performed to protect the computing device from computer malware or prevent sharing of sensitive data of the computing device various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10262135B1,7574,Systems and methods for detecting and addressing suspicious file restore activities ,2019-04-16,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9418222B1', 'US9846772B1', 'US10073864B1', 'US9300693B1', 'US9407664B1', 'US9166997B1', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'US9800606B1', 'EP2316092B1', 'US9639693B2', 'US9781143B1', 'US9529990B2', 'AU2015374078B2', 'EP3207487B1', 'EP3087531B1', 'US9736178B1']","
The disclosed computer-implemented method for detecting and addressing suspicious file restore activities may include (i) detecting a restore activity during which files are restored to a client device from a previously stored backup of the files, (ii) determining that a total number of the files restored during the restore activity exceeds a threshold number, and (iii) performing, based on the total number of the files exceeding the threshold number, a security action to protect the client device from a malicious threat associated with the restore activity. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for detecting and addressing suspicious file restore activities may include (i) detecting a restore activity during which files are restored to a client device from a previously stored backup of the files (ii) determining that a total number of the files restored during the restore activity exceeds a threshold number and (iii) performing based on the total number of the files exceeding the threshold number a security action to protect the client device from a malicious threat associated with the restore activity various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,8.0,9.0
US10437994B1,7756,Systems and methods for determining the reputations of unknown files ,2019-10-08,"['US8627469B1', 'US9116768B1', 'JP5978383B2', 'US9998480B1', 'US9838405B1', 'CA2964301C', 'US10073864B1', 'US9300693B1', 'CA2989160C', 'US9160766B2', 'US9729579B1', 'US9171154B2', 'US9571509B1', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9852289B1', 'EP3374922B1', 'US9800606B1', 'US9529990B2', 'EP3567504B1', 'US8756432B1', 'JP6166839B2', 'US10331879B1', 'US9736178B1']","
The disclosed computer-implemented method for determining the reputations of unknown files may include (1) identifying a file that was downloaded by the computing device from an external file host, (2) creating a node that represents the file in a dynamic file relationship graph, (3) connecting the node in the dynamic file relationship graph with at least one other node that represents an attribute of the external file host, and (4) labeling the node with a reputation score calculated based at least in part on a reputation score of the at least one other node that represents the attribute of the external file host. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2019,"
the disclosed computer-implemented method for determining the reputations of unknown files may include (1) identifying a file that was downloaded by the computing device from an external file host (2) creating a node that represents the file in a dynamic file relationship graph (3) connecting the node in the dynamic file relationship graph with at least one other node that represents an attribute of the external file host and (4) labeling the node with a reputation score calculated based at least in part on a reputation score of the at least one other node that represents the attribute of the external file host various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10162962B1,8155,Systems and methods for detecting credential theft ,2018-12-25,"['US9246944B1', 'US9116768B1', 'US9148441B1', 'US9998480B1', 'US9838405B1', 'US9846772B1', 'US9160766B2', 'US9407664B1', 'US8806625B1', 'US9166997B1', 'US9680849B2', 'US9794270B2', 'US9154466B2', 'US8739284B1', 'US9852289B1', 'US9256739B1', 'EP3241331B1', 'US9800606B1', 'US9076004B1', 'US9529990B2', 'US8904503B2', 'US10032033B2', 'US9258122B1', 'US9736178B1']","
The disclosed computer-implemented method for detecting credential theft may include (i) monitoring a secured computing system's credential store that may include at least one sensitive credential that may be used to facilitate authentication of a user that is attempting to access the secured computing system, (ii) gathering, while monitoring the credential store, primary evidence of an attempted theft of the sensitive credential from the credential store, (iii) gathering corroborating evidence of the attempted theft of the sensitive credential, and (iv) performing a security action in response to gathering the primary evidence and the corroborating evidence of the attempted theft. The primary evidence of the attempted theft of the sensitive credential may include evidence of any suspicious access of the sensitive credential from the credential store that occurs outside of a procedure of authenticating the user. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2018,"
the disclosed computer-implemented method for detecting credential theft may include (i) monitoring a secured computing system's credential store that may include at least one sensitive credential that may be used to facilitate authentication of a user that is attempting to access the secured computing system (ii) gathering while monitoring the credential store primary evidence of an attempted theft of the sensitive credential from the credential store (iii) gathering corroborating evidence of the attempted theft of the sensitive credential and (iv) performing a security action in response to gathering the primary evidence and the corroborating evidence of the attempted theft the primary evidence of the attempted theft of the sensitive credential may include evidence of any suspicious access of the sensitive credential from the credential store that occurs outside of a procedure of authenticating the user various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US9122869B1,8336,Systems and methods for detecting client types ,2015-09-01,"['US9148441B1', 'US9846772B1', 'US10073864B1', 'EP3362938B1', 'US9729579B1', 'US8806625B1', 'US9166997B1', 'US9171154B2', 'CA2895265C', 'JP6689992B2', 'US9223966B1', 'US8739284B1', 'US9336384B2', 'US9852289B1', 'US9256739B1', 'EP3374922B1', 'JP6471233B2', 'US9800606B1', 'EP2896169B1', 'US9781143B1', 'US9529990B2', 'US8756432B1', 'JP6101408B2', 'EP3087531B1', 'US9736178B1']","
A computer-implemented method for detecting client types may include identifying a communication from a client system transmitted according to a network protocol, analyzing the communication to determine at least one protocol implementation characteristic that describes how the client system implemented the network protocol in the communication, submitting the protocol implementation characteristic to a protocol implementation database that correlates client types with protocol implementation characteristics and receiving, in response to submitting the protocol implementation characteristic, a client type of the client system. Various other methods, systems, and computer-readable media are also disclosed.
",G06,2015,"
a computer-implemented method for detecting client types may include identifying a communication from a client system transmitted according to a network protocol analyzing the communication to determine at least one protocol implementation characteristic that describes how the client system implemented the network protocol in the communication submitting the protocol implementation characteristic to a protocol implementation database that correlates client types with protocol implementation characteristics and receiving in response to submitting the protocol implementation characteristic a client type of the client system various other methods systems and computer-readable media are also disclosed
",4,G06_4,2,10.0,0.0,9.0
US10270744B2,9,Behavior analysis based DNS tunneling detection and classification framework for network security ,2019-04-23,"['US20190385167A1', 'US9560072B1', 'JP6006788B2', 'US10218740B1', 'US9369479B2', 'US10728263B1', 'US10200384B1', 'US10721243B2', 'US9531738B2', 'US9838407B1', 'US10469514B2', 'US20200287925A1']","
New and improved techniques for a behavior analysis based DNS tunneling detection and classification framework for network security are disclosed. In some embodiments, a platform implementing an analytics framework for DNS security is provided for facilitating DNS tunneling detection. For example, an online platform can implement an analytics framework for DNS security based on passive DNS traffic analysis.
",H04,2019,"
new and improved techniques for a behavior analysis based dns tunneling detection and classification framework for network security are disclosed in some embodiments a platform implementing an analytics framework for dns security is provided for facilitating dns tunneling detection for example an online platform can implement an analytics framework for dns security based on passive dns traffic analysis
",5,H04_5,2,2.0,4.0,4.0
US9779236B2,52,Risk assessment modeling ,2017-10-03,"['CN105378790B', 'US9680868B2', 'US20180160309A1', 'US9160766B2', 'US20190364019A1', 'US10862901B2', 'US9703962B2', 'US10735432B2', 'US10042999B2', 'EP3195560B1', 'US10440016B2', 'US9529990B2', 'EP3065367B1', 'US10587631B2', 'US20200327212A1', 'US10701094B2', 'US10742676B2', 'US10063584B1']","
One or more techniques and/or systems are provided for risk assessment. Historical authentication data and/or compromised user account data may be evaluated to identify a set of authentication context properties associated with user authentication sessions and/or a set of malicious account context properties associated with compromised user accounts (e.g., properties indicative of whether a user recently visited a malicious site, created a fake social network profile, logged in from unknown locations, etc.). The set of authentication context properties and/or the set of malicious account context properties may be annotated to create an annotated context property training set that may be used to train a risk assessment machine learning model to generate a risk assessment model. The risk assessment model may be used to evaluate user context properties of a user account event to generate a risk analysis metric indicative of a likelihood the user account event is malicious or safe.
",G06,2017,"
one or more techniques and/or systems are provided for risk assessment historical authentication data and/or compromised user account data may be evaluated to identify a set of authentication context properties associated with user authentication sessions and/or a set of malicious account context properties associated with compromised user accounts (eg properties indicative of whether a user recently visited a malicious site created a fake social network profile logged in from unknown locations etc) the set of authentication context properties and/or the set of malicious account context properties may be annotated to create an annotated context property training set that may be used to train a risk assessment machine learning model to generate a risk assessment model the risk assessment model may be used to evaluate user context properties of a user account event to generate a risk analysis metric indicative of a likelihood the user account event is malicious or safe
",5,G06_5,2,5.0,21.0,4.0
US20190364019A1,85,Evaluating and modifying countermeasures based on aggregate transaction status ,2019-11-28,"['US10454955B2', 'US10412111B2', 'US10042999B2', 'US20180191754A1', 'US9832213B2', 'US10567419B2', 'US9703953B2', 'US7934253B2', 'US10628582B2', 'US10530796B2', 'US10848517B1', 'US10708287B2', 'US10701094B2', 'CN106716958B', 'US9536071B2', 'US10333924B2', 'US9942250B2', 'US20190260784A1', 'US20190140835A1', 'EP2892197B1', 'US9015846B2']","
Techniques are provided for evaluating and modifying countermeasures based on aggregate transaction status. A first expression pattern is determined that occurs in each of first response messages served by the web server system in response to successful transactions of the transaction type. A second expression pattern is determined that occurs in each of second response messages served by the web server system in response to non-successful transactions of the transaction type requested. Aa status is determined for each of a plurality of transactions of the transaction type based on matching the first expression pattern or the second expression pattern to response messages served by the web server system. Aggregate status information for the transaction type based on the status for the set of operations is updated. Based on a change in the aggregate status information, a set of one or more security countermeasures is updated.
",H04,2019,"
techniques are provided for evaluating and modifying countermeasures based on aggregate transaction status a first expression pattern is determined that occurs in each of first response messages served by the web server system in response to successful transactions of the transaction type a second expression pattern is determined that occurs in each of second response messages served by the web server system in response to non-successful transactions of the transaction type requested aa status is determined for each of a plurality of transactions of the transaction type based on matching the first expression pattern or the second expression pattern to response messages served by the web server system aggregate status information for the transaction type based on the status for the set of operations is updated based on a change in the aggregate status information a set of one or more security countermeasures is updated
",5,H04_5,2,0.0,21.0,4.0
US9043905B1,153,System and method for insider threat detection ,2015-05-26,"['EP3107026B1', 'EP2882159B1', 'US10419466B2', 'AU2017254815B2', 'US10728263B1', 'US10268821B2', 'US9336388B2', 'US20190260780A1', 'US10789367B2']","
Described is a system for detecting insider threats in a network. In detecting the insider threat, the system receives data from the network relevant to network activity and extracts observable actions from the data relevant to a mission. The observable actions are combined to provide contextual cues and reasoning results. Based on the observable actions and reasoning results, proposed security policy updates are proposed to force insiders into using more observable actions. Finally, the system detects potential insider threats through analyzing the observable actions and reasoning results.
",H04,2015,"
described is a system for detecting insider threats in a network in detecting the insider threat the system receives data from the network relevant to network activity and extracts observable actions from the data relevant to a mission the observable actions are combined to provide contextual cues and reasoning results based on the observable actions and reasoning results proposed security policy updates are proposed to force insiders into using more observable actions finally the system detects potential insider threats through analyzing the observable actions and reasoning results
",5,H04_5,2,11.0,21.0,4.0
US20180041537A1,154,Identifying and remediating phishing security weaknesses ,2018-02-08,"['US10447708B2', 'US20190068649A1', 'US9940454B2', 'US10778725B2', 'US10516682B2', 'US10516531B2', 'US10298609B2', 'US20180278649A1', 'US9642008B2', 'US10623435B2', 'US9501666B2', 'GB2564589B', 'US10382459B2', 'US10673873B2', 'US10558800B2', 'US10270769B2', 'US9740859B2', 'US10122747B2', 'US9753796B2', 'US9516062B2', 'US10817602B2', 'US10515211B2']","
A threat management facility generates a simulated phishing threat based on one or more characteristics of a network user. Based on whether the user fails to respond appropriately to the simulated phishing threat, the threat management facility may implement one or more prophylactic measures to remediate the security weakness exposed by the user's failure to respond appropriately to the simulated phishing threat. For example, a security policy for an endpoint associated with the user may be adjusted to address the security weakness. Additionally, or alternatively, the user may be enrolled in training directed at reducing the likelihood that the user will be the victim of an actual phishing attack in the future.
",H04,2018,"
a threat management facility generates a simulated phishing threat based on one or more characteristics of a network user based on whether the user fails to respond appropriately to the simulated phishing threat the threat management facility may implement one or more prophylactic measures to remediate the security weakness exposed by the user's failure to respond appropriately to the simulated phishing threat for example a security policy for an endpoint associated with the user may be adjusted to address the security weakness additionally or alternatively the user may be enrolled in training directed at reducing the likelihood that the user will be the victim of an actual phishing attack in the future
",5,H04_5,2,9.0,29.0,4.0
US8793790B2,171,System and method for insider threat detection ,2014-07-29,"['US10587640B2', 'EP3107026B1', 'US9807109B2', 'EP3343868B1', 'EP3528458B1']","
A system and method include obtaining data related to accessing cyber assets and accessing physical assets from a combined cyber access and physical access control system that protects cyber and physical assets of an organization from both authorized and unauthorized access with malicious intent. The system and method compare the data to known patterns of expected behavior, and identify patterns of suspicious behavior as a function of comparing the data to the patterns of expected behavior. The comparison is utilized to identify potentially malicious insider behavior toward the cyber and physical assets.
",G06,2014,"
a system and method include obtaining data related to accessing cyber assets and accessing physical assets from a combined cyber access and physical access control system that protects cyber and physical assets of an organization from both authorized and unauthorized access with malicious intent the system and method compare the data to known patterns of expected behavior and identify patterns of suspicious behavior as a function of comparing the data to the patterns of expected behavior the comparison is utilized to identify potentially malicious insider behavior toward the cyber and physical assets
",5,G06_5,2,11.0,19.0,4.0
US9807109B2,172,Profiling cyber threats detected in a target environment and automatically generating one or more rule bases for an expert system usable to profile cyber threats detected in a target environment ,2017-10-31,"['US7784099B2', 'US8997236B2', 'US9043905B1', 'EP3528458B1']","
A computer implemented method of profiling cyber threats detected in a target environment, comprising: receiving, from a Security Information and Event Manager (SIEM) monitoring the target environment, alerts triggered by a detected potential cyber threat, and, for each alert: retrieving captured packet data related to the alert; extracting data pertaining to a set of attributes from captured packet data triggering the alert; applying fuzzy logic to data pertaining to one or more of the attributes to determine values for one or more output variables indicative of a level of an aspect of risk attributable to the cyber threat.
",H04,2017,"
a computer implemented method of profiling cyber threats detected in a target environment comprising: receiving from a security information and event manager (siem) monitoring the target environment alerts triggered by a detected potential cyber threat and for each alert: retrieving captured packet data related to the alert; extracting data pertaining to a set of attributes from captured packet data triggering the alert; applying fuzzy logic to data pertaining to one or more of the attributes to determine values for one or more output variables indicative of a level of an aspect of risk attributable to the cyber threat
",5,H04_5,2,11.0,19.0,4.0
US9888024B2,178,Detection of security incidents with low confidence security events ,2018-02-06,"['US10587640B2', 'US9832217B2', 'US9912638B2', 'US10121000B1', 'US10902117B1', 'CA2926579C', 'US9832214B2', 'US20190260779A1', 'EP3009949B1', 'US10554687B1', 'US9178906B1', 'US20190215335A1', 'US9800606B1', 'US9401924B2', 'US8701190B1', 'US10264104B2', 'US10148685B2', 'US10326778B2', 'US10735458B1', 'US10467411B1', 'US9311476B2', 'EP2892197B1', 'US20160308910A1', 'US9021595B2', 'US10176321B2']","
Techniques are disclosed for detecting security incidents based on low confidence security events. A security management server aggregates a collection of security events received from logs from one or more devices. The security management server evaluates the collection of security events based on a confidence score assigned to each distinct type of security event. Each confidence score indicates a likelihood that a security incident has occurred. The security management server determines, based on the confidence scores, at least one threshold for determining when to report an occurrence of a security incident from the collection of security events. Upon determining that at least one security event of the collection has crossed the at least one threshold, the security management server reports the occurrence of the security incident to an analyst.
",H04,2018,"
techniques are disclosed for detecting security incidents based on low confidence security events a security management server aggregates a collection of security events received from logs from one or more devices the security management server evaluates the collection of security events based on a confidence score assigned to each distinct type of security event each confidence score indicates a likelihood that a security incident has occurred the security management server determines based on the confidence scores at least one threshold for determining when to report an occurrence of a security incident from the collection of security events upon determining that at least one security event of the collection has crossed the at least one threshold the security management server reports the occurrence of the security incident to an analyst
",5,H04_5,2,2.0,36.0,4.0
US20190245894A1,298,Processing network traffic based on assessed security weaknesses ,2019-08-08,"['US10367815B2', 'US9294500B2', 'US9438631B2', 'US9344431B2', 'US10482260B1', 'US9940454B2', 'US9210182B2', 'US10516682B2', 'US10652273B2', 'CN103180862B', 'US9860263B2', 'US10333990B2', 'US9740852B2', 'US10341321B2', 'US8850588B2', 'US10673873B2', 'US10218697B2', 'US10803005B2', 'US9467465B2', 'US10817602B2', 'US10515211B2', 'US9846776B1']","
A threat management facility generates a simulated phishing threat based on one or more characteristics of users of an enterprise network and transmits the simulated phishing threat to the users of the enterprise network. Based on whether a user fails to respond appropriately to the simulated phishing threat, the threat management facility may adjust a profile of the user. Network traffic to and from an endpoint associated with the user may be processed according to the adjusted profile.
",H04,2019,"
a threat management facility generates a simulated phishing threat based on one or more characteristics of users of an enterprise network and transmits the simulated phishing threat to the users of the enterprise network based on whether a user fails to respond appropriately to the simulated phishing threat the threat management facility may adjust a profile of the user network traffic to and from an endpoint associated with the user may be processed according to the adjusted profile
",5,H04_5,2,9.0,29.0,4.0
US9369479B2,325,Detection of malware beaconing activities ,2016-06-14,"['US10587640B2', 'US10193929B2', 'US10193920B2', 'US10728263B1', 'US9832213B2', 'US9503468B1', 'US10505900B2', 'US10270744B2', 'US9762543B2', 'US10348771B2', 'US10530796B2', 'US10237283B2', 'US10469514B2', 'US10848517B1', 'US9306964B2', 'US10326778B2', 'AU2014244137B2', 'US9942250B2', 'US9838407B1', 'US20190087495A1', 'US20200287925A1']","
Malware beaconing activity detection is disclosed, including: monitoring a plurality of conversations between an internal device and one or more external destinations; extracting feature sets based at least in part on the plurality of conversations; and determining that a conversation of the plurality of conversations is anomalous based at least in part on the extracted feature sets.
",H04,2016,"
malware beaconing activity detection is disclosed including: monitoring a plurality of conversations between an internal device and one or more external destinations; extracting feature sets based at least in part on the plurality of conversations; and determining that a conversation of the plurality of conversations is anomalous based at least in part on the extracted feature sets
",5,H04_5,2,2.0,4.0,4.0
US10419458B2,334,Distributed techniques for detecting atypical or malicious wireless communications activity ,2019-09-17,"['US9369476B2', 'US10419465B2', 'US10540264B2', 'US9330257B2', 'US9769749B2', 'US20190260770A1', 'US10609059B2']","
Distributed techniques for detecting atypical or malicious wireless communications activity are disclosed. A server can iteratively generate sets of filters based at least in part upon observation data received from one or more Protects. The filters can be used by the Protect(s) to distinguish between sniffed wireless messages that are to be discarded and those that are to be reported to the server. The server can provide the generated sets of filters to the Protect(s) to cause the Protect(s) to process additional sniffed wireless messages utilizing the one or more sets of filters. Updated filters can cause fewer subsequent sniffed wireless messages to be reported than would have been reported by use of previous filters. Limited activity reporting by the Protect(s) enables a reduced communication load compared to full activity reporting without degrading the ability of the server to detect the atypical or malicious wireless communications activity.
",H04,2019,"
distributed techniques for detecting atypical or malicious wireless communications activity are disclosed a server can iteratively generate sets of filters based at least in part upon observation data received from one or more protects the filters can be used by the protect(s) to distinguish between sniffed wireless messages that are to be discarded and those that are to be reported to the server the server can provide the generated sets of filters to the protect(s) to cause the protect(s) to process additional sniffed wireless messages utilizing the one or more sets of filters updated filters can cause fewer subsequent sniffed wireless messages to be reported than would have been reported by use of previous filters limited activity reporting by the protect(s) enables a reduced communication load compared to full activity reporting without degrading the ability of the server to detect the atypical or malicious wireless communications activity
",5,H04_5,2,5.0,87.0,4.0
US20170093910A1,395,Dynamic security mechanisms ,2017-03-30,"['US20190251260A1', 'US9769204B2', 'US9609019B2', 'US20200344257A1', 'US8949931B2', 'US9838426B2', 'US10574685B2', 'US10462188B2', 'EP3528458B1']","
Provided are systems, methods, and computer-program products for a network device configured to dynamically deploy deception mechanisms to detect threats to a network. In various implementations, the network device can be configured to collect network data from a network, and determine a selection of deceptions mechanisms. The deception mechanisms can represent resources available on the network, and are separate from normal operation of the network. The network device can further determine locations within the network to deploy the deception mechanisms. The network device can further identifying a potential threat to the network. The potential threat may be identified by a deception mechanism. The network device can further determine additional deception mechanisms, and use the additional deception mechanisms to facilitate an action on the network.
",H04,2017,"
provided are systems methods and computer-program products for a network device configured to dynamically deploy deception mechanisms to detect threats to a network in various implementations the network device can be configured to collect network data from a network and determine a selection of deceptions mechanisms the deception mechanisms can represent resources available on the network and are separate from normal operation of the network the network device can further determine locations within the network to deploy the deception mechanisms the network device can further identifying a potential threat to the network the potential threat may be identified by a deception mechanism the network device can further determine additional deception mechanisms and use the additional deception mechanisms to facilitate an action on the network
",5,H04_5,2,11.0,25.0,4.0
US20170289191A1,396,Infiltration Detection and Network Rerouting ,2017-10-05,"['US20190260794A1', 'US9769204B2', 'US9832227B2', 'US10326778B2', 'US20190245829A1', 'US9503470B2', 'US10574685B2', 'US10462188B2', 'US10621344B2']","
Provided are methods, network devices, and computer-program products for detecting infiltration of an endpoint, and rerouting network traffic to and from the endpoint when infiltration is detected. In various implementations, a network device on a network can be configured to monitor access to the network device. The network device can further be configured to determine that a condition has occurred. The condition can indicate a suspect access to the network device has occurred. The network device can further be configured to determine a new access protocol for the network device. The network device can further be configured to use the new access protocol to cause communication between the network device and the network to be redirected to a high-interaction network. Redirecting the communication can disable communication between the network device and the network and enables communication between the network device and the high-interaction network.
",H04,2017,"
provided are methods network devices and computer-program products for detecting infiltration of an endpoint and rerouting network traffic to and from the endpoint when infiltration is detected in various implementations a network device on a network can be configured to monitor access to the network device the network device can further be configured to determine that a condition has occurred the condition can indicate a suspect access to the network device has occurred the network device can further be configured to determine a new access protocol for the network device the network device can further be configured to use the new access protocol to cause communication between the network device and the network to be redirected to a high-interaction network redirecting the communication can disable communication between the network device and the network and enables communication between the network device and the high-interaction network
",5,H04_5,2,11.0,25.0,4.0
US10095866B2,410,System and method for threat risk scoring of security threats ,2018-10-09,"['US9769204B2', 'US9680849B2', 'US9973531B1', 'US10728263B1', 'US10015198B2', 'US9473528B2', 'US10230761B1', 'JP6147309B2', 'US9380072B2', 'US10348771B2', 'US9178906B1', 'US20190245829A1', 'US9594912B1', 'US10657251B1', 'US9542556B2', 'US9954872B2', 'US9306964B2', 'US9609019B2', 'US10079852B2', 'US10515210B2', 'US10530810B2', 'US10872151B1', 'US10467411B1', 'US20160366160A1', 'US10230750B2']","
A system configured to generate a risk score for a threat activity including a digital device. The digital device configured to extract one or more threat events on a network based on metadata for one or more targeted digital devices on the network. Further, the digital device is configured to detect one or more incidents based on a correlation between at least a first threat event of the one or more threat events and a second threat event of the one or more threat events. And, the digital device is configured to generate a risk score for each of said one or more incidents.
",G06,2018,"
a system configured to generate a risk score for a threat activity including a digital device the digital device configured to extract one or more threat events on a network based on metadata for one or more targeted digital devices on the network further the digital device is configured to detect one or more incidents based on a correlation between at least a first threat event of the one or more threat events and a second threat event of the one or more threat events and the digital device is configured to generate a risk score for each of said one or more incidents
",5,G06_5,2,2.0,17.0,4.0
US10326778B2,412,System and method for detecting lateral movement and data exfiltration ,2019-06-18,"['US9762596B2', 'US9769204B2', 'JP6086968B2', 'US10230689B2', 'US10404661B2', 'US9954872B2', 'US10812497B2', 'US9609019B2', 'EP2774039B1', 'EP3272096B1', 'US10467411B1', 'KR101737726B1', 'US9848016B2', 'US9473528B2', 'US10721243B2', 'US10003608B2', 'US10237283B2', 'US10230761B1']","
A system configured to detect a threat activity on a network. The system including a digital device configured to detect a first order indicator of compromise on a network, detect a second order indicator of compromise on the network, generate a risk score based on correlating said first order indicator of compromise on the network with the second order indicator of compromise on said network, and generate at least one incident alert based on comparing the risk score to a threshold.
",H04,2019,"
a system configured to detect a threat activity on a network the system including a digital device configured to detect a first order indicator of compromise on a network detect a second order indicator of compromise on the network generate a risk score based on correlating said first order indicator of compromise on the network with the second order indicator of compromise on said network and generate at least one incident alert based on comparing the risk score to a threshold
",5,H04_5,2,2.0,36.0,4.0
US10609059B2,418,Graph-based network anomaly detection across time and entities ,2020-03-31,"['US10606856B2', 'US10560471B2', 'US10412111B2', 'US10061807B2', 'US10121000B1', 'US10735456B2', 'US10270788B2', 'US10860460B2', 'US8601537B2', 'US9262519B1', 'US10372904B2', 'US9313232B2', 'US10200390B2', 'US10791141B2', 'CA2933423C', 'EP3262815B1', 'US20190372868A1', 'US9602530B2', 'US20190138718A1', 'US10367786B2', 'US10542015B2', 'US10762206B2', 'US8577829B2', 'US20200014593A1', 'EP3528458B1']","
The disclosed techniques relate to a graph-based network security analytic framework to combine multiple sources of information and security knowledge in order to detect risky behaviors and potential threats. In some examples, the input can be anomaly events or simply regular events. The entities associated with the activities can be grouped into smaller time units, e.g., per day. The riskiest days of activity can be found by computing a risk score for each day and according to the features in the day. A graph can be built with links between the time units. The links can also receive scoring based on a number of factors. The resulting graph can be compared with known security knowledge for adjustments. Threats can be detected based on the adjusted risk score for a component (i.e., a group of linked entities) as well as a number of other factors.
",H04,2020,"
the disclosed techniques relate to a graph-based network security analytic framework to combine multiple sources of information and security knowledge in order to detect risky behaviors and potential threats in some examples the input can be anomaly events or simply regular events the entities associated with the activities can be grouped into smaller time units eg per day the riskiest days of activity can be found by computing a risk score for each day and according to the features in the day a graph can be built with links between the time units the links can also receive scoring based on a number of factors the resulting graph can be compared with known security knowledge for adjustments threats can be detected based on the adjusted risk score for a component (ie a group of linked entities) as well as a number of other factors
",5,H04_5,2,8.0,2.0,4.0
US9942250B2,419,Network appliance for dynamic protection from risky network activities ,2018-04-10,"['US10848517B1', 'US9609019B2', 'CA2966408C', 'US20160308898A1', 'US9106680B2', 'US10205742B2', 'EP2859494B1']","
Electronic appliances, computer-implemented systems, non-transitory media, and methods are provided to identify risky network activities using intelligent algorithms. The appliances, systems, media, and methods enable rapid detection of risky activities.
",H04,2018,"
electronic appliances computer-implemented systems non-transitory media and methods are provided to identify risky network activities using intelligent algorithms the appliances systems media and methods enable rapid detection of risky activities
",5,H04_5,2,2.0,0.0,4.0
US10848517B1,457,Cybersecurity risk assessment on an industry basis ,2020-11-24,"['EP2529321B1', 'US10853443B2', 'JP6736657B2', 'US9503468B1', 'US10608983B2', 'JP6527590B2', 'US9762543B2', 'US9973519B2', 'US10628582B2', 'US10348771B2', 'US9853983B2', 'US10469514B2', 'US10205742B2', 'US8990933B1', 'US10805314B2', 'US9497216B2', 'US10375026B2', 'US10855798B2', 'US10193909B2']","
Determining an entity's cybersecurity risk and benchmarking that risk includes non-intrusively collecting one or more types of data associated with an entity. Embodiments further include calculating a security score for at least one of the one or more types of data based, at least in part, on processing of security information extracted from the at least one type of data, wherein the security information is indicative of a level of cybersecurity. Some embodiments also comprise assigning a weight to the calculated security score based on a correlation between the extracted security information and an overall security risk determined from analysis of one or more previously-breached entities in the same industry as the entity. Additional embodiments include calculating an overall cybersecurity risk score for the entity based, at least in part, on the calculated security score and the weight assigned to the calculated security score.
",H04,2020,"
determining an entity's cybersecurity risk and benchmarking that risk includes non-intrusively collecting one or more types of data associated with an entity embodiments further include calculating a security score for at least one of the one or more types of data based at least in part on processing of security information extracted from the at least one type of data wherein the security information is indicative of a level of cybersecurity some embodiments also comprise assigning a weight to the calculated security score based on a correlation between the extracted security information and an overall security risk determined from analysis of one or more previously-breached entities in the same industry as the entity additional embodiments include calculating an overall cybersecurity risk score for the entity based at least in part on the calculated security score and the weight assigned to the calculated security score
",5,H04_5,2,2.0,0.0,4.0
US10003608B2,462,Automated insider threat prevention ,2018-06-19,"['EP3127301B1', 'US20200296127A1', 'US9832227B2', 'US10193919B2', 'EP2756439B1', 'US9848016B2', 'US9979753B2', 'EP2678991B1', 'US10805265B2', 'US20200374299A1', 'US10673873B2', 'US9609015B2', 'US10003616B2', 'US20180285797A1', 'US10360062B2', 'US9152789B2', 'JP6106780B2', 'US10757134B1', 'US20180352004A1', 'US9467470B2', 'US10148697B2', 'US10462188B2']","
Techniques for automated insider threat prevention are disclosed. In some embodiments, a system, process, and/or computer program product for automated insider threat prevention includes monitoring network communications at a network device; detecting an anomalous activity based on the monitored network communications associated with a user based on a behavior profile for the user; and performing an action in response to the detected anomalous activity based on a policy.
",H04,2018,"
techniques for automated insider threat prevention are disclosed in some embodiments a system process and/or computer program product for automated insider threat prevention includes monitoring network communications at a network device; detecting an anomalous activity based on the monitored network communications associated with a user based on a behavior profile for the user; and performing an action in response to the detected anomalous activity based on a policy
",5,H04_5,2,2.0,4.0,4.0
US10721243B2,497,"Apparatus, system and method for identifying and mitigating malicious network threats ",2020-07-21,"['US10587580B2', 'US9769204B2', 'US9860265B2', 'US10270744B2', 'US10601853B2', 'US9609019B2', 'US9369479B2', 'US10243984B2', 'US10728263B1', 'US10200384B1', 'EP2779574B1', 'US9848016B2', 'US10686804B2', 'US10469514B2', 'US10425383B2', 'US20200287925A1']","
Implementations of the present disclosure involve a system and/or method for identifying and mitigating malicious network threats. Network data associated is retrieved from various sources across a network and analyzed to identify a malicious network threat. When a threat is found, the system performs a mitigating action to neutralize the malicious network threat.
",H04,2020,"
implementations of the present disclosure involve a system and/or method for identifying and mitigating malicious network threats network data associated is retrieved from various sources across a network and analyzed to identify a malicious network threat when a threat is found the system performs a mitigating action to neutralize the malicious network threat
",5,H04_5,2,2.0,4.0,4.0
US20180285797A1,529,Cognitive scoring of asset risk based on predictive propagation of security-related events ,2018-10-04,"['US20170310703A1', 'US10587640B2', 'US10243984B2', 'US10728263B1', 'US9848016B2', 'US9473522B1', 'US10652273B2', 'US20180302421A1', 'US10348771B2', 'US10462188B2', 'US10673873B2', 'US10848517B1', 'US10623442B2', 'US9740859B2', 'US10574685B2', 'US9338143B2', 'US9942250B2', 'US10003608B2', 'US20190260795A1']","
A method (and system) of scoring asset risk including modeling an interdependence of risks of a plurality of entities within a network by modeling the network as a graph connecting different entities, the different entities are selected from a group of a user, a device, a credential, a high-value asset, and an external server, the graph being defined as a set of vertices comprising the user, the device, the credential, the high-value asset, and the external server and a set of edges represented by an N-by-N adjacency matrix with each pair of the entities sharing a relationship and applying a Belief Propagation (BP) algorithm for solving the inference problem over the graph by inferring the risk from the entities own properties and surrounding entities with the shared relationship in the adjacency matrix, the Belief Propagation algorithm obtains risk information related to each entity of the plurality of entities.
",G06,2018,"
a method (and system) of scoring asset risk including modeling an interdependence of risks of a plurality of entities within a network by modeling the network as a graph connecting different entities the different entities are selected from a group of a user a device a credential a high-value asset and an external server the graph being defined as a set of vertices comprising the user the device the credential the high-value asset and the external server and a set of edges represented by an n-by-n adjacency matrix with each pair of the entities sharing a relationship and applying a belief propagation (bp) algorithm for solving the inference problem over the graph by inferring the risk from the entities own properties and surrounding entities with the shared relationship in the adjacency matrix the belief propagation algorithm obtains risk information related to each entity of the plurality of entities
",5,G06_5,2,2.0,36.0,4.0
US10397246B2,637,System and methods for malware detection using log based crowdsourcing analysis ,2019-08-27,"['US10587640B2', 'US10326790B2', 'US8650647B1', 'US10454894B2', 'US10762206B2', 'US10728263B1', 'US10735458B1', 'US20180124081A1', 'US9015846B2', 'US10348771B2', 'US8931099B2', 'US10805321B2', 'US10498756B2', 'US10721243B2']","
A crowdsourcing log analysis system and methods for protecting computers and networks from malware attacks by analyzing data log information obtained from a plurality of client network. The client networks are associated with a set of network entities representing a plurality of business units or customers. The system may further comprise a plurality of server machines, each operable to execute a security product associated with a security product vendor and log associated information of at the network entities into at least one log file. The log files may be uploaded onto a breach detection platform for analysis based upon crowdsourcing principles and is operable to generate a risk factor attribute for at least one suspect entity.
",H04,2019,"
a crowdsourcing log analysis system and methods for protecting computers and networks from malware attacks by analyzing data log information obtained from a plurality of client network the client networks are associated with a set of network entities representing a plurality of business units or customers the system may further comprise a plurality of server machines each operable to execute a security product associated with a security product vendor and log associated information of at the network entities into at least one log file the log files may be uploaded onto a breach detection platform for analysis based upon crowdsourcing principles and is operable to generate a risk factor attribute for at least one suspect entity
",5,H04_5,2,2.0,36.0,4.0
US20170214708A1,767,Detecting security threats by combining deception mechanisms and data science ,2017-07-27,"['US10297128B2', 'US10122760B2', 'US20190251260A1', 'US9043868B2', 'US20160014078A1', 'US9742794B2', 'JP2017525055A', 'US10862902B2', 'RU2694022C2', 'EP3528458B1']","
Provided are systems, methods, and computer-program products for a network device, configured to use data science techniques to manage the deployment of deception mechanisms in a network, where the deception mechanisms can attract and detect threats to the network. In various implementations, the network device can receive network data. The network data can include data produced by an interaction with a deception mechanism. The deception mechanism can be part of the security of the network. An interaction can include a potential threat to the network. The network device can further be configured to analyze the network data using a data science engine, including identifying a pattern of network behavior. The network device can further generate an attack pattern that includes the behavior of the potential threat. The network device can further use the attack pattern to modify deception mechanisms on the network.
",H04,2017,"
provided are systems methods and computer-program products for a network device configured to use data science techniques to manage the deployment of deception mechanisms in a network where the deception mechanisms can attract and detect threats to the network in various implementations the network device can receive network data the network data can include data produced by an interaction with a deception mechanism the deception mechanism can be part of the security of the network an interaction can include a potential threat to the network the network device can further be configured to analyze the network data using a data science engine including identifying a pattern of network behavior the network device can further generate an attack pattern that includes the behavior of the potential threat the network device can further use the attack pattern to modify deception mechanisms on the network
",5,H04_5,2,11.0,25.0,4.0
JP2018508071A,789,Model protection level on-device determination based on malware detection in similar devices ,2018-03-22,"['US20190245894A1', 'CN104303538B', 'US10447708B2', 'US9311480B2', 'US20170134405A1', 'CN105830080B', 'US20180131624A1', 'US10097561B2', 'US9544798B1', 'US10341363B1', 'US8584242B2', 'US20180041537A1', 'US9779236B2', 'US9438613B1', 'US9740859B2', 'US9571512B2', 'US10783254B2', 'US9824216B1', 'US20190182247A1', 'US10742676B2']","
Methods, systems, and devices for identifying, classifying, modeling, and responding to mobile device behavior are light processes for monitoring and analyzing various conditions and device behavior for detecting instances of non-benign behavior Increased security or scrutiny to identify other instances of non-benign behavior and increased security so that the selected computing device can also increase its security / scrutiny level Informing the selected computing device about the level. For example, the computing device performs a first type of analysis operation (e.g., a light analysis operation) to determine if there is an increased security risk, and is detected by performing the first type of analysis operation A second type of analysis action (e.g., robust analysis action) in response to a determination that there is an increased security risk to determine whether there is an additional security risk that is different from the reported security risk May be configured to perform.
",G06,2018,"
methods systems and devices for identifying classifying modeling and responding to mobile device behavior are light processes for monitoring and analyzing various conditions and device behavior for detecting instances of non-benign behavior increased security or scrutiny to identify other instances of non-benign behavior and increased security so that the selected computing device can also increase its security / scrutiny level informing the selected computing device about the level for example the computing device performs a first type of analysis operation (eg a light analysis operation) to determine if there is an increased security risk and is detected by performing the first type of analysis operation a second type of analysis action (eg robust analysis action) in response to a determination that there is an increased security risk to determine whether there is an additional security risk that is different from the reported security risk may be configured to perform
",5,G06_5,2,5.0,21.0,4.0
US9369476B2,842,System for detection of mobile applications network behavior-netwise ,2016-06-14,"['AU2017200969B2', 'US20190245894A1', 'US10454955B2', 'US9369479B2', 'US9178852B2', 'US9462009B1', 'US9740859B2', 'US10397246B2', 'KR101837923B1', 'US10348771B2', 'US20190363893A1', 'US9609456B2', 'US9838407B1', 'US10721243B2', 'US10609059B2']","
The invention is a system for protecting mobile devices in cellular networks from unauthorized harmful applications and for protecting cellular network infrastructure from targeted or benign overloads. The system comprises mobile cellular devices and a cellular network infrastructure. Some of the mobile devices comprise an application manager, which is adapted to manage the aggregation and learning processes, and a detection manager, which is adapted to analyze network behavior and detect deviations. The application manager and the detection manager are adapted to monitor the applications running on a device, learn the patterns of mobile applications network behavior and detect meaningful deviations from the application's observed normal behavior. The cellular network infrastructure comprises a services module, a logic module, and a database access unit adapted for aggregation and analysis of an application's network traffic patterns for numerous users.
",G06,2016,"
the invention is a system for protecting mobile devices in cellular networks from unauthorized harmful applications and for protecting cellular network infrastructure from targeted or benign overloads the system comprises mobile cellular devices and a cellular network infrastructure some of the mobile devices comprise an application manager which is adapted to manage the aggregation and learning processes and a detection manager which is adapted to analyze network behavior and detect deviations the application manager and the detection manager are adapted to monitor the applications running on a device learn the patterns of mobile applications network behavior and detect meaningful deviations from the application's observed normal behavior the cellular network infrastructure comprises a services module a logic module and a database access unit adapted for aggregation and analysis of an application's network traffic patterns for numerous users
",5,G06_5,2,5.0,87.0,4.0
US10367815B2,862,Protecting sensitive information from a secure data store ,2019-07-30,"['US9294500B2', 'US20190245894A1', 'US9344431B2', 'US10482260B1', 'US10447708B2', 'US10402546B1', 'US10516531B2', 'US9235704B2', 'US9860263B2', 'US9589129B2', 'US9740852B2', 'US10673902B2', 'US20190245829A1', 'US10382459B2', 'US20180041537A1', 'US20160373486A1', 'US10558800B2', 'US20200012769A1', 'US9740859B2', 'US9753796B2', 'US9467465B2', 'EP2609538B1', 'US9344457B2', 'US10742676B2', 'US10462188B2']","
In embodiments of the present invention improved capabilities are described for the steps of receiving an indication that a computer facility has access to a secure data store, causing a security parameter of a storage medium local to the computer facility to be assessed, determining if the security parameter is compliant with a security policy relating to computer access of the remote secure data store, and in response to an indication that the security parameter is non-compliant, cause the computer facility to implement an action to prevent further dissemination of information, to disable access to network communications, to implement an action to prevent further dissemination of information, and the like.
",H04,2019,"
in embodiments of the present invention improved capabilities are described for the steps of receiving an indication that a computer facility has access to a secure data store causing a security parameter of a storage medium local to the computer facility to be assessed determining if the security parameter is compliant with a security policy relating to computer access of the remote secure data store and in response to an indication that the security parameter is non-compliant cause the computer facility to implement an action to prevent further dissemination of information to disable access to network communications to implement an action to prevent further dissemination of information and the like
",5,H04_5,2,9.0,29.0,4.0
US10044751B2,924,Using recurrent neural networks to defeat DNS denial of service attacks ,2018-08-07,"['US10587640B2', 'JP6139656B2', 'US20170063917A1', 'US10728263B1', 'US20190297096A1', 'US10270744B2', 'US20160182542A1', 'US10200384B1', 'US10721243B2', 'CN106576099B', 'US9369479B2', 'US9954872B2', 'US9690933B1', 'EP2774039B1', 'US10326778B2', 'US8966625B1', 'US10637880B1', 'EP3272096B1', 'EP3528462A1']","
A system for mitigating network attacks is provided. The system includes a protected network including a plurality of devices. The system further includes one or more attack mitigation devices communicatively coupled to the protected network. The attack mitigation devices are configured and operable to employ a recurrent neural network (RNN) to obtain probability information related to a request stream. The request stream may include a plurality of at least one of: HTTP, RTSP and/or DNS messages. The attack mitigation devices are further configured to analyze the obtained probability information to detect one or more atypical requests in the request stream. The attack mitigation services are also configured and operable to perform, in response to detecting one or more atypical requests, mitigation actions on the one or more atypical requests in order to block an attack.
",H04,2018,"
a system for mitigating network attacks is provided the system includes a protected network including a plurality of devices the system further includes one or more attack mitigation devices communicatively coupled to the protected network the attack mitigation devices are configured and operable to employ a recurrent neural network (rnn) to obtain probability information related to a request stream the request stream may include a plurality of at least one of: http rtsp and/or dns messages the attack mitigation devices are further configured to analyze the obtained probability information to detect one or more atypical requests in the request stream the attack mitigation services are also configured and operable to perform in response to detecting one or more atypical requests mitigation actions on the one or more atypical requests in order to block an attack
",5,H04_5,2,2.0,4.0,4.0
US10469514B2,931,Collaborative and adaptive threat intelligence for computer security ,2019-11-05,"['US10257221B2', 'US9495188B1', 'US9838408B1', 'US9705922B2', 'US10853443B2', 'US10313475B2', 'US10666686B1', 'US9848016B2', 'US9667651B2', 'US20200228563A1', 'US10270744B2', 'US9917864B2', 'US10608983B2', 'US20200099700A1', 'US10454953B1', 'US9369479B2', 'US20180352004A1', 'US10757134B1', 'US10425383B2', 'US9392001B2', 'US10230689B2', 'US10812497B2', 'US10637880B1', 'US20200177548A1']","
Collaborative and adaptive threat intelligence. Data collected on a first customer network is received. One or more local models are trained with at least the received data, where the one or more local models are related to security. An amount of data to transmit to a centralized controller is determined based at least on a result of the training one or more local models and the determined amount of data is transmitted to the centralized controller. Result data is received from the centralized controller that is a result of one or more global models trained on the centralized controller using data collected on multiple customer networks including the first customer network. The one or more local models are adjusted using the received result data and the one or more adjusted local models are trained.
",H04,2019,"
collaborative and adaptive threat intelligence data collected on a first customer network is received one or more local models are trained with at least the received data where the one or more local models are related to security an amount of data to transmit to a centralized controller is determined based at least on a result of the training one or more local models and the determined amount of data is transmitted to the centralized controller result data is received from the centralized controller that is a result of one or more global models trained on the centralized controller using data collected on multiple customer networks including the first customer network the one or more local models are adjusted using the received result data and the one or more adjusted local models are trained
",5,H04_5,2,2.0,4.0,4.0
US20200287925A1,932,Entity Group Behavior Profiling ,2020-09-10,"['US10257221B2', 'US10447708B2', 'US9838408B1', 'US9495188B1', 'US9705922B2', 'US10853443B2', 'US10313475B2', 'US10666686B1', 'US9848016B2', 'US9667651B2', 'US20200228563A1', 'US10270744B2', 'US9917864B2', 'US10608983B2', 'US10454953B1', 'US9369479B2', 'US20180352004A1', 'US10757134B1', 'US10425383B2', 'US9392001B2', 'US10230689B2', 'US10637880B1', 'US9838407B1', 'US20200177548A1']","
Entity group behavior profiling. An entity group is created that includes multiple entities, where each entity represents one of a user, a machine, and a service. A behavior profile is created for each one of the entities of the entity group. The behavior of each of one of the entities of the entity group is monitored to detect behavior change. An indicator of compromise is detected based on multiple ones of the entities experiencing substantially a same behavior change.
",H04,2020,"
entity group behavior profiling an entity group is created that includes multiple entities where each entity represents one of a user a machine and a service a behavior profile is created for each one of the entities of the entity group the behavior of each of one of the entities of the entity group is monitored to detect behavior change an indicator of compromise is detected based on multiple ones of the entities experiencing substantially a same behavior change
",5,H04_5,2,2.0,4.0,4.0
US10496816B2,1072,Supplementary activity monitoring of a selected subset of network entities ,2019-12-03,"['US10331720B2', 'US20200287807A1', 'US10866991B1', 'US10719525B2', 'US10678805B2', 'US10693743B2', 'US10713314B2', 'US10673870B2', 'US10911470B2', 'US20170139996A1', 'US10700950B2', 'US20170142143A1', 'US9202249B1', 'US20190372868A1', 'US10848510B2', 'US10855712B2', 'US10609059B2', 'US10387448B2', 'US20190163350A1', 'US10855793B2', 'US10778712B2', 'US10606857B2', 'US20200014593A1', 'US10592694B2', 'US20200026634A1']","
Systems and methods are disclosed for associating an entity with a risk score that may indicate a security threat associated with the entity's activity. An exemplary method may involve monitoring the activity of a subset of the set of entities (e.g., entities included in a watch list) by executing a search query against events indicating the activity of the subset of entities. The events may be associated with timestamps and may include machine data. Executing the search query may produce search results that pertain to activity of a particular entity from the subset. The search results may be evaluated based on a triggering condition corresponding to the statistical baseline. When the triggering condition is met, a risk score for the particular entity may be updated. The updated risk score may be displayed to a user via a graphical user interface (GUI).
",G06,2019,"
systems and methods are disclosed for associating an entity with a risk score that may indicate a security threat associated with the entity's activity an exemplary method may involve monitoring the activity of a subset of the set of entities (eg entities included in a watch list) by executing a search query against events indicating the activity of the subset of entities the events may be associated with timestamps and may include machine data executing the search query may produce search results that pertain to activity of a particular entity from the subset the search results may be evaluated based on a triggering condition corresponding to the statistical baseline when the triggering condition is met a risk score for the particular entity may be updated the updated risk score may be displayed to a user via a graphical user interface (gui)
",5,G06_5,2,8.0,2.0,4.0
US10693743B2,1075,Displaying interactive topology maps of cloud computing resources ,2020-06-23,"['US20200336390A1', 'US10372722B2', 'US10305758B1', 'US10866991B1', 'US10515469B2', 'US10193775B2', 'US10205643B2', 'US20190250799A1', 'US10673870B2', 'US10185740B2', 'US20180024901A1', 'US20200364279A1', 'US20200125534A1', 'US10700950B2', 'US10547695B2', 'US20190372868A1', 'US20150026167A1', 'US10855712B2', 'US10243818B2', 'US10209956B2', 'US10417108B2', 'US20200242139A1', 'US20180081935A1', 'US10592694B2', 'US20190377463A1']","
Techniques and mechanisms are disclosed that enable collection of various types of data from cloud computing services and the generation of various dashboards and visualizations to view information about collections of cloud computing resources. A user can configure collection of data from one or more cloud computing services and view visualizations using an application platform referred to herein as a cloud computing management application. A cloud computing management application further may be configured to generate and cause display of interactive topology map representations of cloud computing resources based on the collected data, where an interactive topology map enables users to view an intuitive visualization of a collection of computing resources, efficiently cause performance of actions with respect to various resources displayed in the topology map, and analyze the collection of resources in ways that are not possible using conventional cloud computing service management consoles.
",H04,2020,"
techniques and mechanisms are disclosed that enable collection of various types of data from cloud computing services and the generation of various dashboards and visualizations to view information about collections of cloud computing resources a user can configure collection of data from one or more cloud computing services and view visualizations using an application platform referred to herein as a cloud computing management application a cloud computing management application further may be configured to generate and cause display of interactive topology map representations of cloud computing resources based on the collected data where an interactive topology map enables users to view an intuitive visualization of a collection of computing resources efficiently cause performance of actions with respect to various resources displayed in the topology map and analyze the collection of resources in ways that are not possible using conventional cloud computing service management consoles
",5,H04_5,2,8.0,2.0,4.0
US10305922B2,1076,Detecting security threats in a local network ,2019-05-28,"['US20200356666A1', 'US10356106B2', 'CA2926579C', 'US9888024B2', 'US10009366B2', 'US10911470B2', 'US10721243B2', 'US10469514B2', 'JP6585131B2', 'US9306964B2', 'US9503469B2', 'US20200358808A1', 'US10587646B2', 'US20190173904A1', 'US10609059B2', 'US9832219B2', 'US9516062B2', 'JP2020039137A', 'US10326672B2', 'US10333971B2', 'US10148685B2', 'US10476905B2', 'US9838407B1']","
Disclosed is a system for detecting security threats in a local network. A security analytics system collects data about entities in the local network. The security analytics system identifies the entities in the raw data and determines a set of properties about each of the identified entities. The entity properties contain information about the entity and can be temporary or permanent properties about the entity. The security analytics system determines relationships between the identified entities and can be determined based on the entity properties for the identified properties. An entity graph is generated that describes the entity relationships, wherein the nodes of the entity graph represent entities and the edges of the entity graph represent entity relationships. The security analytics system provides a user interface to a user that contains the entity graph and the relationships described therein.
",H04,2019,"
disclosed is a system for detecting security threats in a local network a security analytics system collects data about entities in the local network the security analytics system identifies the entities in the raw data and determines a set of properties about each of the identified entities the entity properties contain information about the entity and can be temporary or permanent properties about the entity the security analytics system determines relationships between the identified entities and can be determined based on the entity properties for the identified properties an entity graph is generated that describes the entity relationships wherein the nodes of the entity graph represent entities and the edges of the entity graph represent entity relationships the security analytics system provides a user interface to a user that contains the entity graph and the relationships described therein
",5,H04_5,2,2.0,4.0,4.0
US20170142143A1,1251,Identifying notable events based on execution of correlation searches ,2017-05-18,"['US10139997B2', 'US9940373B2', 'US10606856B2', 'US10382472B2', 'EP3262538B1', 'US10599723B2', 'US10678805B2', 'US10205643B2', 'US10713314B2', 'US20190163675A1', 'US10761687B2', 'US9582585B2', 'US20180157719A1', 'US10250628B2', 'EP3107026B1', 'US10848510B2', 'US10587633B2', 'US10185821B2', 'US20180024702A1', 'US20200242139A1', 'US20180081935A1', 'US9633106B1', 'US10469344B2', 'US10592694B2', 'US20200026634A1']","
Systems and methods are provided for identifying network addresses and/or IDs of a deduplicated list among network data, machine data, and/or events derived from network data and/or machine data, and for identifying notable events by searching for the presence of network addresses and/or network IDs that are deduplicated across lists received from multiple external sources. One method includes receiving a plurality of lists of network locations, wherein each list is received from over a network, wherein each of the network locations includes a domain name or an IP address, and wherein at least two of the plurality of lists each include a same network location; aggregating the plurality of lists of network locations into a deduplicated list of unique network locations; and searching network data or machine data for a network location included in the deduplicated list of unique network locations.
",H04,2017,"
systems and methods are provided for identifying network addresses and/or ids of a deduplicated list among network data machine data and/or events derived from network data and/or machine data and for identifying notable events by searching for the presence of network addresses and/or network ids that are deduplicated across lists received from multiple external sources one method includes receiving a plurality of lists of network locations wherein each list is received from over a network wherein each of the network locations includes a domain name or an ip address and wherein at least two of the plurality of lists each include a same network location; aggregating the plurality of lists of network locations into a deduplicated list of unique network locations; and searching network data or machine data for a network location included in the deduplicated list of unique network locations
",5,H04_5,2,8.0,2.0,4.0
US10425383B2,1299,Platforms for implementing an analytics framework for DNS security ,2019-09-24,"['US10257221B2', 'US9106693B2', 'US10666621B2', 'US9762596B2', 'US10681012B2', 'US20180337941A1', 'US9762543B2', 'US10200384B1', 'EP3171568B1', 'US10841324B2', 'US9860265B2', 'US10079852B2', 'US20190173904A1', 'US20170272469A1', 'US20190385167A1', 'US10044748B2', 'US9967279B2', 'US9344445B2', 'US9531738B2']","
Flux domain is generally an active threat vector, and flux domain behaviors are continually changing in an attempt to evade existing detection measures. Accordingly, new and improved techniques are disclosed for flux domain detection. In some embodiments, an online platform implementing an analytics framework for DNS security is provided for facilitating flux domain detection. For example, the online platform can implement an analytics framework for DNS security based on passive DNS traffic analysis, disclosed herein with respect to various embodiments.
",H04,2019,"
flux domain is generally an active threat vector and flux domain behaviors are continually changing in an attempt to evade existing detection measures accordingly new and improved techniques are disclosed for flux domain detection in some embodiments an online platform implementing an analytics framework for dns security is provided for facilitating flux domain detection for example the online platform can implement an analytics framework for dns security based on passive dns traffic analysis disclosed herein with respect to various embodiments
",5,H04_5,2,2.0,4.0,4.0
US10673870B2,1346,Security monitoring of network connections using metrics data ,2020-06-02,"['US20180089312A1', 'US20200336390A1', 'US10257059B2', 'US10678805B2', 'US10270788B2', 'US10693743B2', 'US10585851B2', 'US10374883B2', 'US20200364279A1', 'US10250628B2', 'US20180089278A1', 'US10360196B2', 'US10700950B2', 'US10599308B2', 'US20170142143A1', 'US10419465B2', 'US20190372868A1', 'US10848510B2', 'US10609059B2', 'US10185821B2', 'US20190163350A1', 'US10127258B2', 'US10606857B2', 'US20200014593A1', 'US10592694B2']","
Various embodiments of the present invention set forth techniques for security monitoring of a network connection, including analyzing network traffic data for a network connection associated with a computing device, identifying one or more network traffic metrics for the network connection based on the network traffic data, determining that the network connection corresponds to at least one network connection profile based on the one or more network traffic metrics, detecting a potential security threat for the network connection based on the one or more network traffic metrics and the at least one network connection profile, and initiating a mitigation action with respect to the network connection in response to detecting the potential security threat. Advantageously, the techniques allow detecting potential security threats based on network traffic metrics and categorizations, without requiring monitoring of the content or the total volume of all traffic exchanged via the connection.
",H04,2020,"
various embodiments of the present invention set forth techniques for security monitoring of a network connection including analyzing network traffic data for a network connection associated with a computing device identifying one or more network traffic metrics for the network connection based on the network traffic data determining that the network connection corresponds to at least one network connection profile based on the one or more network traffic metrics detecting a potential security threat for the network connection based on the one or more network traffic metrics and the at least one network connection profile and initiating a mitigation action with respect to the network connection in response to detecting the potential security threat advantageously the techniques allow detecting potential security threats based on network traffic metrics and categorizations without requiring monitoring of the content or the total volume of all traffic exchanged via the connection
",5,H04_5,2,8.0,2.0,4.0
US10855793B2,1396,Proxying hypertext transfer protocol (HTTP) requests for microservices ,2020-12-01,"['US20200336390A1', 'US9940373B2', 'US20150081701A1', 'US10678805B2', 'US10592694B2', 'US20190250799A1', 'US10673870B2', 'US20200364279A1', 'US20200067790A1', 'US20200125534A1', 'US10700950B2', 'US20170142143A1', 'US10911468B2', 'US20190372868A1', 'US10848510B2', 'US10855712B2', 'US10609059B2', 'US20190065541A1', 'US20200242139A1', 'US20180081935A1', 'US10778712B2', 'US10606857B2', 'US20200014593A1', 'US10360196B2', 'US20200026634A1']","
In various embodiments, a gateway application generates an outgoing Hypertext Transmission Protocol (HTTP) request based on an incoming HTTP request. In operation, the gateway application receives the incoming HTTP request and identifies an upstream service based on at least one of an HTTP method and a header included in the incoming HTTP request. Subsequently, the gateway application generates an outgoing HTTP request based on the upstream service and the incoming HTTP request. Finally, the gateway application issues the outgoing HTTP request. The outgoing HTTP request causes the upstream service to perform an action requested in the incoming HTTP request. Advantageously, the gateway application enables underlying upstream services to perform actions specified via incoming HTTP requests without directly exposing the upstream services to users.
",H04,2020,"
in various embodiments a gateway application generates an outgoing hypertext transmission protocol (http) request based on an incoming http request in operation the gateway application receives the incoming http request and identifies an upstream service based on at least one of an http method and a header included in the incoming http request subsequently the gateway application generates an outgoing http request based on the upstream service and the incoming http request finally the gateway application issues the outgoing http request the outgoing http request causes the upstream service to perform an action requested in the incoming http request advantageously the gateway application enables underlying upstream services to perform actions specified via incoming http requests without directly exposing the upstream services to users
",5,H04_5,2,8.0,2.0,4.0
US20190385167A1,1456,"Systems and methods for tracking, predicting, and mitigating advanced persistent threats in networks ",2019-12-19,"['US9565177B2', 'US10270744B2', 'US10425383B2', 'US10193919B2', 'US9015839B2', 'US10728263B1', 'JP2020521383A', 'EP3461103B1', 'US10397246B2', 'US9942250B2', 'US9602530B2', 'US10721243B2', 'US9882767B1']","
Systems and methods for tracking, predicting, and mitigating Advanced Persistent Threat (APT) attacks in a network include obtaining data related to events and triggers for one or more attacks, wherein the data includes a plurality of i) virtual currency transactions, ii) network traffic flow, and iii) sentiment on any of social media, blogs, and news feeds; correlating the data with one or more subscribed entities; determining a threat index for an attack on a specific subscribed entity of the one or more subscribed entities through analysis of the correlated data, wherein the threat index provides a probability of the attack on the specific subscribed entity; and notifying the specific subscribed entity of a likelihood of the attack based on the threat index.
",G06,2019,"
systems and methods for tracking predicting and mitigating advanced persistent threat (apt) attacks in a network include obtaining data related to events and triggers for one or more attacks wherein the data includes a plurality of i) virtual currency transactions ii) network traffic flow and iii) sentiment on any of social media blogs and news feeds; correlating the data with one or more subscribed entities; determining a threat index for an attack on a specific subscribed entity of the one or more subscribed entities through analysis of the correlated data wherein the threat index provides a probability of the attack on the specific subscribed entity; and notifying the specific subscribed entity of a likelihood of the attack based on the threat index
",5,G06_5,2,2.0,0.0,4.0
US20200412757A1,3022,Network security system and method for preemptively identifying or remediating security vulnerabilities ,2020-12-31,"['US10445502B1', 'US10728263B1', 'EP3111330B1', 'US20190182281A1', 'US10270744B2', 'US10218740B1', 'US10200384B1', 'US20190260786A1', 'US10721243B2', 'US20190190937A1', 'US10432649B1', 'US9954890B1', 'JP6086968B2', 'US9787700B1', 'US10505956B1', 'US10326778B2', 'US10735458B1', 'US10637880B1', 'US10467411B1', 'US9942250B2', 'US10003608B2']","
A system, a method, and a computer program for analyzing network security data from diverse data sources to predict and remediate a vulnerability at a node in a computer network, comprising receiving network security data from a plurality of data sources, extracting feature vectors from the received network security data, applying a machine learning model to the extracted feature vectors to generate a weighted vulnerability value, predicting a computing resource vulnerability at a node in the computer network based on the weighted vulnerability value, and transmitting the predicted computing resource vulnerability to a computing device which is configured to remediate the predicted computing resource vulnerability.
",H04,2020,"
a system a method and a computer program for analyzing network security data from diverse data sources to predict and remediate a vulnerability at a node in a computer network comprising receiving network security data from a plurality of data sources extracting feature vectors from the received network security data applying a machine learning model to the extracted feature vectors to generate a weighted vulnerability value predicting a computing resource vulnerability at a node in the computer network based on the weighted vulnerability value and transmitting the predicted computing resource vulnerability to a computing device which is configured to remediate the predicted computing resource vulnerability
",5,H04_5,2,2.0,4.0,4.0
US20180115566A1,3047,Malicious encrypted network traffic identification using fourier transform ,2018-04-26,"['JP2018530066A', 'AU2017200969B2', 'US10095866B2', 'US9356942B1', 'US9680849B2', 'US10785191B2', 'US10728263B1', 'US9288220B2', 'US10326778B2', 'US8839442B2', 'US10721243B2', 'US10003608B2', 'US20180285797A1']","
A method for identifying malicious encrypted network traffic communicated via a network between a first and second computer system, the method including: monitoring network traffic over the network to detect a network connection as a new network connection; identifying characteristics of the network connection to determine a protocol of the network connection; retrieving a definition of a portion of network traffic for a network connection based on the determined protocol; evaluating Fourier transform coefficient values for each of a plurality of bytes in a portion of network traffic of the new network connection based on the retrieved definition; and comparing the evaluated coefficient values with a dictionary of one or more reference sets of coefficients, each of the one or more reference sets of coefficients being associated with a portion of network traffic of a malicious encrypted network connection, so as to determine if malicious encrypted network traffic is communicated over the network connection.
",H04,2018,"
a method for identifying malicious encrypted network traffic communicated via a network between a first and second computer system the method including: monitoring network traffic over the network to detect a network connection as a new network connection; identifying characteristics of the network connection to determine a protocol of the network connection; retrieving a definition of a portion of network traffic for a network connection based on the determined protocol; evaluating fourier transform coefficient values for each of a plurality of bytes in a portion of network traffic of the new network connection based on the retrieved definition; and comparing the evaluated coefficient values with a dictionary of one or more reference sets of coefficients each of the one or more reference sets of coefficients being associated with a portion of network traffic of a malicious encrypted network connection so as to determine if malicious encrypted network traffic is communicated over the network connection
",5,H04_5,2,2.0,36.0,4.0
US10348745B2,3507,Associating a user identifier detected from web traffic with a client address ,2019-07-09,"['US8813236B1', 'US10728263B1', 'US20190297096A1', 'US10855718B2', 'US9762596B2', 'US20180109494A1', 'US10305922B2', 'US10009364B2', 'US10469514B2', 'US9369479B2', 'US9503424B2', 'EP3223485B1', 'US10594656B2', 'US10812497B2', 'US10326778B2', 'US20160366160A1', 'US10686804B2', 'EP3528458B1', 'US10003608B2', 'US20200287925A1']","
In one embodiment, a device in a network receives a set of known user identifiers used in the network. The device receives web traffic log data regarding web traffic in the network. The web traffic log data includes header information captured from the web traffic and a plurality of client addresses associated with the web traffic. The device detects a particular one of the set of known user identifiers in the header information captured from the web traffic associated with a particular one of the plurality of client addresses. The device makes an association between the particular detected user identifier and the particular client address.
",H04,2019,"
in one embodiment a device in a network receives a set of known user identifiers used in the network the device receives web traffic log data regarding web traffic in the network the web traffic log data includes header information captured from the web traffic and a plurality of client addresses associated with the web traffic the device detects a particular one of the set of known user identifiers in the header information captured from the web traffic associated with a particular one of the plurality of client addresses the device makes an association between the particular detected user identifier and the particular client address
",5,H04_5,2,2.0,4.0,4.0
US20180048673A1,3846,Techniques for determining threat intelligence for network infrastructure analysis ,2018-02-15,"['US20200287807A1', 'KR101953303B1', 'JP6220440B2', 'US10061807B2', 'US10536478B2', 'US10678805B2', 'US9529658B2', 'US20160259818A1', 'US10693743B2', 'US10673870B2', 'US20200334309A1', 'US8583617B2', 'US20140330962A1', 'US20170142143A1', 'US10855712B2', 'US10254934B2', 'US10353756B2', 'US10262045B2', 'US9323835B2', 'US10419463B2', 'US10387448B2', 'US10667101B2', 'US10027540B2', 'US20200026634A1', 'US9836502B2']","
Embodiments of the present disclosure are directed to a network analytic system for tracking and analysis of network infrastructure for network-based digital assets. The network analytic system can detect and track a relationship between assets based on one or more attributes related or shared between any given assets. The network analytic system can analyze network-based digital assets to determine information about a website (e.g., information about electronic documents, such as web pages) that has be used to detect phishing and other abuse of the website. The network analytic system can analyze data about network-based assets to determine whether any are being used or connected to use of unauthorized or malicious activity or known network-based assets. Based on the relationship identified, the network analytic system can associate or link assets together. The network analytic system may provide an interface to view data sets generated by the network analytic system.
",H04,2018,"
embodiments of the present disclosure are directed to a network analytic system for tracking and analysis of network infrastructure for network-based digital assets the network analytic system can detect and track a relationship between assets based on one or more attributes related or shared between any given assets the network analytic system can analyze network-based digital assets to determine information about a website (eg information about electronic documents such as web pages) that has be used to detect phishing and other abuse of the website the network analytic system can analyze data about network-based assets to determine whether any are being used or connected to use of unauthorized or malicious activity or known network-based assets based on the relationship identified the network analytic system can associate or link assets together the network analytic system may provide an interface to view data sets generated by the network analytic system
",5,H04_5,2,8.0,2.0,4.0
US20180063178A1,4471,Method and systems for real-time internal network threat detection and enforcement ,2018-03-01,"['US10873603B2', 'US10425383B2', 'US9942250B2', 'US20200287925A1', 'US10193919B2', 'US9860265B2', 'US10326790B2', 'US10728263B1', 'US10243984B2', 'US10003608B2', 'US9342691B2', 'US20180285797A1', 'US10270744B2', 'US9369479B2', 'US9560066B2', 'US10305922B2', 'US9294442B1', 'US10469514B2', 'JP6147309B2', 'US10305927B2', 'US9191403B2', 'US9848016B2', 'US10628582B2', 'US10193929B2']","
A method for threat detection and enforcement in an internal network is disclosed. The method includes: receiving a network packet of a plurality of network packets for a traffic flow; inspecting the network packet to obtain packet information; generating, using the packet information, a flow identifier (ID) for the traffic flow; assigning, based on the flow ID, a trust score and a risk score for the network packet; and performing an enforcing action, applicable to the traffic flow, based on the trust score and risk score.
",H04,2018,"
a method for threat detection and enforcement in an internal network is disclosed the method includes: receiving a network packet of a plurality of network packets for a traffic flow; inspecting the network packet to obtain packet information; generating using the packet information a flow identifier (id) for the traffic flow; assigning based on the flow id a trust score and a risk score for the network packet; and performing an enforcing action applicable to the traffic flow based on the trust score and risk score
",5,H04_5,2,2.0,4.0,4.0
US20200137090A1,6376,"Industrial asset cyber-attack detection algorithm verification using secure, distributed ledger ",2020-04-30,"['US10419463B2', 'AU2017200941B2', 'US8418247B2', 'EP3528458B1', 'US10791141B2', 'US9043905B1', 'US20170277873A1', 'EP3213243B1', 'US9984365B2', 'US10148685B2', 'US20170214708A1', 'EP3079336B1', 'JP6530786B2', 'JP6527590B2', 'US10425428B2', 'US20170093910A1', 'US10268840B2']","
A verification platform may include a data connection to receive a stream of industrial asset cyber-attack detection algorithm data, including a subset of the industrial asset cyber-attack detection algorithm data. The verification platform may store the subset into a data store (the subset of industrial asset cyber-attack detection algorithm data being marked as invalid) and record a hash value associated with a compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata in a secure, distributed ledger. The verification platform may then receive a transaction identifier from the secure, distributed ledger and mark the subset of industrial asset cyber-attack detection algorithm data in the data store as being valid after using the transaction identifier to verify that the recorded hash value matches a hash value of an independently created version of the compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata.
",H04,2020,"
a verification platform may include a data connection to receive a stream of industrial asset cyber-attack detection algorithm data including a subset of the industrial asset cyber-attack detection algorithm data the verification platform may store the subset into a data store (the subset of industrial asset cyber-attack detection algorithm data being marked as invalid) and record a hash value associated with a compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata in a secure distributed ledger the verification platform may then receive a transaction identifier from the secure distributed ledger and mark the subset of industrial asset cyber-attack detection algorithm data in the data store as being valid after using the transaction identifier to verify that the recorded hash value matches a hash value of an independently created version of the compressed representation of the subset of industrial asset cyber-attack detection algorithm data combined with metadata
",5,H04_5,2,11.0,21.0,4.0
US20200233962A1,6652,Detecting obfuscated malware variants ,2020-07-23,"['US10628597B2', 'US10673873B2', 'US10657277B2', 'US8869281B2', 'US20160127417A1', 'US20180041537A1', 'JP6334069B2', 'EP3528458B1', 'US10515211B2', 'US9753796B2', 'US10762206B2', 'US10366231B1', 'US10681078B2', 'US10742676B2', 'US9258321B2', 'US9563771B2', 'US9967271B2', 'US10367815B2', 'US20170310703A1', 'US10121000B1', 'US10834061B2', 'US10686827B2', 'US20190364019A1', 'US20200076837A1', 'US10348771B2']","
A threat management facility analyzes a plurality of instructions in computer code for redundancy. When redundancy is found, the threat management facility determines whether the redundancy has characteristics of deliberate obfuscation consistent with malware techniques such as server-side polymorphism. Measures of redundancy, such as one or more of a degree of redundancy or a pattern of redundancy, may inform this process, and my usefully aid in distinguishing legitimate code redundancies from malware. Where an inference of malware is supported, the threat management facility may initiate remediation of the computer code. Further, or instead, the type of remediation applied to the computer code may be based on one or more aspects of the detected obfuscation.
",G06,2020,"
a threat management facility analyzes a plurality of instructions in computer code for redundancy when redundancy is found the threat management facility determines whether the redundancy has characteristics of deliberate obfuscation consistent with malware techniques such as server-side polymorphism measures of redundancy such as one or more of a degree of redundancy or a pattern of redundancy may inform this process and my usefully aid in distinguishing legitimate code redundancies from malware where an inference of malware is supported the threat management facility may initiate remediation of the computer code further or instead the type of remediation applied to the computer code may be based on one or more aspects of the detected obfuscation
",5,G06_5,2,9.0,25.0,4.0
US20200127976A1,6962,Network security system with enhanced traffic analysis based on feedback loop ,2020-04-23,"['US10666686B1', 'EP3111330B1', 'US10467411B1', 'US10122746B1', 'US10425383B2', 'US10032020B2', 'US20200287925A1', 'US9756074B2', 'US9438623B1', 'US9853941B2', 'US9954902B1', 'US9800599B2', 'JP6553524B2', 'US9426125B2', 'US10366231B1', 'US10003608B2', 'US10257221B2', 'US10270744B2', 'US9912691B2', 'US10121000B1', 'KR20200007931A', 'US9654494B2', 'US10469514B2', 'US9762596B2', 'US9860265B2']","
This document describes among other things, network security systems that incorporate a feedback loop so as to automatically and dynamically adjust the scope of network traffic that is subject to inspection. Risky traffic can be sent for inspection; risky traffic that is demonstrated to have high rate of threats can be outright blocked without further inspection; traffic that is causing errors due to protocol incompatibility or should not be inspected for regulatory or other reasons can be flagged so it bypasses the security inspection system. The system can operate on a domain by domain basis, IP address basis, or otherwise.
",H04,2020,"
this document describes among other things network security systems that incorporate a feedback loop so as to automatically and dynamically adjust the scope of network traffic that is subject to inspection risky traffic can be sent for inspection; risky traffic that is demonstrated to have high rate of threats can be outright blocked without further inspection; traffic that is causing errors due to protocol incompatibility or should not be inspected for regulatory or other reasons can be flagged so it bypasses the security inspection system the system can operate on a domain by domain basis ip address basis or otherwise
",5,H04_5,2,2.0,4.0,4.0
US20200213192A1,7010,Characterizing client-server connection configurations according to communication layer attributes ,2020-07-02,"['US10404742B2', 'US9455997B2', 'US9973519B2', 'US10841324B2', 'US10721243B2', 'US20190034631A1', 'US20200287925A1', 'US8904558B2', 'US9497210B2', 'US9444835B2', 'US10326790B2', 'US9954902B1', 'US20180115523A1', 'US20200228563A1', 'US20200145451A1', 'EP3424178B1', 'US10193909B2', 'US10200384B1', 'US10581908B2', 'US10637880B1', 'US10205742B2', 'US20190354709A1', 'US10469514B2', 'US9860265B2']","
A system and method for characterizing a connection configuration of a client connecting to a computer system. The system can host a web service to which a client is redirected or connected to establish a client session between the client and the web service. The web service then actively and/or passively measures various attributes associated with the communication layers, such as latencies and/or configuration settings associated with each of the communication layers. Based on differences between the attributes of the communication layers, the computer system can characterize the client connection configuration. Various client connection configurations can include conventional connections, connections utilizing an external domain name service, connections through virtual private networks, connections through various proxies, and so on. Based on the characterized connection configuration, the computer system can take various actions, such as terminating the connection between the client and the computer system.
",H04,2020,"
a system and method for characterizing a connection configuration of a client connecting to a computer system the system can host a web service to which a client is redirected or connected to establish a client session between the client and the web service the web service then actively and/or passively measures various attributes associated with the communication layers such as latencies and/or configuration settings associated with each of the communication layers based on differences between the attributes of the communication layers the computer system can characterize the client connection configuration various client connection configurations can include conventional connections connections utilizing an external domain name service connections through virtual private networks connections through various proxies and so on based on the characterized connection configuration the computer system can take various actions such as terminating the connection between the client and the computer system
",5,H04_5,2,2.0,4.0,4.0
US10735458B1,214,Detection center to detect targeted malware ,2020-08-04,"['US10445502B1', 'US10728263B1', 'AU2018217323B2', 'US10397246B2', 'US9635052B2', 'EP2953298B1', 'US9888024B2', 'US10673884B2', 'US10713362B1', 'US9838407B1', 'US20190215335A1', 'US10581898B1', 'US9501639B2', 'US20190260785A1', 'US10805321B2', 'US9906554B2', 'US10326778B2', 'US10637880B1', 'US9241010B1', 'US10270798B2']","
A computerized method is described that is adapted to compare extracted features of a received object under analysis with one or more features associated with each known malicious object of a plurality of known malicious objects accessible to the one or more servers. Responsive to determining that the extracted features satisfy a prescribed level of correlation with the one or more features of a first known malicious object of the plurality of known malicious objects, identifying the received object as a malicious object. Also, responsive to determining that the extracted features fail to satisfy the prescribed level of correlation, conducting a second analysis that includes a comparison of the extracted features to the one or more features associated with each of the plurality of known malicious objects being of a type of malware other than malware targeting a specific entity.
",H04,2020,"
a computerized method is described that is adapted to compare extracted features of a received object under analysis with one or more features associated with each known malicious object of a plurality of known malicious objects accessible to the one or more servers responsive to determining that the extracted features satisfy a prescribed level of correlation with the one or more features of a first known malicious object of the plurality of known malicious objects identifying the received object as a malicious object also responsive to determining that the extracted features fail to satisfy the prescribed level of correlation conducting a second analysis that includes a comparison of the extracted features to the one or more features associated with each of the plurality of known malicious objects being of a type of malware other than malware targeting a specific entity
",6,H04_6,2,2.0,99.0,3.0
US10121000B1,533,System and method to detect premium attacks on electronic networks and electronic devices ,2018-11-06,"['US10812513B1', 'US10164993B2', 'US10445502B1', 'EP3349414B1', 'EP3014514B1', 'US9832213B2', 'US10686809B2', 'US10873597B1', 'US10218740B1', 'US10834107B1', 'US10348771B2', 'JP6441957B2', 'US10243991B2', 'US10419465B2', 'US9800606B1', 'US20200228558A1', 'US10817602B2', 'US9344457B2', 'US20200259858A1', 'US10762206B2', 'US10032020B2', 'US10467411B1', 'US10102372B2', 'US10193909B2', 'US9838407B1']","
A computerized method for detecting premium attacks by an attack classification system is described. Based on received analytic information, the attack classification system generates logical representations for different portions of the analytic information represented as a nodal graph. The logical representations include objects, properties, and relationships between the objects and the properties. The attack classification system filters at least one relationship from the relationships and forms a first cluster further filtering the relationships. Being a logical representation of objects, properties and the remaining relationships, the first cluster is analyzed to determine features and introduce the features into the nodal graph. An analysis of the features determines whether the objects, properties and relationships forming the first cluster are associated with a premium attack by at least applying rule-based constraints to the features of the first cluster to determine whether they correspond to cluster features commonly present in premium attacks.
",G06,2018,"
a computerized method for detecting premium attacks by an attack classification system is described based on received analytic information the attack classification system generates logical representations for different portions of the analytic information represented as a nodal graph the logical representations include objects properties and relationships between the objects and the properties the attack classification system filters at least one relationship from the relationships and forms a first cluster further filtering the relationships being a logical representation of objects properties and the remaining relationships the first cluster is analyzed to determine features and introduce the features into the nodal graph an analysis of the features determines whether the objects properties and relationships forming the first cluster are associated with a premium attack by at least applying rule-based constraints to the features of the first cluster to determine whether they correspond to cluster features commonly present in premium attacks
",6,G06_6,2,2.0,143.0,3.0
US10467411B1,535,System and method for generating a malware identifier ,2019-11-05,"['US20180124014A1', 'US10728263B1', 'US9832216B2', 'US9294442B1', 'US9848016B2', 'US10121000B1', 'US9781144B1', 'US9560059B1', 'US10713362B1', 'US10469514B2', 'US9197663B1', 'US10657251B1', 'US9954872B2', 'US9609019B2', 'US9438613B1', 'US10467414B1', 'US10230689B2', 'US10872151B1', 'US10505956B1', 'US10637880B1', 'EP3528458B1', 'US20200287925A1']","
One embodiment of the disclosure is directed to a method for generating an identifier for use in malware detection. Herein, a first plurality of indicators of compromise are obtained. These indicators of compromise correspond to a plurality of anomalous behaviors. Thereafter, a filtering operation is performed on the first plurality of indicators of compromise by removing one or more indicators of compromise from the first plurality of indicators of compromise to create a second plurality of indicators of compromise. The identifier represented by the second plurality of indicators of compromise is created.
",G06,2019,"
one embodiment of the disclosure is directed to a method for generating an identifier for use in malware detection herein a first plurality of indicators of compromise are obtained these indicators of compromise correspond to a plurality of anomalous behaviors thereafter a filtering operation is performed on the first plurality of indicators of compromise by removing one or more indicators of compromise from the first plurality of indicators of compromise to create a second plurality of indicators of compromise the identifier represented by the second plurality of indicators of compromise is created
",6,G06_6,2,2.0,99.0,3.0
US9838407B1,830,Detection of malicious web activity in enterprise computer networks ,2017-12-05,"['US10587640B2', 'US10728263B1', 'US10397246B2', 'US10121000B1', 'US9609010B2', 'US10270744B2', 'US10218740B1', 'US9930065B2', 'US10200384B1', 'US20160248805A1', 'US10305922B2', 'US10348771B2', 'US10666668B2', 'US10721243B2', 'US10469514B2', 'US9609015B2', 'US9860265B2', 'US9344447B2', 'US9369479B2', 'US20200358808A1', 'US10587646B2', 'US20190173904A1', 'US20200228558A1', 'US10735458B1', 'US10033753B1']","
A processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain internal log data of a computer network of an enterprise, to extract values of a plurality of designated internal features from the log data, to obtain additional data from one or more external data sources, and to extract values of a plurality of designated external features from the additional data. The extracted values are applied to a regression model based on the internal and external features to generate malicious activity risk scores for respective ones of a plurality of domains, illustratively external domains having fully-qualified domain names (FQDNs). A subset of the domains are identified based on their respective malicious activity risk scores, and one or more proactive security measures are taken against the identified subset of domains. The processing device may be implemented in the computer network or an associated network security system.
",H04,2017,"
a processing device in one embodiment comprises a processor coupled to a memory and is configured to obtain internal log data of a computer network of an enterprise to extract values of a plurality of designated internal features from the log data to obtain additional data from one or more external data sources and to extract values of a plurality of designated external features from the additional data the extracted values are applied to a regression model based on the internal and external features to generate malicious activity risk scores for respective ones of a plurality of domains illustratively external domains having fully-qualified domain names (fqdns) a subset of the domains are identified based on their respective malicious activity risk scores and one or more proactive security measures are taken against the identified subset of domains the processing device may be implemented in the computer network or an associated network security system
",6,H04_6,2,2.0,143.0,3.0
US10637880B1,831,Classifying sets of malicious indicators for detecting command and control communications associated with malware ,2020-04-28,"['US9769204B2', 'US10021129B2', 'US10445502B1', 'US20190354709A1', 'US9917864B2', 'CA2966408C', 'US10608983B2', 'US9667657B2', 'US20190245829A1', 'US10454953B1', 'US9934381B1', 'US20200076848A1', 'US10581898B1', 'US9654488B2', 'US10757120B1', 'US9609019B2', 'US9306964B2', 'US10432649B1', 'JP2020521383A', 'US10872128B2', 'US10735458B1', 'US10467411B1', 'US10534906B1', 'US20190258800A1', 'US20200287925A1']","
A method for detecting a cyber-attack by performing a first analysis on content within a first portion of a communication to determine whether the content includes a first high quality indicator. The first high quality indicator identifies a correlation of the content with a malicious activity. Subsequent to the first analysis, performing a second analysis on a second portion of the communication to determine one or more supplemental indicators. Thereafter, the communication is classified as part of a cyber-attack when (i) a value associated with the first high quality indicator exceeds a first threshold without consideration of the one or more supplemental indicators, or (ii) upon failing to exceed the first threshold and being greater than a second threshold, using the values representing the one or more supplemental indicators with the first value to classify the communication as being part of the cyber-attack.
",H04,2020,"
a method for detecting a cyber-attack by performing a first analysis on content within a first portion of a communication to determine whether the content includes a first high quality indicator the first high quality indicator identifies a correlation of the content with a malicious activity subsequent to the first analysis performing a second analysis on a second portion of the communication to determine one or more supplemental indicators thereafter the communication is classified as part of a cyber-attack when (i) a value associated with the first high quality indicator exceeds a first threshold without consideration of the one or more supplemental indicators or (ii) upon failing to exceed the first threshold and being greater than a second threshold using the values representing the one or more supplemental indicators with the first value to classify the communication as being part of the cyber-attack
",6,H04_6,2,2.0,99.0,3.0
US9563749B2,1066,Comparing applications and assessing differences ,2017-02-07,"['US10367815B2', 'US20170310703A1', 'US10834061B2', 'US10447708B2', 'US10516682B2', 'US9596257B2', 'US10333990B2', 'US10348771B2', 'US10681078B2', 'EP3028489B1', 'US9930071B2', 'US9740859B2', 'US9571512B2', 'US9582668B2', 'US10489588B2', 'US9967271B2', 'US10762206B2', 'US10515211B2', 'US9846776B1', 'US10742676B2']","
An analysis including a comparison is performed of first and second applications and a determination is made regarding whether the first is a counterfeit version of the second application, or vice-versa. Based on the analysis and comparison, and based on an assessment of the first application, an assessment of the second application may be generated.
",G06,2017,"
an analysis including a comparison is performed of first and second applications and a determination is made regarding whether the first is a counterfeit version of the second application or vice-versa based on the analysis and comparison and based on an assessment of the first application an assessment of the second application may be generated
",6,G06_6,2,9.0,121.0,3.0
US10587646B2,1423,Analyzing DNS requests for anomaly detection ,2020-03-10,"['US9525659B1', 'US10121000B1', 'US10681012B2', 'KR101512253B1', 'US10581908B2', 'US10237283B2', 'US20160294773A1', 'EP3291120A1', 'US10069857B2', 'US10848517B1', 'US10491614B2', 'US10834120B2', 'US10116677B2', 'US10181957B2', 'US10848401B2', 'US9516039B1', 'US20190173904A1', 'US10425383B2', 'US10135863B2', 'US10757101B2', 'US10097566B1', 'US10185761B2', 'US10630706B2']","
A computer-implemented method for detecting anomalies in DNS requests comprises receiving a plurality of DNS requests generated within a predetermined period. The predetermined period includes a plurality of DNS data fragments. The method further includes receiving a first DNS request and selecting a plurality of second DNS requests from the plurality of DNS requests such that each of the second DNS requests is a subset of the first DNS request. The method also includes calculating a count value for each of the DNS data fragments, where each of the count values represents a number of instances the second DNS requests appear within one of the DNS data fragments. In some embodiments, the count values for each of the DNS data fragments can be normalized. The method further includes determining an anomaly trend, for example, based on determining that at least one of the count values exceeds a predetermined threshold value.
",H04,2020,"
a computer-implemented method for detecting anomalies in dns requests comprises receiving a plurality of dns requests generated within a predetermined period the predetermined period includes a plurality of dns data fragments the method further includes receiving a first dns request and selecting a plurality of second dns requests from the plurality of dns requests such that each of the second dns requests is a subset of the first dns request the method also includes calculating a count value for each of the dns data fragments where each of the count values represents a number of instances the second dns requests appear within one of the dns data fragments in some embodiments the count values for each of the dns data fragments can be normalized the method further includes determining an anomaly trend for example based on determining that at least one of the count values exceeds a predetermined threshold value
",6,H04_6,2,2.0,143.0,3.0
US20190130100A1,9291,Systems and methods for detecting data exfiltration ,2019-05-02,"['US10467411B1', 'US10218740B1', 'US9501639B2', 'US20200287925A1', 'US10264104B2', 'US20190260770A1', 'US9344457B2', 'US9762543B2', 'US10728263B1', 'US9311476B2', 'US10375026B2', 'US10268840B2', 'US10270744B2', 'US10567386B2', 'US10193909B2', 'US10121000B1', 'US10581908B2', 'US10735458B1', 'US10193929B2']","
Systems and methods for detecting data exfiltration using domain name system (DNS) queries include, in various embodiments, performing operations that include parsing a DNS query to determine whether that DNS query is likely to contain hidden data that is being exfiltrated from a system or network. Statistical methods can be used to analyze the DNS query to determine a likelihood whether each of a plurality of segments of the DNS query are indicative of data exfiltration methods. If one or multiple DNS queries are deemed suspicious based on the analysis, a security action on the DNS query can be performed, including sending an alert and/or blocking the DNS query from being forwarded.
",G06,2019,"
systems and methods for detecting data exfiltration using domain name system (dns) queries include in various embodiments performing operations that include parsing a dns query to determine whether that dns query is likely to contain hidden data that is being exfiltrated from a system or network statistical methods can be used to analyze the dns query to determine a likelihood whether each of a plurality of segments of the dns query are indicative of data exfiltration methods if one or multiple dns queries are deemed suspicious based on the analysis a security action on the dns query can be performed including sending an alert and/or blocking the dns query from being forwarded
",6,G06_6,2,2.0,99.0,3.0
